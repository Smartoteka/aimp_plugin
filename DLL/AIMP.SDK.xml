<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AIMP.SDK</name>
    </assembly>
    <members>
        <member name="T:AIMP.SDK.ActionManager.IAimpAction">
            <summary>
            Main feature of Action is an ability to display it in hotkey list, and provide an ability to customize it hotkey.
            Implements the <see cref="T:AIMP.SDK.ActionManager.IAimpActionEvent" />
            Implements the <see cref="T:AIMP.SDK.IAimpObject" />
            </summary>
            <seealso cref="T:AIMP.SDK.ActionManager.IAimpActionEvent" />
            <seealso cref="T:AIMP.SDK.IAimpObject" />
        </member>
        <member name="P:AIMP.SDK.ActionManager.IAimpAction.Id">
            <summary>
            Gets or sets the unique action identity, must be unique for all plugins.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:AIMP.SDK.ActionManager.IAimpAction.CustomData">
            <summary>
            Gets or sets the custom data.
            </summary>
            <value>The custom data.</value>
        </member>
        <member name="P:AIMP.SDK.ActionManager.IAimpAction.Name">
            <summary>
            Gets or sets the command name, value is displaying in the hotkey list.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:AIMP.SDK.ActionManager.IAimpAction.GroupName">
            <summary>
            Gets or sets the group name. Optional, can be undefined.
            </summary>
            <value>The name of the group.</value>
        </member>
        <member name="P:AIMP.SDK.ActionManager.IAimpAction.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:AIMP.SDK.ActionManager.IAimpAction" /> is enabled.
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.ActionManager.IAimpAction.DefaultLocalHotKey">
            <summary>
            Gets or sets the default hot key. Can be 0.
            </summary>
            <value>The default local hot key.</value>
        </member>
        <member name="P:AIMP.SDK.ActionManager.IAimpAction.DefaultGlobalHotKey">
            <summary>
            Gets or sets the default global hot key. Can be 0.
            </summary>
            <value>The default global hot key.</value>
        </member>
        <member name="P:AIMP.SDK.ActionManager.IAimpAction.AlternativeGlobalHotKey">
            <summary>
            Gets or sets the alternative global hot key. Can be 0.
            </summary>
            <value>The alternative global hot key.</value>
        </member>
        <member name="T:AIMP.SDK.ActionManager.IAimpActionEvent">
            <summary>
            This interface is simple event handler.
            </summary>
        </member>
        <member name="E:AIMP.SDK.ActionManager.IAimpActionEvent.OnExecute">
            <summary>
            Occurs when action is executing.
            </summary>
        </member>
        <member name="T:AIMP.SDK.ActionManager.IAimpServiceActionManager">
            <summary>
            The service provides an access to actions.
            Implements the <see cref="T:AIMP.SDK.IAimpService" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpService" />
        </member>
        <member name="M:AIMP.SDK.ActionManager.IAimpServiceActionManager.GetById(System.String)">
            <summary>
            Gets the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>AimpActionResult&lt;IAimpAction&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.ActionManager.IAimpServiceActionManager.MakeHotkey(System.Windows.Input.ModifierKeys,System.UInt32)">
            <summary>
            Makes the hotkey.
            </summary>
            <param name="modifiers">The key modifiers <see cref="T:System.Windows.Input.ModifierKeys" />.</param>
            <param name="key">The key.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:AIMP.SDK.ActionManager.IAimpServiceActionManager.Register(AIMP.SDK.ActionManager.IAimpAction)">
            <summary>
            Registers the specified action.
            </summary>
            <param name="action">The action <see cref="T:AIMP.SDK.ActionManager.IAimpAction" />.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.ActionManager.IAimpServiceActionManager.Register(System.Collections.Generic.ICollection{AIMP.SDK.ActionManager.IAimpAction})">
            <summary>
            Registers the specified actions.
            </summary>
            <param name="actions">The collection of <see cref="T:AIMP.SDK.ActionManager.IAimpAction" />.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.ActionManager.IAimpServiceActionManager.CreateAction">
            <summary>
            Creates the Aimp action instance.
            </summary>
            <returns>IAimpAction.</returns>
        </member>
        <member name="T:AIMP.SDK.AimpActionException">
            <summary>
            Class AimpActionException.
            Implements the <see cref="T:System.Exception" />
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:AIMP.SDK.AimpActionException.#ctor(AIMP.SDK.ActionResultType)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.AimpActionException" /> class.
            </summary>
            <param name="resultType">Type of the result.</param>
        </member>
        <member name="M:AIMP.SDK.AimpActionException.#ctor(AIMP.SDK.ActionResultType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.AimpActionException" /> class.
            </summary>
            <param name="resultType">Type of the result.</param>
            <param name="message">The message.</param>
        </member>
        <member name="P:AIMP.SDK.AimpActionException.ResultType">
            <summary>
            Gets the type of the result.
            </summary>
            <value>The type of the result.</value>
        </member>
        <member name="T:AIMP.SDK.AlbumArtManager.IAimpServiceAlbumArtCache">
            <summary>
            This service provides an access to cache manager for album arts.
            </summary>
        </member>
        <member name="M:AIMP.SDK.AlbumArtManager.IAimpServiceAlbumArtCache.Flush(System.String,System.String)">
            <summary>
            Flushes cache for specified artist and album. Both parameters must be specified.
            </summary>
            <param name="album">The album.</param>
            <param name="artist">The artist.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.AlbumArtManager.IAimpServiceAlbumArtCache.Flush2(System.String)">
            <summary>
            Flushes cache for specified FileURI. FileURI can include wildcard characters, for example, an asterisk (*) or a
            question mark (?).
            </summary>
            <param name="fileUri">The file URI.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.AlbumArtManager.IAimpServiceAlbumArtCache.FlushAll">
            <summary>
            Flushes all cache.
            </summary>
            <returns>ActionResultType.</returns>
        </member>
        <member name="T:AIMP.SDK.AlbumArtManager.IAimpAlbumArtSearchOptions">
            <summary>
            The search options for album art.
            </summary>
        </member>
        <member name="P:AIMP.SDK.AlbumArtManager.IAimpAlbumArtSearchOptions.FindInFiles">
            <summary>
            Gets or sets a value indicating whether allow an ability to find album art in files.
            </summary>
            <value><c>true</c> if [find in files]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.AlbumArtManager.IAimpAlbumArtSearchOptions.FindInInternet">
            <summary>
            Gets or sets a value indicating whether allow an ability to find album art in internet.
            </summary>
            <value><c>true</c> if [find in internet]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.AlbumArtManager.IAimpAlbumArtSearchOptions.FileMasks">
            <summary>
            Gets or sets the file masks for searching.
            <para>
            List of templates (without extensions) for searching.
            Each value must be separated from others via ";".
            </para>
            </summary>
            <value>The file masks.</value>
        </member>
        <member name="P:AIMP.SDK.AlbumArtManager.IAimpAlbumArtSearchOptions.FileExtensions">
            <summary>
            Gets or sets the available cover file extensions.
            <para>
            List of extensions that are supported.
            Each value must be separated from others via ";".
            </para>
            </summary>
            <value>The file extensions.</value>
        </member>
        <member name="P:AIMP.SDK.AlbumArtManager.IAimpAlbumArtSearchOptions.MaxFileSize">
            <summary>
            Gets or sets the maximum size of the file which can be downloaded from internet.
            0 - size is unlimited.
            </summary>
            <value>The maximum size of the file.</value>
        </member>
        <member name="T:AIMP.SDK.AlbumArtManager.IAimpExtensionAlbumArtCatalog">
            <summary>
            This interface is a extension for the IAimpServiceAlbumArt service.
            It allows for the plugin to add a menu item to the context menu for external album art catalogs.
            </summary>
            <seealso cref="T:AIMP.SDK.AlbumArtManager.IAimpExtensionAlbumArtCatalog2" />
            <seealso cref="T:AIMP.SDK.IAimpExtension" />
        </member>
        <member name="M:AIMP.SDK.AlbumArtManager.IAimpExtensionAlbumArtCatalog.GetIcon">
            <summary>
            Gets icon for menu item, icon must be 16x16.
            </summary>
            <returns>AimpActionResult&lt;Bitmap&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.AlbumArtManager.IAimpExtensionAlbumArtCatalog.GetName">
            <summary>
            Gets the catalog name.
            </summary>
            <returns>AimpActionResult&lt;System.String&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.AlbumArtManager.IAimpExtensionAlbumArtCatalog.Show(System.String,System.String,System.String)">
            <summary>
            This method will be called on menu item click.
            </summary>
            <param name="fileUrl">The file URL.</param>
            <param name="artist">Optional. The artist. , can be null</param>
            <param name="album">Optional. The album.</param>
            <returns>AimpActionResult&lt;Bitmap&gt;.</returns>
        </member>
        <member name="T:AIMP.SDK.AlbumArtManager.IAimpExtensionAlbumArtCatalog2">
            <summary>
            It is the second edition of the <see cref="T:AIMP.SDK.AlbumArtManager.IAimpExtensionAlbumArtCatalog" /> interface.
            </summary>
        </member>
        <member name="M:AIMP.SDK.AlbumArtManager.IAimpExtensionAlbumArtCatalog2.Show(AIMP.SDK.FileManager.IAimpFileInfo)">
            <summary>
            This method will be called on menu item click.
            </summary>
            <param name="fileInfo">The file information.</param>
            <returns>AimpActionResult&lt;Bitmap&gt;.</returns>
        </member>
        <member name="T:AIMP.SDK.AlbumArtManager.AimpAlbumArtProviderCategory">
            <summary>
            Enum AimpAlbumArtProviderCategory
            </summary>
        </member>
        <member name="F:AIMP.SDK.AlbumArtManager.AimpAlbumArtProviderCategory.AIMP_ALBUMART_PROVIDER_CATEGORY_TAGS">
            <summary>
            The aimp albumart provider category tags
            </summary>
        </member>
        <member name="F:AIMP.SDK.AlbumArtManager.AimpAlbumArtProviderCategory.AIMP_ALBUMART_PROVIDER_CATEGORY_FILE">
            <summary>
            The aimp albumart provider category file
            </summary>
        </member>
        <member name="F:AIMP.SDK.AlbumArtManager.AimpAlbumArtProviderCategory.AIMP_ALBUMART_PROVIDER_CATEGORY_INTERNET">
            <summary>
            The aimp albumart provider category internet
            </summary>
        </member>
        <member name="T:AIMP.SDK.AlbumArtManager.IAimpExtensionAlbumArtProvider">
            <summary>
            Interface allows for the plugin to register custom album art provider.
            </summary>
            <seealso cref="T:AIMP.SDK.AlbumArtManager.IAimpExtensionAlbumArtProvider2" />
            <seealso cref="T:AIMP.SDK.IAimpExtension" />
        </member>
        <member name="M:AIMP.SDK.AlbumArtManager.IAimpExtensionAlbumArtProvider.Get(System.String,System.String,System.String,AIMP.SDK.AlbumArtManager.IAimpAlbumArtSearchOptions)">
            <summary>
            Gets the album art image.
            </summary>
            <param name="fileUrl">The file URL.</param>
            <param name="artist">Optional. The artist.</param>
            <param name="album">Optional.The album.</param>
            <param name="options">The search options <seealso cref="T:AIMP.SDK.AlbumArtManager.IAimpAlbumArtSearchOptions" />.</param>
            <returns>AimpActionResult&lt;Bitmap&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.AlbumArtManager.IAimpExtensionAlbumArtProvider.GetCategory">
            <summary>
            Gets the category of provider.
            </summary>
            <returns>The <seealso cref="T:AIMP.SDK.AlbumArtManager.AimpAlbumArtProviderCategory" /></returns>
        </member>
        <member name="T:AIMP.SDK.AlbumArtManager.IAimpExtensionAlbumArtProvider2">
            <summary>
            It is the second edition of the <seealso cref="T:AIMP.SDK.AlbumArtManager.IAimpExtensionAlbumArtProvider" /> interface.
            </summary>
        </member>
        <member name="M:AIMP.SDK.AlbumArtManager.IAimpExtensionAlbumArtProvider2.Get(AIMP.SDK.FileManager.IAimpFileInfo,AIMP.SDK.AlbumArtManager.IAimpAlbumArtSearchOptions)">
            <summary>
            Gets the album art image.
            </summary>
            <param name="fileInfo">The file information.</param>
            <param name="options">The search options <seealso cref="T:AIMP.SDK.AlbumArtManager.IAimpAlbumArtSearchOptions" />.</param>
            <returns>AimpActionResult&lt;Bitmap&gt;.</returns>
        </member>
        <member name="T:AIMP.SDK.AlbumArtManager.AimpFindCovertArtType">
            <summary>
            Enum AimpFindCovertArtType
            </summary>
        </member>
        <member name="F:AIMP.SDK.AlbumArtManager.AimpFindCovertArtType.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:AIMP.SDK.AlbumArtManager.AimpFindCovertArtType.AIMP_SERVICE_ALBUMART_FLAGS_IGNORECACHE">
            <summary>
            The aimp service albumart flags ignorecache
            </summary>
        </member>
        <member name="F:AIMP.SDK.AlbumArtManager.AimpFindCovertArtType.AIMP_SERVICE_ALBUMART_FLAGS_ORIGINAL">
            <summary>
            The aimp service albumart flags original
            </summary>
        </member>
        <member name="F:AIMP.SDK.AlbumArtManager.AimpFindCovertArtType.AIMP_SERVICE_ALBUMART_FLAGS_WAITFOR">
            <summary>
            The aimp service albumart flags waitfor
            </summary>
        </member>
        <member name="T:AIMP.SDK.AlbumArtManager.AimpGetAlbumArtEventArgs">
            <summary>
            Get album event arguments.
            Implements the <see cref="T:System.EventArgs" />
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="P:AIMP.SDK.AlbumArtManager.AimpGetAlbumArtEventArgs.CoverImage">
            <summary>
            Gets or sets the cover image.
            </summary>
            <value>The cover image.</value>
        </member>
        <member name="T:AIMP.SDK.AlbumArtManager.IAimpServiceAlbumArt">
            <summary>
            Service provides an ability to get album art for specified file or/and album.
            AlbumArt search process will run in separate thread, and plugin will receive a notification about the end of
            operation via callback function.
            Implements the <see cref="T:AIMP.SDK.AlbumArtManager.IAimpAlbumArtSearchOptions" />
            Implements the <see cref="T:AIMP.SDK.IAimpService" />
            </summary>
            <seealso cref="T:AIMP.SDK.AlbumArtManager.IAimpAlbumArtSearchOptions" />
            <seealso cref="T:AIMP.SDK.IAimpService" />
        </member>
        <member name="E:AIMP.SDK.AlbumArtManager.IAimpServiceAlbumArt.Completed">
            <summary>
            Occurs when search was completed.
            </summary>
        </member>
        <member name="M:AIMP.SDK.AlbumArtManager.IAimpServiceAlbumArt.Get(System.String,System.String,System.String,AIMP.SDK.AlbumArtManager.AimpFindCovertArtType,System.Object)">
            <summary>
            Gets the image.
            </summary>
            <param name="fileUrl">The file URL.</param>
            <param name="artist">Optional. The artist.</param>
            <param name="album">Optional. The album.</param>
            <param name="flags">Optional. The <see cref="T:AIMP.SDK.AlbumArtManager.AimpFindCovertArtType" />.</param>
            <param name="userData">The user data.</param>
            <returns>AimpActionResult&lt;System.Int32&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.AlbumArtManager.IAimpServiceAlbumArt.Get2(AIMP.SDK.FileManager.IAimpFileInfo,AIMP.SDK.AlbumArtManager.AimpFindCovertArtType,System.Object)">
            <summary>
            Gets the image.
            </summary>
            <param name="fileInfo">The file information.</param>
            <param name="flags">The flags.</param>
            <param name="userData">The user data.</param>
            <returns>AimpActionResult&lt;System.Int32&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.AlbumArtManager.IAimpServiceAlbumArt.Cancel(System.Int32,AIMP.SDK.AlbumArtManager.AimpFindCovertArtType)">
            <summary>
            Cancels the get cover art request by specified task identifier.
            </summary>
            <param name="taskId">The task identifier.</param>
            <param name="flags">The flags.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.Core.IAimpServiceShutdown">
            <summary>
            Interface IAIMPServiceShutdown provides an ability to shutdown Windows or the application.
            </summary>
        </member>
        <member name="M:AIMP.SDK.Core.IAimpServiceShutdown.Restart(System.String)">
            <summary>
            Restarts the specified arguments.
            </summary>
            <param name="arguments">Command line parameters, can be null.</param>
        </member>
        <member name="M:AIMP.SDK.Core.IAimpServiceShutdown.Shutdown(AIMP.SDK.Core.ShutdownType)">
            <summary>
            Shutdowns the specified shutdown type.
            <p>
            Flags Hibernate, Shutdown, LogOff, Reboot and Sleep must not be used at same time.
            </p>
            <p>
            Flag CloseApp can be used only with Sleep or Hibernate.
            </p>
            </summary>
            <param name="shutdownType">Type of the shutdown.</param>
        </member>
        <member name="T:AIMP.SDK.Core.IAimpServiceVersionInfo">
            <summary>
            Service provide ability to get information about program version.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:AIMP.SDK.Core.IAimpServiceVersionInfo.FormatInfo" -->
        <member name="P:AIMP.SDK.Core.IAimpServiceVersionInfo.BuildDate">
            <summary>
            Gets the build date.
            </summary>
        </member>
        <member name="P:AIMP.SDK.Core.IAimpServiceVersionInfo.BuildState">
            <summary>
            Gets the state of the build.
            </summary>
        </member>
        <member name="P:AIMP.SDK.Core.IAimpServiceVersionInfo.BuildNumber">
            <summary>
            Gets the build number.
            </summary>
        </member>
        <member name="P:AIMP.SDK.Core.IAimpServiceVersionInfo.VersionId">
            <summary>
            Gets the version identifier.
            Format XYYZ. Where X - major version. YY - minor version. Z - edition version.
            <p>
            Example:
            3551 -> 3.55.1
            10051 -> 10.05.1
            0010 -> 0.01.0
            </p>
            </summary>
        </member>
        <member name="T:AIMP.SDK.Extensions">
            <summary>
            Class Extensions.
            </summary>
        </member>
        <member name="M:AIMP.SDK.Extensions.CreateAimpObject``1(AIMP.SDK.IAimpCore)">
            <summary>
            Creates the aimp object.
            </summary>
            <typeparam name="TAimpObject">The type of the t aimp object.</typeparam>
            <param name="core">The core.</param>
            <returns>AimpActionResult&lt;TAimpObject&gt;.</returns>
        </member>
        <member name="P:AIMP.SDK.IAimpDPIAware.DPI">
            <summary>
            Gets or sets the dpi.
            </summary>
            <value>The dpi.</value>
        </member>
        <member name="T:AIMP.SDK.Objects.IAimpFileStream">
            <summary>
            IAimpFileStream is extended variant of IAimpStream specially for file-based streams.
            Implements the <see cref="T:AIMP.SDK.IAimpStream" /></summary>
            <seealso cref="T:AIMP.SDK.IAimpStream" />
        </member>
        <member name="M:AIMP.SDK.Objects.IAimpFileStream.GetClipping">
            <summary>
            If file is clipped the method will return clipping bounds. See the IAimpServiceFileStreaming.CreateStreamForFile.
            </summary>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Objects.IAimpFileStream.GetFileName">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:AIMP.SDK.Objects.IAimpMemoryStream">
            <summary>
            Interface IAimpMemoryStream
            Implements the <see cref="T:AIMP.SDK.IAimpStream" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpStream" />
        </member>
        <member name="M:AIMP.SDK.Objects.IAimpMemoryStream.GetData">
            <summary>
            Gets the data.
            </summary>
            <returns>AimpActionResult&lt;System.Byte[]&gt;.</returns>
        </member>
        <member name="T:AIMP.SDK.Objects.AimpStringCase">
            <summary>
            Enum AimpStringCase
            </summary>
        </member>
        <member name="F:AIMP.SDK.Objects.AimpStringCase.Default">
            <summary>
            The default
            </summary>
        </member>
        <member name="F:AIMP.SDK.Objects.AimpStringCase.Lower">
            <summary>
            The lower
            </summary>
        </member>
        <member name="F:AIMP.SDK.Objects.AimpStringCase.Upper">
            <summary>
            The upper
            </summary>
        </member>
        <member name="F:AIMP.SDK.Objects.AimpStringCase.AllWordsWithCapicalLetter">
            <summary>
            All words with capical letter
            </summary>
        </member>
        <member name="F:AIMP.SDK.Objects.AimpStringCase.FirstWordWithCapicalLetter">
            <summary>
            The first word with capical letter
            </summary>
        </member>
        <member name="T:AIMP.SDK.Objects.AimpStringFindFlags">
            <summary>
            Enum AimpStringFindFlags
            </summary>
        </member>
        <member name="F:AIMP.SDK.Objects.AimpStringFindFlags.IgnoreCase">
            <summary>
            The ignore case
            </summary>
        </member>
        <member name="F:AIMP.SDK.Objects.AimpStringFindFlags.WholeWord">
            <summary>
            The whole word
            </summary>
        </member>
        <member name="T:AIMP.SDK.Objects.IAimpString">
            <summary>
            Interface IAimpString
            </summary>
        </member>
        <member name="M:AIMP.SDK.Objects.IAimpString.GetChar(System.Int32,System.Char@)">
            <summary>
            Gets the character.
            </summary>
            <param name="index">The index.</param>
            <param name="c">The c.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.Objects.IAimpString.GetData">
            <summary>
            Gets the data.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:AIMP.SDK.Objects.IAimpString.GetLength">
            <summary>
            Gets the length.
            </summary>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:AIMP.SDK.Objects.IAimpString.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:AIMP.SDK.Objects.IAimpString.SetChar(System.Int32,System.Char)">
            <summary>
            Sets the character.
            </summary>
            <param name="index">The index.</param>
            <param name="c">The c.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.Objects.IAimpString.SetData(System.String,System.Int32)">
            <summary>
            Sets the data.
            </summary>
            <param name="chars">The chars.</param>
            <param name="charsCount">The chars count.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.Objects.IAimpString.Add(AIMP.SDK.Objects.IAimpString)">
            <summary>
            Adds the specified string.
            </summary>
            <param name="str">The string.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.Objects.IAimpString.Add(System.String,System.Int32)">
            <summary>
            Adds the specified chars.
            </summary>
            <param name="chars">The chars.</param>
            <param name="charsCount">The chars count.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.Objects.IAimpString.ChangeCase(AIMP.SDK.Objects.AimpStringCase)">
            <summary>
            Changes the case.
            </summary>
            <param name="mode">The mode.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.Objects.IAimpString.Clone(AIMP.SDK.Objects.IAimpString@)">
            <summary>
            Clones the specified string.
            </summary>
            <param name="str">The string.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.Objects.IAimpString.Compare(AIMP.SDK.Objects.IAimpString,System.Int32@,System.Boolean)">
            <summary>
            Compares the specified string.
            </summary>
            <param name="str">The string.</param>
            <param name="compareResult">The compare result.</param>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.Objects.IAimpString.Compare(System.String,System.Int32,System.Int32@,System.Boolean)">
            <summary>
            Compares the specified chars.
            </summary>
            <param name="chars">The chars.</param>
            <param name="charsCount">The chars count.</param>
            <param name="compareResult">The compare result.</param>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.Objects.IAimpString.Delete(System.Int32,System.Int32)">
            <summary>
            Deletes the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="count">The count.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.Objects.IAimpString.Find(AIMP.SDK.Objects.IAimpString,System.Int32@,AIMP.SDK.Objects.AimpStringFindFlags,System.Int32)">
            <summary>
            Finds the specified string.
            </summary>
            <param name="str">The string.</param>
            <param name="index">The index.</param>
            <param name="flags">The flags.</param>
            <param name="startFromIndex">The start from index.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.Objects.IAimpString.Find(System.String,System.Int32,System.Int32@,AIMP.SDK.Objects.AimpStringFindFlags,System.Int32)">
            <summary>
            Finds the specified chars.
            </summary>
            <param name="chars">The chars.</param>
            <param name="charsCount">The chars count.</param>
            <param name="index">The index.</param>
            <param name="flags">The flags.</param>
            <param name="startFromIndex">The start from index.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.Objects.IAimpString.Insert(System.Int32,AIMP.SDK.Objects.IAimpString)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="str">The string.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.Objects.IAimpString.Insert(System.Int32,System.String,System.Int32)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="chars">The chars.</param>
            <param name="charsCount">The chars count.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.Objects.IAimpString.Replace(AIMP.SDK.Objects.IAimpString,AIMP.SDK.Objects.IAimpString,System.Int32)">
            <summary>
            Replaces the specified old pattern.
            </summary>
            <param name="oldPattern">The old pattern.</param>
            <param name="newPattern">The new pattern.</param>
            <param name="flags">The flags.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.Objects.IAimpString.Replace(System.String,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Replaces the specified old pattern chars.
            </summary>
            <param name="oldPatternChars">The old pattern chars.</param>
            <param name="oldPatternCharsCount">The old pattern chars count.</param>
            <param name="newPatternChars">The new pattern chars.</param>
            <param name="newPatternCharsCount">The new pattern chars count.</param>
            <param name="flags">The flags.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.Objects.IAimpString.SubString(System.Int32,System.Int32,AIMP.SDK.Objects.IAimpString@)">
            <summary>
            Subs the string.
            </summary>
            <param name="index">The index.</param>
            <param name="count">The count.</param>
            <param name="str">The string.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="T:AIMP.SDK.IAimpService">
            <summary>
            Interface IAimpService.
            </summary>
        </member>
        <member name="P:AIMP.SDK.IAimpService.IsExists">
            <summary>
            Gets a value indicating whether this service is exists.
            </summary>
        </member>
        <member name="T:AIMP.SDK.Lyrics.LyricsProviderCategory">
            <summary>
            Enum LyricsProviderCategory
            </summary>
        </member>
        <member name="F:AIMP.SDK.Lyrics.LyricsProviderCategory.File">
            <summary>
            The file
            </summary>
        </member>
        <member name="F:AIMP.SDK.Lyrics.LyricsProviderCategory.Internet">
            <summary>
            The internet
            </summary>
        </member>
        <member name="T:AIMP.SDK.Lyrics.IAimpExtensionLyricsProvider">
            <summary>
            Interface IAimpExtensionLyricsProvider
            Implements the <see cref="T:AIMP.SDK.IAimpExtension" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpExtension" />
        </member>
        <member name="P:AIMP.SDK.Lyrics.IAimpExtensionLyricsProvider.Category">
            <summary>
            Gets the category.
            </summary>
            <value>The category.</value>
        </member>
        <member name="M:AIMP.SDK.Lyrics.IAimpExtensionLyricsProvider.Get(AIMP.SDK.Threading.IAimpTaskOwner,AIMP.SDK.FileManager.IAimpFileInfo,AIMP.SDK.Lyrics.LyricsFlags,AIMP.SDK.Lyrics.IAimpLyrics)">
            <summary>
            Gets the specified owner.
            </summary>
            <param name="owner">The owner.</param>
            <param name="fileInfo">The file information.</param>
            <param name="flags">The flags.</param>
            <param name="lyrics">The lyrics.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.Lyrics.LyricsType">
            <summary>
            Enum LyricsType
            </summary>
        </member>
        <member name="F:AIMP.SDK.Lyrics.LyricsType.Unknown">
            <summary>
            The unknown
            </summary>
        </member>
        <member name="F:AIMP.SDK.Lyrics.LyricsType.UnSynced">
            <summary>
            The unsynced
            </summary>
        </member>
        <member name="F:AIMP.SDK.Lyrics.LyricsType.Synced">
            <summary>
            The synced
            </summary>
        </member>
        <member name="T:AIMP.SDK.Lyrics.LyricsFormat">
            <summary>
            Enum LyricsFormat
            </summary>
        </member>
        <member name="F:AIMP.SDK.Lyrics.LyricsFormat.Txt">
            <summary>
            The text
            </summary>
        </member>
        <member name="F:AIMP.SDK.Lyrics.LyricsFormat.Lrc">
            <summary>
            The LRC
            </summary>
        </member>
        <member name="F:AIMP.SDK.Lyrics.LyricsFormat.Srt">
            <summary>
            The SRT
            </summary>
        </member>
        <member name="T:AIMP.SDK.Lyrics.IAimpLyrics">
            <summary>
            Interface IAimpLyrics
            Implements the <see cref="T:AIMP.SDK.IAimpObject" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpObject" />
        </member>
        <member name="P:AIMP.SDK.Lyrics.IAimpLyrics.Text">
            <summary>
            Gets or sets the song text without tags.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:AIMP.SDK.Lyrics.IAimpLyrics.Author">
            <summary>
            Gets or sets the text author. Optional.
            </summary>
            <value>The author.</value>
        </member>
        <member name="P:AIMP.SDK.Lyrics.IAimpLyrics.Album">
            <summary>
            Get or sets the album. Optional.
            </summary>
            <value>The album.</value>
        </member>
        <member name="P:AIMP.SDK.Lyrics.IAimpLyrics.Title">
            <summary>
            Gets or sets the song title. Optional.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:AIMP.SDK.Lyrics.IAimpLyrics.Creator">
            <summary>
            Gets or sets the creator. Optional.
            </summary>
            <value>The creator.</value>
        </member>
        <member name="P:AIMP.SDK.Lyrics.IAimpLyrics.Application">
            <summary>
            Gets or sets the application which was used. Optional.
            </summary>
            <value>The application.</value>
        </member>
        <member name="P:AIMP.SDK.Lyrics.IAimpLyrics.ApplicationVersion">
            <summary>
            Gets or sets the application version.
            </summary>
            <value>The application version.</value>
        </member>
        <member name="P:AIMP.SDK.Lyrics.IAimpLyrics.Type">
            <summary>
            Gets or sets the lyrics type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:AIMP.SDK.Lyrics.IAimpLyrics.Offset">
            <summary>
            Gets or sets common offset in milliseconds.
            </summary>
            <value>The offset.</value>
        </member>
        <member name="M:AIMP.SDK.Lyrics.IAimpLyrics.Assign(AIMP.SDK.Lyrics.IAimpLyrics)">
            <summary>
            Copy values from source.
            </summary>
            <param name="source">The source lyrics.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Lyrics.IAimpLyrics.Clone">
            <summary>
            Creates a copy of current instance.
            </summary>
            <returns>AimpActionResult&lt;IAimpLyrics&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.Lyrics.IAimpLyrics.Add(System.Int32,System.Int32,System.String)">
            <summary>
            Adds time interval.
            </summary>
            <param name="timeStart">In milliseconds.</param>
            <param name="timeFinish">In milliseconds.</param>
            <param name="text">The text.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Lyrics.IAimpLyrics.Delete(System.Int32)">
            <summary>
            Deletes the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Lyrics.IAimpLyrics.Find(System.Int32,System.Int32)">
            <summary>
            Finds the specified time.
            </summary>
            <param name="time">The time.</param>
            <param name="index">The index.</param>
            <returns>AimpActionResult&lt;System.String&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.Lyrics.IAimpLyrics.Get(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="timeStart">The time start.</param>
            <param name="timeFinish">The time finish.</param>
            <returns>AimpActionResult&lt;System.String&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.Lyrics.IAimpLyrics.GetCount">
            <summary>
            Gets the count.
            </summary>
            <returns>AimpActionResult&lt;System.Int32&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.Lyrics.IAimpLyrics.LoadFromFile(System.String)">
            <summary>
            Loads lyrics from file.
            </summary>
            <param name="virtualFileName">Virtual file name.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Lyrics.IAimpLyrics.LoadFromStream(AIMP.SDK.IAimpStream,AIMP.SDK.Lyrics.LyricsFormat)">
            <summary>
            Loads lyrics from stream.
            </summary>
            <param name="stream">File stream.</param>
            <param name="format">Lyrics format <seealso cref="T:AIMP.SDK.Lyrics.LyricsFormat" />.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Lyrics.IAimpLyrics.LoadFromString(System.String,AIMP.SDK.Lyrics.LyricsFormat)">
            <summary>
            Loads lyrics from string.
            </summary>
            <param name="lyrics">String with lyrics.</param>
            <param name="format">Lyrics format <seealso cref="T:AIMP.SDK.Lyrics.LyricsFormat" />.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Lyrics.IAimpLyrics.SaveToFile(System.String)">
            <summary>
            Saves lyrics to file.
            </summary>
            <param name="fileUri">File.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Lyrics.IAimpLyrics.SaveToStream(AIMP.SDK.IAimpStream,AIMP.SDK.Lyrics.LyricsFormat)">
            <summary>
            Saves lyrics to stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="format">Lyrics format <seealso cref="T:AIMP.SDK.Lyrics.LyricsFormat" />.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Lyrics.IAimpLyrics.SaveToString(AIMP.SDK.Lyrics.LyricsFormat)">
            <summary>
            Saves lyrics to string.
            </summary>
            <param name="format">Lyrics format <seealso cref="T:AIMP.SDK.Lyrics.LyricsFormat" />.</param>
            <returns>AimpActionResult&lt;System.String&gt;.</returns>
        </member>
        <member name="T:AIMP.SDK.Lyrics.LyricsFlags">
            <summary>
            Enum LyricsFlags
            </summary>
        </member>
        <member name="F:AIMP.SDK.Lyrics.LyricsFlags.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:AIMP.SDK.Lyrics.LyricsFlags.Nocache">
            <summary>
            Search without cache.
            </summary>
        </member>
        <member name="F:AIMP.SDK.Lyrics.LyricsFlags.WaitFor">
            <summary>
            The method will not return a control until the operation is completed.
            </summary>
        </member>
        <member name="T:AIMP.SDK.Lyrics.AimpServiceLyricsReceive">
            <summary>
            Delegate AimpServiceLyricsReceive
            </summary>
            <param name="lyrics">The lyrics.</param>
            <param name="userData">The user data.</param>
        </member>
        <member name="T:AIMP.SDK.Lyrics.IAimpServiceLyrics">
            <summary>
            Allowed access to the song text.
            Implements the <see cref="T:AIMP.SDK.IAimpService" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpService" />
        </member>
        <member name="M:AIMP.SDK.Lyrics.IAimpServiceLyrics.Get(AIMP.SDK.FileManager.IAimpFileInfo,AIMP.SDK.Lyrics.LyricsFlags,System.Object)">
            <summary>
            Gets a lyrics for file.
            </summary>
            <param name="fileInfo">The file info <see cref="T:AIMP.SDK.FileManager.IAimpFileInfo" />.</param>
            <param name="flags">The lyrics flags <see cref="T:AIMP.SDK.Lyrics.LyricsFlags" />.</param>
            <param name="userData">A user data passed to function.</param>
            <returns>Return the <see cref="T:AIMP.SDK.AimpActionResult" /> with async task id.</returns>
        </member>
        <member name="M:AIMP.SDK.Lyrics.IAimpServiceLyrics.Cancel(System.IntPtr,AIMP.SDK.Lyrics.LyricsFlags)">
            <summary>
            Aborts a current active task.
            </summary>
            <param name="taskId">The task identifier.</param>
            <param name="flags">The flags.</param>
            <returns><see cref="T:AIMP.SDK.AimpActionResult" /></returns>
        </member>
        <member name="E:AIMP.SDK.Lyrics.IAimpServiceLyrics.LyricsReceive">
            <summary>
            Occurs when [lyrics receive].
            </summary>
        </member>
        <member name="T:AIMP.SDK.MessageDispatcher.Constants">
            <summary>
            Class Constants.
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.Constants.MessageCommandBase">
            <summary>
            The message command base
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.Constants.BaseEvent">
            <summary>
            The base event
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.Constants.MessagePropertyBase">
            <summary>
            The message property base
            </summary>
        </member>
        <member name="T:AIMP.SDK.MessageDispatcher.AimpCoreMessageType">
            <summary>
            Core message type.
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdStateGet">
            <summary>
            This messages provides an ability to check command accessibility.
            <note><li>Param1: Command ID. See the "Commands" charter.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdQFIPlaybackTrack">
            <summary>
            Show the "Quick File Information" card for playable file.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdShowNotification">
            <summary>
            Show custom text in the running line or text box.
            <note><li>
            Param1: 0 - text will be automatically hidden (delay before hiding is 2 seconds), 1 - text will be hidden
            manually (you must send message with Param2 set to nil / null).
            </li><li>
            Param2: Showing text: pointer to first element of null-terminating widechar array Hiding text: nil / null
            (for Param set to 1 only)
            </li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdTogglePartRepeat">
            <summary>
            Toggles state of the "Repeat part A-B" function.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdAbout">
            <summary>
            Show the "About" dialog.
            <note>
            Param1 - Not used.
            Param2 - Not used.
            </note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdOptions">
            <summary>
            Show options dialog.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdPlugins">
            <summary>
            Show options dialog and activate the "Plugins" sheet.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdQuit">
            <summary>
            Close the application.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdScheduler">
            <summary>
            Show settings dialog of the "Simple Scheduler" plugin.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdVisualNext">
            <summary>
            Next visualization.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdVisualPrev">
            <summary>
            Previous visualization.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdPlay">
            <summary>
            If player is stopped - starts playback. If player is paused - resumes playback. If player is playing - start
            playing from beginning.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdPlayPause">
            <summary>
            If player is stopped - starts playback. If player is paused - resumes playback. If player is playing - pauses
            playback.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdPlayPrevPlaylist">
            <summary>
            Start playback of previous playing playlist.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdPause">
            <summary>
            Pause / Resume.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdStop">
            <summary>
            Stop playback.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdNext">
            <summary>
            Jump to next track.
            <note>
            Note that function doesn't check if file playback really started. It just put the file into queue of loading
            thread (Refer to the AIMP_MSG_EVENT_STREAM_START).
            </note><p>
            Param1 - Not used.
            Param2 - Not used.
            </p>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdPrev">
            <summary>
            Previous track. Note 1: Note that function doesn't check if file playback really started. It just put the file into
            queue of loading thread (Refer to the AIMP_MSG_EVENT_STREAM_START).
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdOpenFiles">
            <summary>
            Show the "Open files" dialog.
            <p>
            Param1 - Not used.
            Param2 - Not used.
            </p>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdOpenFolders">
            <summary>
            Show the "Open folders" dialog.
            <p>
            Param1 - Not used.
            Param2 - Not used.
            </p>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdOpenPlaylists">
            <summary>
            Show the "Open Playlists" dialog.
            <p>
            Param1 - Not used.
            Param2 - Not used.
            </p>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdSavePlaylists">
            <summary>
            Show the "Save Playlist" dialog
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdBookmarks">
            <summary>
            Show the "Bookmarks Manager" dialog.
            <note>
            Param1 - Not used.
            Param2 - Not used.
            </note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdBookmarksAdd">
            <summary>
            Add file(s) to bookmarks.
            <note>
            Param1 - 0 - add playing file, 1 - add selected files from active playlist
            Param2 - Not used.
            </note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdPlaylistRescan">
            <summary>
            Reload file tags for all tracks in active playlist
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdPlaylistFocusPlaying">
            <summary>
            Activate playable playlist and focus playable file.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdPlaylistDeleteAll">
            <summary>
            Delete all tracks from active playlist.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdPlaylistDeleteNonExists">
            <summary>
            Remove non exists tracks from active playlist.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdPlaylistDeleteNonSelected">
            <summary>
            Remove all tracks from active playlist except selected.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdPlaylistDeletePlayingFromHDD">
            <summary>
            Remove playable file from disk drive.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdPlaylistDeleteSelected">
            <summary>
            Delete selected tracks from active playlist.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdDeleteSelectedFromHDD">
            <summary>
            Delete selected tracks from disk drive.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdPlaylistDeleteSwitchedOff">
            <summary>
            Delete switched off tracks from active playlist.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdPlaylistDeleteSwitchedOffFromHDD">
            <summary>
            Delete switched off tracks from disk drive.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdPlaylistDeleteDuplicates">
            <summary>
            Delete duplicate tracks from active playlist. Tracks will be compared by full file name.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdPlaylistSortByArtist">
            <summary>
            Sort tracks in active playlist by artist field.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdPlaylistSortByTitle">
            <summary>
            Sort tracks in active playlist by title.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdPlaylistSortByPath">
            <summary>
            Sort tracks in active playlist by path.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdPlaylistSortByDuration">
            <summary>
            Sort tracks in active playlist by duration field.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdPlaylistSortRandomize">
            <summary>
            Shuffle tracks in active playlists.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdPlaylistSortInvert">
            <summary>
            Invert tracks in active playlists.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdPlaylistSwitchOn">
            <summary>
            Switch on auto playing marker for selected tracks in active playlist
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdPlaylistSwitchOff">
            <summary>
            Switch off auto playing marker for selected tracks in active playlist.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdAddFiles">
            <summary>
            Show the "File Adding" dialog.
            <note>
            Param1 - Not used.
            Param2 - Not used.
            </note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdAddFolders">
            <summary>
            Show the "Folder adding" dialog.
            <note>
            Param1 - Not used.
            Param2 - Not used.
            </note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdAddPlaylists">
            <summary>
            Show the "Playlists adding" dialog.
            <note>
            Param1 - Not used.
            Param2 - Not used.
            </note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdAddUrl">
            <summary>
            Show the "Add URL" dialog.
            <note>
            Param1 - Not used.
            Param2 - Not used.
            </note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdQTEPlayingTrack">
            <summary>
            Show the "File Information" dialog for playable track.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdSearch">
            <summary>
            Show the "Advanced Search" dialog.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdDSPManager">
            <summary>
            Show the "DSP Manager" dialog.
            <note>
            Param1 - Index of tab sheet to active, 0..3. 0 - Common settings (default) 1 - Equalizer 2 - Volume
            normalization 3 - Cross mixing settings
            Param2 - Not used.
            </note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdDSPManagerEQ">
            <summary>
            The command DSP manager eq
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdPlaylistReloadFromPreimage">
            <summary>
            Synchronize active playlist with preimage if it presents.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdDspManagerCrossmixing">
            <summary>
            The command DSP manager crossmixing
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdVisualStart">
            <summary>
            Starts previous selected by user visualization. If visualization is not found - first will be started.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdVisualStop">
            <summary>
            Stop visualization.
            <note><li>Param1 - Not used.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdPlaylistRescanSelected">
            <summary>
            The command playlist rescan selected.
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.CmdQFI">
            <summary>
            Extended control of "Quick File Info" card that displaying information about playing file
            <note>AParam2: pointer to TAIMPQuickFileInfoParams</note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.EventCmdState">
            <summary>
            Command state has been changed.
            <note><li>Param1: Command ID. See the "Commands" charter.</li><li>Param2 - Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.EventOptions">
            <summary>
            Event occurs when some settings have been changed.
            <note><li>Param1: Not used.</li><li>Param2: Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.EventStreamStart">
            <summary>
            Event occurs when playback of track has been started.
            <note><li>Param1: Not used.</li><li>Param2: Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.EventStreamStartSubtrack">
            <summary>
            This event like to AIMP_MSG_EVENT_STREAM_START, but it occurs when playing radio stream and track has been changed.
            <note><li>Param1: Not used.</li><li>Param2: Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.EventStreamEnd">
            <summary>
            Event occurs when track has been finished.
            <note><li>Param1: Contains zero or combination of following flags: AIMP_MES_END_OF_QUEUE, AIMP_MES_END_OF_PLAYLIST.</li><li>Param2: Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.EventPlayerState">
            <summary>
            Event occurs when player state has been changed.
            <note><li>Param1: 0 - Stopped, 1 - Paused, 2 - Playing.</li><li>Param2: Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.EventPropertyValue">
            <summary>
            Event occurs when property value has been changed. See the "Properties" charter.
            <note><li>Param1: Property ID.</li><li>Param2: This parameter is same to Param2 for specified property.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.EventOptionsFrameList">
            <summary>
            Event occurs when list of sheet for Options Dialog has been changed.
            <note><li>Param1: Not used.</li><li>Param2: Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.EventOptionsFrameModified">
            <summary>
            Event occurs when one of settings in the Option Dialog sheet has been changed by user.
            <note><li>Param1: Not used.</li><li>Param2: Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.EventVisualPlugin">
            <summary>
            Event occurs when switching between visualizations.
            <note><li>Param1: Not used.</li><li>Param2: Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.EventFileMark">
            <summary>
            Event occurs when file mark has been changed.
            <note><li>Param1: New mark (from 0 to 5)</li><li>
            Param2: File name - pointer to first element of null terminated widechar-array. If file name is nil / null
            or empty its mean that marks for all files have been changed.
            </li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.EventStatisticsChanged">
            <summary>
            Event occurs when statistics has been changed.
            <note><li>Param1: Not used.</li><li>
            Param2: File name - pointer to first element of null-terminated widechar-array. If file name is nil / null
            or empty its mean that statistic for all files have been changed.
            </li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.EventSkin">
            <summary>
            Event occurs when skin has been applied.
            <note><li>Param1: Not used.</li><li>Param2: Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.EventPlayerUpdatePosition">
            <summary>
            Unlike the AIMP_MSG_EVENT_PROPERTY_VALUE event for the AIMP_MSG_PROPERTY_PLAYER_POSITION property, this event
            occurs even second. This event can be useful for update information about the playable track.
            <note><li>Param1: Not used.</li><li>Param2: Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.EventLanguage">
            <summary>
            Event occurs when localization has been changed.
            <note><li>Param1: Not used.</li><li>Param2: Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.EventLoaded">
            <summary>
            Event occurs when application completely initialized.
            <note>
            Note that plugin can be loaded after program initialization. You should check current state via the
            AIMP_MSG_PROPERTY_LOADED property if it needed.
            </note><note><li>Param1: Not used.</li><li>Param2: Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.EventTerminating">
            <summary>
            Event occurs when closing the application.
            <note><li>Param1: Not used.</li><li>Param2: Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.EventPlayingFileInfo">
            <summary>
            Event occurs when information about the playable file has been changed.
            Event not occurs:
            1. On start playback (See AIMP_MSG_EVENT_STREAM_START, AIMP_MSG_EVENT_STREAM_START_SUBTRACK)
            2. On stop playback(See AIMP_MSG_EVENT_STREAM_END)
            <note><li>Param1: Not used.</li><li>Param2: Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.EventPlayerUpdatePositionHr">
            <summary>
            Unlike the AIMP_MSG_EVENT_PLAYER_UPDATE_POSITION event this event has higher resolution (about 10-15 calls per
            second).
            <note><li>Param1: Not used.</li><li>Param2: Not used.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.EventEqualizerPresetName">
            <summary>
            Event occurs when name of currently used preset has been changed.
            <note><li>Param1: Not used</li><li>Param2: Pointer to WideChar array, can be = nil (ReadOnly!)</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyVolume">
            <summary>
            <note>
              <li>Param1: Access direction: Read / Write (AIMP_MSG_PROPVALUE_GET / AIMP_MSG_PROPVALUE_SET)</li>
              <li>
            Param2: Pointer to the 32-bit floating point variable (Single).
            Range: 0.0 .. 1.0
            </li>
            </note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyMute">
            <summary>
            <note>
              <li>Param1: Access direction: Read / Write (AIMP_MSG_PROPVALUE_GET / AIMP_MSG_PROPVALUE_SET)</li>
              <li>
            Param2: Pointer to the 32-bit logical variable (LongBool).
            Values: False / True
            Default: False
            </li>
            </note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyBalance">
            <summary>
            Balance.
            <note><li>Param1: Access direction: Read / Write (AIMP_MSG_PROPVALUE_GET / AIMP_MSG_PROPVALUE_SET)</li><li>
            Param2: Pointer to the 32-bit floating point variable (Single).
            Range: -1.0 .. +1.0
            Default: 0.0
            </li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyChorus">
            <summary>
            Chorus effect.
            <note><li>Param1: Access direction: Read / Write (AIMP_MSG_PROPVALUE_GET / AIMP_MSG_PROPVALUE_SET)</li><li>
            Param2: Pointer to the 32-bit floating point variable (Single).
            Range: 0.0 .. 1.0
            Default: 0.0 (switched off)
            </li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyEcho">
            <summary>
            Echo effect.
            <note><li>Param1: Access direction: Read / Write (AIMP_MSG_PROPVALUE_GET / AIMP_MSG_PROPVALUE_SET)</li><li>
            Param2: Pointer to the 32-bit floating point variable (Single).
            Range: 0.0 .. 1.0
            Default: 0.0 (switched off)
            </li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyEnhancer">
            <summary>
            Enhancer effect.
            <note><li>Param1: Access direction: Read / Write (AIMP_MSG_PROPVALUE_GET / AIMP_MSG_PROPVALUE_SET)</li><li>
            Param2: Pointer to the 32-bit floating point variable (Single).
            Range: 1.0 .. 5.0
            Default: 1.0 (switched off)
            </li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyFlanger">
            <summary>
            Flanger effect.
            <note><li>Param1: Access direction: Read / Write (AIMP_MSG_PROPVALUE_GET / AIMP_MSG_PROPVALUE_SET)</li><li>
            Param2: Pointer to the 32-bit floating point variable (Single).
            Range: 0.0 .. 1.0
            Default: 0.0 (switched off)
            </li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyReverb">
            <summary>
            Reverb effect.
            <note><li>Param1: Access direction: Read / Write (AIMP_MSG_PROPVALUE_GET / AIMP_MSG_PROPVALUE_SET)</li><li>
            Param2: Pointer to the 32-bit floating point variable (Single).
            Range: 0.0 .. 1.0
            Default: 0.0 (switched off)
            </li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyPitch">
            <summary>
            <note>
              <li>Param1: Access direction: Read / Write (AIMP_MSG_PROPVALUE_GET / AIMP_MSG_PROPVALUE_SET)</li>
              <li>
            Param2: Pointer to the 32-bit floating point variable (Single).
            Range: -10.0 .. 10.0
            Default: 0.0 (switched off)
            </li>
            </note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertySpeed">
            <summary>
            <note>
              <li>Param1: Access direction: Read / Write (AIMP_MSG_PROPVALUE_GET / AIMP_MSG_PROPVALUE_SET)</li>
              <li>
            Param2: Pointer to the 32-bit floating point variable (Single).
            Range: 0.5 .. 1.5 (50% .. 150%)
            Default: 1.0 (100%)
            </li>
            </note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyTempo">
            <summary>
            <note>
              <li>Param1: Access direction: Read / Write (AIMP_MSG_PROPVALUE_GET / AIMP_MSG_PROPVALUE_SET)</li>
              <li>
            Param2: Pointer to the 32-bit floating point variable (Single).
            Values: 0.8 .. 1.5 (80% .. 150%)
            Default: 1.0 (100%)
            </li>
            </note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyTruebass">
            <summary>
            <note>
              <li>Param1: Access direction: Read / Write (AIMP_MSG_PROPVALUE_GET / AIMP_MSG_PROPVALUE_SET)</li>
              <li>
            Param2: Pointer to the 32-bit floating point variable (Single).
            Range: 0.0 .. 2.0
            Default: 0.0 (switched off)
            </li>
            </note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyPreamp">
            <summary>
            Preamp. Equalizer must be switched on, see AIMP_MSG_PROPERTY_EQUALIZER.
            <note><li>Param1: Access direction: Read / Write (AIMP_MSG_PROPVALUE_GET / AIMP_MSG_PROPVALUE_SET)</li><li>
            Param2: Pointer to the 32-bit floating point variable (Single).
            Range: -15.0 .. 15.0 dB
            Default: 0.0 dB
            </li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyEqualizer">
            <summary>
            Equalizer state (switched on / off).
            <note><li>Param1: Access direction: Read / Write (AIMP_MSG_PROPVALUE_GET / AIMP_MSG_PROPVALUE_SET)</li><li>
            Param2: Pointer to the 32-bit logical variable (LongBool).
            Values: False / True
            Default: False
            </li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyEqualizerBand">
            <summary>
            <note>
              <li>
            Param1: LoWord: AIMP_MSG_PROPVALUE_GET / AIMP_MSG_PROPVALUE_SET
            HiWord: Band Index (from 0 to 17)
            </li>
              <li>
            Param2: Pointer to the 32-bit floating point variable (Single).
            Range: -15.0 .. 15.0 dB
            Default: 0.0 dB
            </li>
            </note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyPlayerState">
            <summary>
            <note>
              <li>Param1: AIMP_MSG_PROPVALUE_GET. Read Only.</li>
              <li>
            Param2: Pointer to the 32-bit integer variable (Integer).
            0 = Stopped
            1 = Paused
            2 = Playing
            </li>
            </note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyPlayerPosition">
            <summary>
            <note>
              <li>Param1: Access direction: Read / Write (AIMP_MSG_PROPVALUE_GET / AIMP_MSG_PROPVALUE_SET).</li>
              <li>Param2: Pointer to the 32-bit floating point variable (Single). Value is defined in seconds.</li>
            </note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyPlayerDuration">
            <summary>
            <note>
              <li>Param1: AIMP_MSG_PROPVALUE_GET. Read Only</li>
              <li>Param2: Pointer to the 32-bit floating point variable (Single). Value is defined in seconds.</li>
            </note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyPartRepeat">
            <summary>
            Part repeat state. Read only.
            <note><li>Param1: AIMP_MSG_PROPVALUE_GET Read Only</li><li>
            Param2: Pointer to the 32-bit integer variable (Integer).
            0 - Repeat is switched off
            1 - Point "A" is defined
            2 - Point "B" is defined, repeat is switched on
            </li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyRepeat">
            <summary>
            Track repeat state.
            <note><li>Param1: Access direction: Read / Write (AIMP_MSG_PROPVALUE_GET / AIMP_MSG_PROPVALUE_SET)</li><li>
            Param2: Pointer to the 32-bit logical variable (LongBool).
            Value: False / True
            Default: False
            </li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyShuffle">
            <summary>
            <note>
              <li>Param1: Access direction: Read / Write (AIMP_MSG_PROPVALUE_GET / AIMP_MSG_PROPVALUE_SET)</li>
              <li>
            Param2: Pointer to the 32-bit logical variable (LongBool).
            Value: False / True
            Default: False
            </li>
            </note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyHwnd">
            <summary>
            Handle of one of application windows. Read only.
            <note><li>
            Param1: One of following values:
            AIMP_MPH_MAINFORM
            AIMP_MPH_APPLICATION
            AIMP_MPH_TRAYCONTROL
            AIMP_MPH_PLAYLISTFORM
            AIMP_MPH_EQUALIZERFORM
            </li><li>Param2: Pointer to the HWND.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyStayOnTop">
            <summary>
            <note>
              <li>Param1: Access direction: Read / Write (AIMP_MSG_PROPVALUE_GET / AIMP_MSG_PROPVALUE_SET)</li>
              <li>
            Param2: Pointer to the 32-bit logical variable (LongBool).
            Value: False / True
            Default: False
            </li>
            </note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyReverseTime">
            <summary>
            Switching on/off countdown mode of playback time.
            <note><li>Param1: Access direction: Read / Write (AIMP_MSG_PROPVALUE_GET / AIMP_MSG_PROPVALUE_SET)</li><li>
            Param2: Pointer to the 32-bit logical variable (LongBool).
            Value: False / True
            Default: False
            </li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyMinimizedToTray">
            <summary>
            <note>
              <li>Param1: Access direction: Read / Write (AIMP_MSG_PROPVALUE_GET / AIMP_MSG_PROPVALUE_SET)</li>
              <li>
            Param2: Pointer to the 32-bit logical variable (LongBool).
            Values: False / True
            Default: False
            </li>
            </note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyRepeatSingleFilePlaylists">
            <summary>
            State of "repeat single file playlists" option. It is actual for "repeat playlist" mode only (see
            AIMP_MSG_PROPERTY_ACTION_ON_END_OF_PLAYLIST).
            <note><li>Param1: Access direction: Read / Write (AIMP_MSG_PROPVALUE_GET / AIMP_MSG_PROPVALUE_SET)</li><li>
            Param2: Pointer to the 32-bit logical variable (LongBool).
            Values: False / True
            Default: False
            </li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyActionOnEndOfPlaylist">
            <summary>
            Action on end of playlist.
            <note><li>
            Param1: Access direction: Read / Write (<see cref="!:AimpCoreMessageType.AIMP_MSG_PROPVALUE_GET" /> /
            <see cref="!:AimpCoreMessageType.AIMP_MSG_PROPVALUE_SET" />)
            </li><li>
            Param2: Pointer to the 32-bit integer variable (Integer).
            0 - Jump to the next playlist
            1 - Repeat current playlist
            2 - Stand by
            </li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyStopAfterTrack">
            <summary>
            Stop playback after playable file will finished.
            <note><li>Param1: Access direction: Read / Write (AIMP_MSG_PROPVALUE_GET / AIMP_MSG_PROPVALUE_SET)</li><li>
            Param2: Pointer to the 32-bit logical variable (LongBool).
            Values: False / True
            Default: False
            </li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyRadioCap">
            <summary>
            State of internet radio capture.
            <note><li>Param1: Access direction: Read / Write (AIMP_MSG_PROPVALUE_GET / AIMP_MSG_PROPVALUE_SET)</li><li>
            Param2: Pointer to the 32-bit logical variable (LongBool).
            Values: False / True
            Default: False
            </li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyLoaded">
            <summary>
            Property shows whether an application is initialized.
            <note><li>Param1: AIMP_MSG_PROPVALUE_GET. Read Only</li><li>Param2: Pointer to LongBool.</li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyVisualFullscreen">
            <summary>
            Full screen visualization mode.
            <note><li>Param1: Access direction: Read / Write (AIMP_MSG_PROPVALUE_GET / AIMP_MSG_PROPVALUE_SET)</li><li>
            Param2: Pointer to the 32-bit logical variable (LongBool).
            Values: False / True
            Default: False
            </li></note>
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCoreMessageType.PropertyPlayerBuffering">
            <summary>
            Displays buffering progress of playing track.
            <note><li>Param1: Access direction: Read / Write (AIMP_MSG_PROPVALUE_GET / AIMP_MSG_PROPVALUE_SET)</li><li>Param2: Pointer to the 32-bit floating point variable (Single). Value in percents (from 0.0 to 100.0 %)</li></note>
            </summary>
        </member>
        <member name="T:AIMP.SDK.MessageDispatcher.AimpCorePathType">
            <summary>
            Path type.
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCorePathType.Audiolibrary">
            <summary>
            Path to audiolibrary.
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCorePathType.Encoders">
            <summary>
            Path to encoders.
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCorePathType.Help">
            <summary>
            Path to help files.
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCorePathType.Icons">
            <summary>
            Path to icons.
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCorePathType.Langs">
            <summary>
            Path to language files.
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCorePathType.Playlists">
            <summary>
            Path to playlist.
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCorePathType.Plugins">
            <summary>
            Path to plugins.
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCorePathType.Profile">
            <summary>
            Path to profile.
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCorePathType.Skins">
            <summary>
            Path to skins.
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.AimpCorePathType.SkinsCommon">
            <summary>
            Path to common skins.
            </summary>
        </member>
        <member name="T:AIMP.SDK.MessageDispatcher.IAimpMessageHook">
            <summary>
            The IAimpMessageHook interface provides an ability to hook all messages that processes via
            <see cref="T:AIMP.SDK.MessageDispatcher.IAimpServiceMessageDispatcher" />.
            Note that you must remove hook manually in the <see cref="!:IAimpPlugin.Dispose" />.
            </summary>
        </member>
        <member name="M:AIMP.SDK.MessageDispatcher.IAimpMessageHook.CoreMessage(AIMP.SDK.MessageDispatcher.AimpCoreMessageType,System.Int32,System.IntPtr)">
            <summary>
            Occurs when plugin receive message from player.
            </summary>
            <param name="message">The message.</param>
            <param name="param1">The param1.</param>
            <param name="param2">The param2. See official SDK documentation to get more info about output parameter.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.MessageDispatcher.MessageDirectionType">
            <summary>
            Message direction types.
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.MessageDirectionType.Get">
            <summary>
            Get a property value.
            </summary>
        </member>
        <member name="F:AIMP.SDK.MessageDispatcher.MessageDirectionType.Set">
            <summary>
            Set a property value.
            </summary>
        </member>
        <member name="T:AIMP.SDK.MessageDispatcher.IAimpServiceMessageDispatcher">
            <summary>
            Provides an access to the messaging mechanism.
            Implements the <see cref="T:AIMP.SDK.IAimpService" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpService" />
        </member>
        <member name="M:AIMP.SDK.MessageDispatcher.IAimpServiceMessageDispatcher.Send(AIMP.SDK.MessageDispatcher.AimpCoreMessageType,System.Int32,System.IntPtr)">
            <summary>
            Sends the specified message.
            </summary>
            <param name="message">The message <see cref="T:AIMP.SDK.MessageDispatcher.AimpCoreMessageType" />.</param>
            <param name="param1">The message direction <see cref="T:AIMP.SDK.MessageDispatcher.MessageDirectionType" />.</param>
            <param name="param2">The param2.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.MessageDispatcher.IAimpServiceMessageDispatcher.Register(System.String)">
            <summary>
            Registers the specified message.
            </summary>
            <param name="message">The message.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:AIMP.SDK.MessageDispatcher.IAimpServiceMessageDispatcher.Hook(AIMP.SDK.MessageDispatcher.IAimpMessageHook)">
            <summary>
            Setup the specified message hook.
            </summary>
            <param name="hook">The message hook.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.MessageDispatcher.IAimpServiceMessageDispatcher.Unhook(AIMP.SDK.MessageDispatcher.IAimpMessageHook)">
            <summary>
            Unhooks the specified hook.
            </summary>
            <param name="hook">The message hook.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.FileManager.Commands.IAimpFileSystemCommand">
            <summary>
            Interface IAimpFileSystemCommand
            </summary>
        </member>
        <member name="T:AIMP.SDK.FileManager.Commands.IAimpFileSystemCommandCopyToClipboard">
            <summary>
            Interface IAimpFileSystemCommandCopyToClipboard
            Implements the <see cref="T:AIMP.SDK.FileManager.Commands.IAimpFileSystemCommand" />
            </summary>
            <seealso cref="T:AIMP.SDK.FileManager.Commands.IAimpFileSystemCommand" />
        </member>
        <member name="M:AIMP.SDK.FileManager.Commands.IAimpFileSystemCommandCopyToClipboard.CopyToClipboard(System.Collections.Generic.List{System.String})">
            <summary>
            Copies to clipboard.
            </summary>
            <param name="files">The files.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.FileManager.Commands.IAimpFileSystemCommandDelete">
            <summary>
            Interface IAimpFileSystemCommandDelete
            Implements the <see cref="T:AIMP.SDK.FileManager.Commands.IAimpFileSystemCustomFileCommand" />
            </summary>
            <seealso cref="T:AIMP.SDK.FileManager.Commands.IAimpFileSystemCustomFileCommand" />
        </member>
        <member name="M:AIMP.SDK.FileManager.Commands.IAimpFileSystemCommandDelete.CanProcess(System.String)">
            <summary>
            Determines whether this instance can process the specified file.
            </summary>
            <param name="file">The file.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.FileManager.Commands.IAimpFileSystemCommandDelete.Process(System.String)">
            <summary>
            Processes the specified file.
            </summary>
            <param name="file">The file.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.FileManager.Commands.IAimpFileSystemCommandDropSource">
            <summary>
            Interface IAimpFileSystemCommandDropSource
            Implements the <see cref="T:AIMP.SDK.FileManager.Commands.IAimpFileSystemCommand" />
            </summary>
            <seealso cref="T:AIMP.SDK.FileManager.Commands.IAimpFileSystemCommand" />
        </member>
        <member name="M:AIMP.SDK.FileManager.Commands.IAimpFileSystemCommandDropSource.CreateStream(System.String)">
            <summary>
            Creates the stream.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>AimpActionResult&lt;IAimpStream&gt;.</returns>
        </member>
        <member name="T:AIMP.SDK.FileManager.Commands.IAimpFileSystemCommandFileInfo">
            <summary>
            Interface IAimpFileSystemCommandFileInfo
            Implements the <see cref="T:AIMP.SDK.FileManager.Commands.IAimpFileSystemCommand" />
            </summary>
            <seealso cref="T:AIMP.SDK.FileManager.Commands.IAimpFileSystemCommand" />
        </member>
        <member name="M:AIMP.SDK.FileManager.Commands.IAimpFileSystemCommandFileInfo.GetFileAttrs(System.String)">
            <summary>
            Gets the file attributes.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>AimpActionResult&lt;AimpFileAttributes&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.FileManager.Commands.IAimpFileSystemCommandFileInfo.GetFileSize(System.String)">
            <summary>
            Gets the size of the file.
            </summary>
            <param name="file">The file.</param>
            <returns>AimpActionResult&lt;System.Int64&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.FileManager.Commands.IAimpFileSystemCommandFileInfo.IsFileExists(System.String)">
            <summary>
            Determines whether [is file exists] [the specified file].
            </summary>
            <param name="file">The file.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.FileManager.Commands.IAimpFileSystemCommandOpenFileFolder">
            <summary>
            Interface IAimpFileSystemCommandOpenFileFolder
            Implements the <see cref="T:AIMP.SDK.FileManager.Commands.IAimpFileSystemCustomFileCommand" />
            </summary>
            <seealso cref="T:AIMP.SDK.FileManager.Commands.IAimpFileSystemCustomFileCommand" />
        </member>
        <member name="M:AIMP.SDK.FileManager.Commands.IAimpFileSystemCommandOpenFileFolder.CanProcess(System.String)">
            <summary>
            Determines whether this instance can process the specified file.
            </summary>
            <param name="file">The file.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.FileManager.Commands.IAimpFileSystemCommandOpenFileFolder.Process(System.String)">
            <summary>
            Processes the specified file.
            </summary>
            <param name="file">The file.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.FileManager.Commands.IAimpFileSystemCommandStreaming">
            <summary>
            Interface IAimpFileSystemCommandStreaming
            Implements the <see cref="T:AIMP.SDK.FileManager.Commands.IAimpFileSystemCommand" />
            </summary>
            <seealso cref="T:AIMP.SDK.FileManager.Commands.IAimpFileSystemCommand" />
        </member>
        <member name="M:AIMP.SDK.FileManager.Commands.IAimpFileSystemCommandStreaming.CreateStream(System.String,AIMP.SDK.FileManager.FileStreamingType,System.Int64,System.Int64)">
            <summary>
            Creates the stream.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="flags">The flags.</param>
            <param name="offset">The offset.</param>
            <param name="size">The size.</param>
            <returns>AimpActionResult&lt;IAimpStream&gt;.</returns>
        </member>
        <member name="T:AIMP.SDK.FileManager.Commands.IAimpFileSystemCustomFileCommand">
            <summary>
            Interface IAimpFileSystemCustomFileCommand
            Implements the <see cref="T:AIMP.SDK.FileManager.Commands.IAimpFileSystemCommand" />
            </summary>
            <seealso cref="T:AIMP.SDK.FileManager.Commands.IAimpFileSystemCommand" />
        </member>
        <member name="T:AIMP.SDK.FileManager.Extensions.IAimpExtensionFileExpander">
            <summary>
            Interface is an extension for the <see cref="T:AIMP.SDK.FileManager.IAimpServiceFileManager" /> service that allows split real file
            container into one or view virtual files.
            <para>
            Instance should be created by plugin and must be registered in the application at the plugin initialization
            method via the IAimpCore.RegisterExtension method.
            </para>
            </summary>
        </member>
        <member name="M:AIMP.SDK.FileManager.Extensions.IAimpExtensionFileExpander.Expand(System.String,AIMP.SDK.IAimpProgressCallback)">
            <summary>
            Split the file container to virtual files.
            </summary>
            <param name="fileName">The real file name</param>
            <param name="progressCallback">Progress callback <see cref="T:AIMP.SDK.IAimpProgressCallback"/>.</param>
            <returns>AimpActionResult&lt;IList&lt;IAimpVirtualFile&gt;&gt;.</returns>
        </member>
        <member name="T:AIMP.SDK.FileManager.Extensions.FileFormatsCategoryTypes">
            <summary>
            Enum FileFormatsCategoryTypes
            </summary>
        </member>
        <member name="F:AIMP.SDK.FileManager.Extensions.FileFormatsCategoryTypes.Audio">
            <summary>
            The aimp service fileformats category audio
            </summary>
        </member>
        <member name="F:AIMP.SDK.FileManager.Extensions.FileFormatsCategoryTypes.Playlists">
            <summary>
            The aimp service fileformats category playlists
            </summary>
        </member>
        <member name="T:AIMP.SDK.FileManager.Extensions.IAimpExtensionFileFormat">
            <summary>
            Extension for the <seealso cref="T:AIMP.SDK.FileManager.IAimpServiceFileFormats" /> service that provides an information about the new
            file format.
            <para>
            Instance should be created by plugin and must be registered in the application at the plugin initialization
            method via the IAimpCore.RegisterExtension method.
            </para>
            Implements the <see cref="T:AIMP.SDK.IAimpExtension" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpExtension" />
        </member>
        <member name="P:AIMP.SDK.FileManager.Extensions.IAimpExtensionFileFormat.Description">
            <summary>
            Returns the short description. Ex. Ogg Vorbis
            </summary>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="P:AIMP.SDK.FileManager.Extensions.IAimpExtensionFileFormat.ExtList">
            <summary>
            Returns the supported extensions. Ex. *.ogg;*.oga;
            </summary>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="P:AIMP.SDK.FileManager.Extensions.IAimpExtensionFileFormat.Flags">
            <summary>
            Gets the supported flags.
            </summary>
            <returns>AimpActionResult&lt;FileFormatsCategoryTypes&gt;.</returns>
        </member>
        <member name="T:AIMP.SDK.FileManager.Extensions.IAimpExtensionFileInfoProvider">
            <summary>
            Interface is an extension for the <see cref="T:AIMP.SDK.FileManager.IAimpServiceFileInfo" /> service that provides an extended information
            about the file.
            <para>
            Instance should be created by plugin and must be registered in the application at the plugin initialization
            method via the IAimpCore.RegisterExtension method.
            </para>
            </summary>
        </member>
        <member name="M:AIMP.SDK.FileManager.Extensions.IAimpExtensionFileInfoProvider.GetFileInfo(System.String,AIMP.SDK.FileManager.IAimpFileInfo@)">
            <summary>
            Returns the file information.
            </summary>
            <param name="fileUri">The virtual file name.</param>
            <param name="fileInfo">Out. File information/</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.FileManager.Extensions.IAimpExtensionFileInfoProvider.GetFileInfo(AIMP.SDK.IAimpStream,AIMP.SDK.FileManager.IAimpFileInfo@)">
            <summary>
            Returns the file information. This method slowest then get info by file name.
            </summary>
            <param name="stream">The file stream <see cref="T:AIMP.SDK.IAimpStream" />.</param>
            <param name="fileInfo">Out. File information/</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.FileManager.Extensions.IAimpExtensionFileSystem">
            <summary>
            Extension for the IAIMPServiceFileSystems service.
            Must implement one or few file system commands(Refer to the children articles of the IAIMPServiceFileSystems
            chapter).
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.Extensions.IAimpExtensionFileSystem.Schema">
            <summary>
            Gets the scheme filesystem paths.
            </summary>
            <value>The schema.</value>
        </member>
        <member name="P:AIMP.SDK.FileManager.Extensions.IAimpExtensionFileSystem.ReadOnly">
            <summary>
            Returns false, if the file system does not support the modification of data.
            </summary>
            <value><c>true</c> if [read only]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:AIMP.SDK.FileManager.FileCommandType">
            <summary>
            Enum FileCommandType
            </summary>
        </member>
        <member name="F:AIMP.SDK.FileManager.FileCommandType.CopyToClipboard">
            <summary>
            The copy to clipboard
            </summary>
        </member>
        <member name="F:AIMP.SDK.FileManager.FileCommandType.Delete">
            <summary>
            The delete
            </summary>
        </member>
        <member name="F:AIMP.SDK.FileManager.FileCommandType.DropSource">
            <summary>
            The drop source
            </summary>
        </member>
        <member name="F:AIMP.SDK.FileManager.FileCommandType.FileInfo">
            <summary>
            The file information
            </summary>
        </member>
        <member name="F:AIMP.SDK.FileManager.FileCommandType.OpenFileFolder">
            <summary>
            The open file folder
            </summary>
        </member>
        <member name="F:AIMP.SDK.FileManager.FileCommandType.Streaming">
            <summary>
            The streaming
            </summary>
        </member>
        <member name="F:AIMP.SDK.FileManager.FileCommandType.FileExists">
            <summary>
            The file exists
            </summary>
        </member>
        <member name="T:AIMP.SDK.FileManager.FileFormats">
            <summary>
            Enum FileFormats
            </summary>
        </member>
        <member name="F:AIMP.SDK.FileManager.FileFormats.Audio">
            <summary>
            The aimp service fileformats category audio
            </summary>
        </member>
        <member name="F:AIMP.SDK.FileManager.FileFormats.Playlists">
            <summary>
            The aimp service fileformats category playlists
            </summary>
        </member>
        <member name="T:AIMP.SDK.FileManager.IAimpServiceFileFormats">
            <summary>
            Provide acccess to registered file types.
            Implements the <see cref="T:AIMP.SDK.IAimpService" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpService" />
        </member>
        <member name="M:AIMP.SDK.FileManager.IAimpServiceFileFormats.GetFormats(AIMP.SDK.FileManager.FileFormats)">
            <summary>
            Gets the availabel file formats.
            </summary>
            <param name="flags">The flags.</param>
            <returns>AimpActionResult&lt;System.String&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.FileManager.IAimpServiceFileFormats.IsSupported(System.String,AIMP.SDK.FileManager.FileFormats)">
            <summary>
            Check is the file extension supported.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="flags">The flags.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.FileManager.ServiceFileInfoFlags">
            <summary>
            Enum ServiceFileInfoFlags
            </summary>
        </member>
        <member name="F:AIMP.SDK.FileManager.ServiceFileInfoFlags.DontUseAudioCoders">
            <summary>
            The aimp service fileinfo flag dontuseaudiodecoders
            </summary>
        </member>
        <member name="T:AIMP.SDK.FileManager.IAimpServiceFileInfo">
            <summary>
            Provide access to get information about virtual file.
            Implements the <see cref="T:AIMP.SDK.IAimpService" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpService" />
        </member>
        <member name="M:AIMP.SDK.FileManager.IAimpServiceFileInfo.GetFileInfoFromFileUri(System.String,AIMP.SDK.FileManager.ServiceFileInfoFlags)">
            <summary>
            Gets the file information from virtual file.
            </summary>
            <param name="fileUri">The virtual file name.</param>
            <param name="fileInfoFlags">The file info flags.</param>
            <returns>AimpActionResult&lt;IAimpFileInfo&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.FileManager.IAimpServiceFileInfo.GetFileInfoFromStream(AIMP.SDK.IAimpStream,AIMP.SDK.FileManager.ServiceFileInfoFlags)">
            <summary>
            Gets the file information from stream.
            </summary>
            <param name="fileStream">The file stream.</param>
            <param name="fileInfoFlags">The file info flags.</param>
            <returns>AimpActionResult&lt;IAimpFileInfo&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.FileManager.IAimpServiceFileInfo.GetVirtualFile(System.String)">
            <summary>
            Gets the virtual file.
            </summary>
            <param name="fileUri">The virtual file name.</param>
            <returns>AimpActionResult&lt;IAimpVirtualFile&gt;.</returns>
        </member>
        <member name="T:AIMP.SDK.FileManager.IAimpServiceFileInfoFormatter">
            <summary>
            Service provides an ability to format file information with specified template.
            Implements the <see cref="T:AIMP.SDK.IAimpService" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpService" />
        </member>
        <member name="M:AIMP.SDK.FileManager.IAimpServiceFileInfoFormatter.Format(System.String,AIMP.SDK.FileManager.IAimpFileInfo)">
            <summary>
            Formats the specified template.
            </summary>
            <param name="template">The list of supported macros for template depends from version of application.</param>
            <param name="fileInfo">The file information.</param>
            <returns>AimpActionResult&lt;System.String&gt;.</returns>
        </member>
        <member name="T:AIMP.SDK.FileManager.IAimpServiceFileInfoFormatterUtils">
            <summary>
            Interface IAimpServiceFileInfoFormatterUtils
            </summary>
        </member>
        <member name="T:AIMP.SDK.FileManager.IAimpServiceFileManager">
            <summary>
            Interface IAimpServiceFileManager
            </summary>
        </member>
        <member name="T:AIMP.SDK.FileManager.FileStreamingType">
            <summary>
            Enum FileStreamingType
            </summary>
        </member>
        <member name="F:AIMP.SDK.FileManager.FileStreamingType.Read">
            <summary>
            The aimp service filestreaming flag read
            </summary>
        </member>
        <member name="F:AIMP.SDK.FileManager.FileStreamingType.CreateNew">
            <summary>
            The aimp service filestreaming flag createnew
            </summary>
        </member>
        <member name="F:AIMP.SDK.FileManager.FileStreamingType.ReadWrite">
            <summary>
            The aimp service filestreaming flag readwrite
            </summary>
        </member>
        <member name="F:AIMP.SDK.FileManager.FileStreamingType.MapToMemory">
            <summary>
            The aimp service filestreaming flag maptomemory
            </summary>
        </member>
        <member name="T:AIMP.SDK.FileManager.CreateStreamResult">
            <summary>
            Class CeateStreamResult.
            </summary>
        </member>
        <member name="M:AIMP.SDK.FileManager.CreateStreamResult.#ctor(AIMP.SDK.FileManager.IAimpVirtualFile,AIMP.SDK.IAimpStream)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.FileManager.CreateStreamResult" /> class.
            </summary>
            <param name="virtualFile">The virtual file.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:AIMP.SDK.FileManager.CreateStreamResult.VirtualFile">
            <summary>
            Gets the virtual file.
            </summary>
            <value>The virtual file.</value>
        </member>
        <member name="P:AIMP.SDK.FileManager.CreateStreamResult.Stream">
            <summary>
            Gets the stream.
            </summary>
            <value>The stream.</value>
        </member>
        <member name="T:AIMP.SDK.FileManager.IAimpServiceFileStreaming">
            <summary>
            Interface IAimpServiceFileStreaming
            Implements the <see cref="T:AIMP.SDK.IAimpService" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpService" />
        </member>
        <member name="M:AIMP.SDK.FileManager.IAimpServiceFileStreaming.CreateStreamForFile(System.String,AIMP.SDK.FileManager.FileStreamingType,System.Int64,System.Int64)">
            <summary>
            Creates the stream for file.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="flags">The flags.</param>
            <param name="offset">The offset.</param>
            <param name="size">The size.</param>
            <returns>AimpActionResult&lt;IAimpStream&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.FileManager.IAimpServiceFileStreaming.CreateStreamForFileUri(System.String)">
            <summary>
            Creates the stream for file URI.
            </summary>
            <param name="fileUrl">The file URL.</param>
            <returns>AimpActionResult&lt;CeateStreamResult&gt;.</returns>
        </member>
        <member name="T:AIMP.SDK.FileManager.IAimpServiceFileSystems">
            <summary>
            Provide ability to work with files.
            Implements the <see cref="T:AIMP.SDK.IAimpService" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpService" />
        </member>
        <member name="M:AIMP.SDK.FileManager.IAimpServiceFileSystems.Get(AIMP.SDK.FileManager.FileCommandType,System.String)">
            <summary>
            Get the interface of specified command.
            </summary>
            <param name="commandType">The command type <see cref="T:AIMP.SDK.FileManager.FileCommandType" />.</param>
            <param name="fileUri">The name of virtual file.</param>
            <returns>AimpActionResult&lt;IAimpFileSystemCommand&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.FileManager.IAimpServiceFileSystems.GetDefault(AIMP.SDK.FileManager.FileCommandType)">
            <summary>
            Gets the default.
            </summary>
            <param name="commandType">Type of the command.</param>
            <returns>AimpActionResult&lt;IAimpFileSystemCommand&gt;.</returns>
        </member>
        <member name="T:AIMP.SDK.FileManager.IAimpVirtualFile">
            <summary>
            Interface provides information about virtual file.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpVirtualFile.IndexInSet">
            <summary>
            Gets or sets the index of virtual track in the set (if presented).
            </summary>
            <value>The index in set.</value>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpVirtualFile.ClipStart">
            <summary>
            The beginning of the passage to play (in seconds).
            </summary>
            <value>The clip start.</value>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpVirtualFile.ClipFinish">
            <summary>
            The end of the passage to play (in seconds).
            </summary>
            <value>The clip finish.</value>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpVirtualFile.AudioSourceFile">
            <summary>
            Gets or sets the real source file.
            <para>
            Property can be not set if real file name is not exists or file name is same to file name of file-container.
            </para>
            </summary>
            <value>The audio source file.</value>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpVirtualFile.FileFormat">
            <summary>
            Gets the file format. Ex. mp3, ogg, cda.
            </summary>
            <value>The file format.</value>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpVirtualFile.FileUri">
            <summary>
            Gets or sets the virtual file name.
            </summary>
            <value>The file URI.</value>
        </member>
        <member name="M:AIMP.SDK.FileManager.IAimpVirtualFile.CreateStream">
            <summary>
            Create the instance of the <see cref="T:AIMP.SDK.IAimpStream" />.
            </summary>
            <returns>AimpActionResult&lt;IAimpStream&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.FileManager.IAimpVirtualFile.GetFileInfo">
            <summary>
            Gets the file info.
            </summary>
            <returns>AimpActionResult&lt;IAimpFileInfo&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.FileManager.IAimpVirtualFile.IsExists">
            <summary>
            Check is the source exists.
            </summary>
            <returns><c>true</c> if this instance is exists; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AIMP.SDK.FileManager.IAimpVirtualFile.IsInSameStream(AIMP.SDK.FileManager.IAimpVirtualFile)">
            <summary>
            Determines whether [is in same stream] [the specified virtual file].
            </summary>
            <param name="virtualFile">The virtual file.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.FileManager.IAimpVirtualFile.Synchronize">
            <summary>
            Plugin must validate state of all internal data that refer with source.
            If internal data is not valid, plugin must return any error code except ActionResultType.OK.
            In this case, the application will automatically reload virtual files for current file-container via one of the
            IAimpExtensionFileExpander extensions.
            <para>
            The method called by the application before call the CreateStream method.
            </para>
            </summary>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.FileManager.AimpFileAttributes">
            <summary>
            Struct AimpFileAttributes
            Implements the <see cref="!:System.IEquatable&lt;AIMP.SDK.FileManager.AimpFileAttributes&gt;" />
            Implements the <see cref="!:System.IEquatable&lt;AIMP.SDK.FileManager.AimpFileAttributes&gt;" />
            </summary>
            <seealso cref="!:System.IEquatable&lt;AIMP.SDK.FileManager.AimpFileAttributes&gt;" />
        </member>
        <member name="P:AIMP.SDK.FileManager.AimpFileAttributes.Attributes">
            <summary>
            Gets or sets the attributes.
            </summary>
            <value>The attributes.</value>
        </member>
        <member name="P:AIMP.SDK.FileManager.AimpFileAttributes.TimeLastAccess">
            <summary>
            Gets or sets the time last access.
            </summary>
            <value>The time last access.</value>
        </member>
        <member name="P:AIMP.SDK.FileManager.AimpFileAttributes.TimeLastWrite">
            <summary>
            Gets or sets the time last write.
            </summary>
            <value>The time last write.</value>
        </member>
        <member name="P:AIMP.SDK.FileManager.AimpFileAttributes.TimeCreation">
            <summary>
            Gets or sets the time creation.
            </summary>
            <value>The time creation.</value>
        </member>
        <member name="M:AIMP.SDK.FileManager.AimpFileAttributes.Equals(AIMP.SDK.FileManager.AimpFileAttributes)">
            <summary>
                Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
            <inheritdoc />
        </member>
        <member name="T:AIMP.SDK.FileManager.IAimpFileInfo">
            <summary>
            Storage for extended information about the file.
            Implements the <see cref="T:AIMP.SDK.IAimpObject" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpObject" />
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.CustomData">
            <summary>
            Gets or sets the custom data.
            <para>
            It allow to bind custom data to the interface.
            </para>
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.Album">
            <summary>
            Gets or sets the album name.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.AlbumArtist">
            <summary>
            Gets or sets the album artist.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.AlbumGain">
            <summary>
            Gets or sets the album gain.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.AlbumPeak">
            <summary>
            Gets or sets the album peak.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.Artist">
            <summary>
            Gets or sets the artist.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.BitRate">
            <summary>
            Gets or sets the bit rate.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.BitDepth">
            <summary>
            Gets or sets the bit depth.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.BPM">
            <summary>
            Gets or sets the BPM.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.Channels">
            <summary>
            Gets or sets the channels.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.Codec">
            <summary>
            Gets or sets the codec.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.Composer">
            <summary>
            Gets or sets the composer.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.CopyRight">
            <summary>
            Gets or sets the copy right.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.CUESheet">
            <summary>
            Gets or sets the cue sheet.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.Date">
            <summary>
            Gets or sets the date.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.DiskNumber">
            <summary>
            Gets or sets the disk number.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.DiskTotal">
            <summary>
            Gets or sets the disk total.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.Duration">
            <summary>
            Gets or sets the duration.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.FileSize">
            <summary>
            Gets or sets the size of the file.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.Genre">
            <summary>
            Gets or sets the genre.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.Lyrics">
            <summary>
            Gets or sets the lyrics.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.Publisher">
            <summary>
            Gets or sets the publisher.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.SampleRate">
            <summary>
            Gets or sets the sample rate.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.TrackGain">
            <summary>
            Gets or sets the track gain.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.TrackNumber">
            <summary>
            Gets or sets the track number.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.TrackPeak">
            <summary>
            Gets or sets the track peak.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.TrackTotal">
            <summary>
            Gets or sets the track total.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.URL">
            <summary>
            Gets or sets the URL.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.AddedDate">
            <summary>
            Gets or sets the added date.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.LastPlayedDate">
            <summary>
            Gets or sets the last played date.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.Conductor">
            <summary>
            Gets or sets the conductor.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.Mood">
            <summary>
            Gets or sets the mood.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.Catalog">
            <summary>
            Gets or sets the catalog.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.Isrc">
            <summary>
            Gets or sets the isrc.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.Lyricist">
            <summary>
            Gets or sets the lyricist.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.EncodedBy">
            <summary>
            Gets or sets the encoded by.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.Rating">
            <summary>
            Gets or sets the Rating of the track that stored in tags of file. Can be in range from 0 to 5.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.StatAddingDate">
            <summary>
            Gets the adding date to DB of Audio Library
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.StatLastPlayDate">
            <summary>
            Gets the date of last playback.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.StatMark">
            <summary>
            Gets or sets the user mark that stored in DB of Audio Library (0..5).
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.StatPlayCount">
            <summary>
            Gets the playback count.
            </summary>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.StatRating">
            <summary>
            Gets the rating for track, that calculates automatically based on all the statistics from the DB (0 to 1). 
            </summary>
            <value>The state rating.</value>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.StatDisplayingMark">
            <summary>
            Gets or sets the mark that displayed for user (0..5).
            Mark can be equal to rating value (depended from settings of Audio Library).
            </summary>
            <value>The stat displaying rating.</value>
        </member>
        <member name="P:AIMP.SDK.FileManager.IAimpFileInfo.AlbumArt">
            <summary>
            Gets or sets the album art.
            </summary>
            <value>The album art.</value>
        </member>
        <member name="M:AIMP.SDK.FileManager.IAimpFileInfo.Assign(AIMP.SDK.FileManager.IAimpFileInfo)">
            <summary>
            Copies all properties from source.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="M:AIMP.SDK.FileManager.IAimpFileInfo.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>IAimpFileInfo.</returns>
        </member>
        <member name="T:AIMP.SDK.IAimpConfig">
            <summary>
            Interface IAimpConfig
            </summary>
        </member>
        <member name="M:AIMP.SDK.IAimpConfig.Delete(System.String)">
            <summary>
            Deletes the value or section from config (section or section\value name).
            </summary>
            <param name="keyPath">The key path (section\value name).</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpConfig.GetValueAsFloat(System.String)">
            <summary>
            Gets the value as float.
            </summary>
            <param name="keyPath">The key path (section\value name).</param>
            <returns>AimpActionResult&lt;System.Single&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpConfig.GetValueAsInt32(System.String)">
            <summary>
            Gets the value as int32.
            </summary>
            <param name="keyPath">The key path (section\value name).</param>
            <returns>AimpActionResult&lt;System.Int32&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpConfig.GetValueAsInt64(System.String)">
            <summary>
            Gets the value as int64.
            </summary>
            <param name="keyPath">The key path (section\value name).</param>
            <returns>AimpActionResult&lt;Int64&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpConfig.GetValueAsStream(System.String)">
            <summary>
            Gets the value as binary stream.
            </summary>
            <param name="keyPath">The key path (section\value name).</param>
            <returns>AimpActionResult&lt;IAimpStream&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpConfig.GetValueAsString(System.String)">
            <summary>
            Gets the value as string.
            </summary>
            <param name="keyPath">The key path (section\value name).</param>
            <returns>AimpActionResult&lt;System.String&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpConfig.SetValueAsFloat(System.String,System.Single)">
            <summary>
            Sets the value as float.
            </summary>
            <param name="keyPath">The key path (section\value name).</param>
            <param name="value">The value.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpConfig.SetValueAsInt32(System.String,System.Int32)">
            <summary>
            Sets the value as int32.
            </summary>
            <param name="keyPath">The key path (section\value name).</param>
            <param name="value">The value.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpConfig.SetValueAsInt64(System.String,System.Int64)">
            <summary>
            Sets the value as int64.
            </summary>
            <param name="keyPath">The key path (section\value name).</param>
            <param name="value">The value.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpConfig.SetValueAsStream(System.String,AIMP.SDK.IAimpStream)">
            <summary>
            Sets the value as stream.
            </summary>
            <param name="keyPath">The key path (section\value name).</param>
            <param name="stream">The stream.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpConfig.SetValueAsString(System.String,System.String)">
            <summary>
            Sets the value as string.
            </summary>
            <param name="keyPath">The key path (section\value name).</param>
            <param name="value">The value.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.IAimpExternalSettingsDialog">
            <summary>
            If plugin has external settings dialog that not integrated in the application via Options Dialog API, it should
            implement this interface on same to <see cref="T:AIMP.SDK.IAimpPlugin" /> interface level.
            </summary>
        </member>
        <member name="M:AIMP.SDK.IAimpExternalSettingsDialog.Show(System.IntPtr)">
            <summary>
            Shows the modal dialog.
            </summary>
            <param name="parentWindow">Handle of calling window.</param>
        </member>
        <member name="T:AIMP.SDK.AimpErrorArgs">
            <summary>
            Class AimpErrorArgs.
            Implements the <see cref="T:System.EventArgs" />
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="M:AIMP.SDK.AimpErrorArgs.#ctor(AIMP.SDK.ActionResultType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.AimpErrorArgs" /> class.
            </summary>
            <param name="aimpActionResult">The aimp action result.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:AIMP.SDK.AimpErrorArgs.#ctor(AIMP.SDK.ActionResultType,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.AimpErrorArgs" /> class.
            </summary>
            <param name="aimpActionResult">The aimp action result.</param>
            <param name="message">The message.</param>
            <param name="stackTrace">The stack trace.</param>
        </member>
        <member name="P:AIMP.SDK.AimpErrorArgs.ActionResultType">
            <summary>
            Gets the type of the action result.
            </summary>
            <value>The type of the action result.</value>
        </member>
        <member name="P:AIMP.SDK.AimpErrorArgs.Message">
            <summary>
            Gets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:AIMP.SDK.AimpErrorArgs.StackTrace">
            <summary>
            Gets or sets the stack trace.
            </summary>
            <value>The stack trace.</value>
        </member>
        <member name="T:AIMP.SDK.IAimpObject">
            <summary>
            Interface IAimpObject
            </summary>
        </member>
        <member name="T:AIMP.SDK.IAimpObjectList`1">
            <summary>
            This is a list of general purpose, it can contains any interfaces.
            </summary>
            <typeparam name="TObject">The type of elements in the list.</typeparam>
        </member>
        <member name="P:AIMP.SDK.IAimpObjectList`1.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="M:AIMP.SDK.IAimpObjectList`1.Add(`0)">
            <summary>
            Adds an item to the collection.
            </summary>
            <param name="entry">The object to add to the collection.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpObjectList`1.Clear">
            <summary>
            Removes all items from the list.
            </summary>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpObjectList`1.Delete(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpObjectList`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
            <param name="item">The object to insert into the collection.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpObjectList`1.GetObject(System.Int32,`0@)">
            <summary>
            Gets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <param name="item">The item at specified <paramref name="index" />.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpObjectList`1.SetObject(System.Int32,`0)">
            <summary>
            Sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to set.</param>
            <param name="item">The item to set.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.IAimpObjectList">
            <summary>
            Interface IAimpObjectList
            </summary>
        </member>
        <member name="P:AIMP.SDK.IAimpObjectList.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="M:AIMP.SDK.IAimpObjectList.Add(System.Object)">
            <summary>
            Adds an item to the collection.
            </summary>
            <param name="entry">The object to add to the collection.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpObjectList.Clear">
            <summary>
            Removes all items from the list.
            </summary>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpObjectList.Delete(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpObjectList.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
            <param name="item">The object to insert into the collection.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpObjectList.GetObject(System.Int32,System.Object@)">
            <summary>
            Gets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <param name="item">The item at specified <paramref name="index" />.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpObjectList.SetObject(System.Int32,System.Object)">
            <summary>
            Sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to set.</param>
            <param name="item">The item to set.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.IAimpStream">
            <summary>
            Interface provides methods for working with binary stream.
            Implements the <see cref="T:System.IDisposable" />
            Implements the <see cref="T:AIMP.SDK.IAimpObject" />
            </summary>
            <seealso cref="T:System.IDisposable" />
            <seealso cref="T:AIMP.SDK.IAimpObject" />
        </member>
        <member name="M:AIMP.SDK.IAimpStream.GetSize">
            <summary>
            Gets the size of stream, in bytes.
            </summary>
            <returns>System.Int64.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpStream.SetSize(System.Int64)">
            <summary>
            Method provides an ability to set stream size, in bytes.
            <para>
            Note: size of stream will be automatically extended when it needed.This method is for optimization purposes
            only.
            Warning! If current stream size more than new defined - part of data will be truncated.
            </para>
            </summary>
            <param name="value">New size, in bytes.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpStream.GetPosition">
            <summary>
            Gets the position of reading / writing cursor in bytes.
            </summary>
            <returns>System.Int64.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Allows to change position of reading / writing cursor.
            </summary>
            <param name="offset">Offset in bytes.</param>
            <param name="mode">A value of type <see cref="T:System.IO.SeekOrigin" /> indicating the reference point used to obtain
            the new position.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpStream.Read(System.Byte[],System.Int32)">
            <summary>
            Reads a block of bytes from the current stream and writes the data to a buffer.
            </summary>
            <param name="buffer">When this method returns, contains the specified byte array with the values from the current
            stream.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <returns>-1 on unexpected failure or count of read bytes otherwise.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpStream.Write(System.Byte[],System.Int32,System.Int32@)">
            <summary>
            Writes a block of bytes to the current stream using data read from a buffer.
            </summary>
            <param name="buffer">The buffer to write data from.</param>
            <param name="count">The maximum number of bytes to write.</param>
            <param name="written">Parameter displays what bytes has been really written to the stream.
            This parameter is optional - can be null.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.DataStorage.AimpDataField">
            <summary>
            Class AimpDataField.
            Implements the <see cref="T:AIMP.SDK.MusicLibrary.DataStorage.IAimpDataField" />
            </summary>
            <seealso cref="T:AIMP.SDK.MusicLibrary.DataStorage.IAimpDataField" />
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.AimpDataField.AIMPML_RESERVED_FIELD_ID">
            <summary>
            The aimpml reserved field identifier
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.AimpDataField.AIMPML_RESERVED_FIELD_FILENAME">
            <summary>
            The aimpml reserved field filename
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.AimpDataField.AIMPML_RESERVED_FIELD_FILESIZE">
            <summary>
            The aimpml reserved field filesize
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.AimpDataField.AIMPML_RESERVED_FIELD_DURATION">
            <summary>
            The aimpml reserved field duration
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.AimpDataField.AIMPML_RESERVED_FIELD_USERMARK">
            <summary>
            The aimpml reserved field usermark
            </summary>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.DataStorage.AimpDataField.#ctor(System.String,AIMP.SDK.MusicLibrary.DataStorage.AimpDataFieldType,AIMP.SDK.MusicLibrary.DataStorage.AimpDataFieldFlagsType)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.MusicLibrary.DataStorage.AimpDataField" /> class.
            </summary>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <param name="flags">The flags.</param>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.DataStorage.AimpDataField.Custom">
            <summary>
            Gets or sets the user data. That data will be attached to the instance of interface.
            </summary>
            <value>The custom.</value>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.DataStorage.AimpDataField.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.DataStorage.AimpDataField.Type">
            <summary>
            Gets or sets the type of field <see cref="T:AIMP.SDK.MusicLibrary.DataStorage.AimpDataFieldType" />.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.DataStorage.AimpDataField.Flags">
            <summary>
            Gets or sets the data field flags.
            </summary>
            <value>The flags.</value>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.DataStorage.AimpDataField.Image">
            <summary>
            Gets or sets the field image.
            </summary>
            <value>The image.</value>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.DataStorage.AimpDataField.DisplayValue">
            <summary>
            Gets or sets the display value.
            </summary>
            <value>The display value.</value>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.DataStorage.AimpDataFieldType">
            <summary>
            Enum AimpDataFieldType
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.AimpDataFieldType.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.AimpDataFieldType.Int32">
            <summary>
            The int32
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.AimpDataFieldType.Int64">
            <summary>
            The int64
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.AimpDataFieldType.Float">
            <summary>
            The float
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.AimpDataFieldType.String">
            <summary>
            The string
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.AimpDataFieldType.DateTime">
            <summary>
            Display value is formatted data time value (format string is depended from the context).
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.AimpDataFieldType.Duration">
            <summary>
            Display value is formatted time value (format string is depended from the context).
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.AimpDataFieldType.FileSize">
            <summary>
            Display value is formatted file size value (format string is depended from the context).
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.AimpDataFieldType.FileName">
            <summary>
            Grouping tree split the value by levels by the "\" and "/" characters. Grouping by this field with other fields is
            not available.
            </summary>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.DataStorage.AimpDataFieldFlagsType">
            <summary>
            Enum AimpDataFieldFlagsType
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.AimpDataFieldFlagsType.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.AimpDataFieldFlagsType.Grouping">
            <summary>
            The grouping
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.AimpDataFieldFlagsType.Filtering">
            <summary>
            The filtering
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.AimpDataFieldFlagsType.Internal">
            <summary>
            The internal
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.AimpDataFieldFlagsType.Required">
            <summary>
            The required
            </summary>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.DataStorage.ImageType">
            <summary>
            Enum ImageType
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.ImageType.Folder">
            <summary>
            The folder
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.ImageType.Artist">
            <summary>
            The artist
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.ImageType.Disk">
            <summary>
            The disk
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.ImageType.Note">
            <summary>
            The note
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.ImageType.Star">
            <summary>
            The star
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.ImageType.Calendar">
            <summary>
            The calendar
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.ImageType.Label">
            <summary>
            The label
            </summary>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.DataStorage.IAimpDataField">
            <summary>
            Provides information about the data field for Music Library.
            </summary>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.DataStorage.IAimpDataField.Custom">
            <summary>
            This is a user data parameter, it allow you to bind custom data to the interface.
            </summary>
            <value>The custom.</value>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.DataStorage.IAimpDataField.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.DataStorage.IAimpDataField.Type">
            <summary>
            Gets or sets the data field type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.DataStorage.IAimpDataField.Flags">
            <summary>
            Gets or sets the data field flags.
            </summary>
            <value>The flags.</value>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.DataStorage.IAimpDataField.Image">
            <summary>
            Gets or sets the field image.
            </summary>
            <value>The image.</value>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.DataStorage.IAimpDataField.DisplayValue">
            <summary>
            Gets or sets the display value.
            </summary>
            <value>The display value.</value>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.DataStorage.IAimpDataFieldDisplayValue">
            <summary>
            Providers an ability to customize display value for specified field.
            </summary>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.DataStorage.IAimpDataFieldDisplayValue.GetDisplayValue(System.Object,System.Int32@)">
            <summary>
            Gets the display value.
            </summary>
            <param name="value">The original value.</param>
            <param name="length">Count of characters in result.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.DataStorage.IAimpDataStorage">
            <summary>
            Interface provides an access to common to all data storages settings.
            The <see cref="T:AIMP.SDK.MusicLibrary.Presets.IAimpGroupingPresets" /> is implemented on same level.
            </summary>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.DataStorage.IAimpDataStorage.Id">
            <summary>
            Gets the storage identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.DataStorage.IAimpDataStorage.Caption">
            <summary>
            Gets the storage caption.
            </summary>
            <value>The caption.</value>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.DataStorage.IAimpDataStorage.GroupingPreset">
            <summary>
            Gets or sets the active grouping preset.
            </summary>
            <value>The grouping preset.</value>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.DataStorage.CapabilitiesFlags">
            <summary>
            Enum CapabilitiesFlags
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.CapabilitiesFlags.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.CapabilitiesFlags.HideAllData">
            <summary>
            The hide all data
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.CapabilitiesFlags.DontSort">
            <summary>
            The dont sort
            </summary>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.DataStorage.IAimpGroupingTreeDataProvider">
            <summary>
            Interface provides an ability to specify custom data provider for a grouping tree.
            </summary>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.DataStorage.IAimpGroupingTreeDataProvider.AppendFilter(AIMP.SDK.MusicLibrary.DataFilter.IAimpDataFilterGroup,AIMP.SDK.MusicLibrary.DataStorage.IAimpGroupingTreeSelection)">
            <summary>
            Plugin must build the data filter for table based on current Selection.
            </summary>
            <param name="filter">The filter.</param>
            <param name="selection">The selection.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.DataStorage.IAimpGroupingTreeDataProvider.GetCapabilities">
            <summary>
            Gets the capabilities.
            </summary>
            <returns>CapabilitiesFlags.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.DataStorage.IAimpGroupingTreeDataProvider.GetData(AIMP.SDK.MusicLibrary.DataStorage.IAimpGroupingTreeSelection)">
            <summary>
            Returns the data for next level of selected node in grouping tree.
            </summary>
            <param name="selection">The selection.</param>
            <returns>AimpActionResult&lt;IAimpGroupingTreeDataProviderSelection&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.DataStorage.IAimpGroupingTreeDataProvider.GetFieldForAlphabeticIndex">
            <summary>
            Returns the name of top level field for alphabetic index.
            </summary>
            <returns>AimpActionResult&lt;System.String&gt;.</returns>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.DataStorage.GroupingTreeNodeFlags">
            <summary>
            Enum GroupingTreeNodeFlags
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.GroupingTreeNodeFlags.HasChildren">
            <summary>
            The has children
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.GroupingTreeNodeFlags.Standalone">
            <summary>
            The standalone
            </summary>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.DataStorage.FieldImageIndex">
            <summary>
            Enum FieldImageIndex
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.FieldImageIndex.Folder">
            <summary>
            The folder
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.FieldImageIndex.Artist">
            <summary>
            The artist
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.FieldImageIndex.Disk">
            <summary>
            The disk
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.FieldImageIndex.Note">
            <summary>
            The note
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.FieldImageIndex.Star">
            <summary>
            The star
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.FieldImageIndex.Calendar">
            <summary>
            The calendar
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataStorage.FieldImageIndex.Label">
            <summary>
            The label
            </summary>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.DataStorage.IAimpGroupingTreeDataProviderSelection">
            <summary>
            Interface provides an access to data from the <seealso cref="M:AIMP.SDK.MusicLibrary.DataStorage.IAimpGroupingTreeDataProvider.GetData(AIMP.SDK.MusicLibrary.DataStorage.IAimpGroupingTreeSelection)" />.
            Interface implementation must support asynchronous access.
            </summary>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.DataStorage.IAimpGroupingTreeDataProviderSelection.GetDisplayValue">
            <summary>
            Returns text to display to end user (optionally).
            </summary>
            <returns>AimpActionResult&lt;System.String&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.DataStorage.IAimpGroupingTreeDataProviderSelection.GetFlags">
            <summary>
            Gets the tree node flags <see cref="T:AIMP.SDK.MusicLibrary.DataStorage.GroupingTreeNodeFlags" />.
            <note>
            AIMPML_GROUPINGTREENODE_FLAG_HASCHILDREN - current node has children.
            AIMPML_GROUPINGTREENODE_FLAG_STANDALONE <see cref="T:AIMP.SDK.MusicLibrary.DataStorage.IAimpGroupingTreeSelection" />.
            </note>
            </summary>
            <returns>GroupingTreeNodeFlags.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.DataStorage.IAimpGroupingTreeDataProviderSelection.GetImageIndex">
            <summary>
            Return the node image <see cref="T:AIMP.SDK.MusicLibrary.DataStorage.FieldImageIndex" />.
            </summary>
            <returns>AimpActionResult&lt;FieldImageIndex&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.DataStorage.IAimpGroupingTreeDataProviderSelection.GetValue">
            <summary>
            Returns the value for specified field name.
            </summary>
            <returns>AimpActionResult&lt;System.String, System.Object&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.DataStorage.IAimpGroupingTreeDataProviderSelection.NextRow">
            <summary>
            Jumps to the next record. Returns False if current node is last.
            </summary>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.DataStorage.IAimpGroupingTreeSelection">
            <summary>
            Interface provides an access to selected nodes in grouping tree.
            <note>
            First element in the Selection is focused node. If current node does not have the
            AIMPML_GROUPINGTREENODE_FLAG_STANDALONE flag - the parent node will be added to Selection.
            Algorithm running until root or node with the AIMPML_GROUPINGTREENODE_FLAG_STANDALONE flag.
            </note>
            </summary>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.DataStorage.IAimpGroupingTreeSelection.GetCount">
            <summary>
            Gets the count.
            </summary>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.DataStorage.IAimpGroupingTreeSelection.GetValue(System.Int32)">
            <summary>
            Gets the value.
            </summary>
            <param name="index">The index.</param>
            <returns>AimpActionResult&lt;System.String, System.Object&gt;.</returns>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.DataStorage.IAimpDataProvider">
            <summary>
            Provides an access to data in data storage.
            Must be implemented by plugin on same level as the
            <see cref="T:AIMP.SDK.MusicLibrary.Extension.IAimpExtensionDataStorage" /> interface.
            Interface implementation must support asynchronous access.
            </summary>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.DataStorage.IAimpDataProvider.GetData(System.Collections.Generic.IList{System.String},AIMP.SDK.MusicLibrary.IAimpDataFilter)">
            <summary>
            Gets the data.
            </summary>
            <param name="fields">List of field names that requires the data.
            List populates automatically in dependency what fields are used by user or marked as required.</param>
            <param name="filter">Plugin must take it into account, if the <see cref="F:AIMP.SDK.MusicLibrary.Extension.CapabilitiesType.Filtering" /> flag is defined
            in the <see cref="P:AIMP.SDK.MusicLibrary.Extension.IAimpExtensionDataStorage.Capabilities" /> property value.</param>
            <returns>Operation result <seealso cref="T:AIMP.SDK.AimpActionResult" /></returns>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.DataFilter.FieldFilterOperationType">
            <summary>
            Enum FieldFilterOperationType
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataFilter.FieldFilterOperationType.Equals">
            <summary>
            The equals
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataFilter.FieldFilterOperationType.NotEquals">
            <summary>
            The not equals
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataFilter.FieldFilterOperationType.Between">
            <summary>
            The between
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataFilter.FieldFilterOperationType.LessThan">
            <summary>
            The less than
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataFilter.FieldFilterOperationType.LessThanOrEquals">
            <summary>
            The less than or equals
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataFilter.FieldFilterOperationType.GreaterThan">
            <summary>
            The greater than
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataFilter.FieldFilterOperationType.GreaterThanOrEquals">
            <summary>
            The greater than or equals
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataFilter.FieldFilterOperationType.Contains">
            <summary>
            Determines whether this instance contains the object.
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataFilter.FieldFilterOperationType.BeginsWith">
            <summary>
            The begins with
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataFilter.FieldFilterOperationType.EndsWith">
            <summary>
            The ends with
            </summary>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.DataFilter.IAimpDataFieldFilter">
            <summary>
            Interface IAimpDataFieldFilter
            </summary>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.DataFilter.IAimpDataFieldFilter.Field">
            <summary>
            Gets or sets the filter field.
            </summary>
            <value>The field.</value>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.DataFilter.IAimpDataFieldFilter.Operation">
            <summary>
            Gets or sets the filter operation.
            </summary>
            <value>The operation.</value>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.DataFilter.IAimpDataFieldFilter.Value1">
            <summary>
            Gets or sets the filter value.
            </summary>
            <value>The value1.</value>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.DataFilter.IAimpDataFieldFilter.Value2">
            <summary>
            This value is used if the <see cref="P:AIMP.SDK.MusicLibrary.DataFilter.IAimpDataFieldFilter.Operation" /> property is set to the
            <see cref="F:AIMP.SDK.MusicLibrary.DataFilter.FieldFilterOperationType.Between" /> value.
            </summary>
            <value>The value2.</value>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.DataFilter.IAimpDataFieldFilterByArray">
            <summary>
            Interface IAimpDataFieldFilterByArray
            </summary>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.DataFilter.IAimpDataFieldFilterByArray.Field">
            <summary>
            Gets or sets the filter field.
            </summary>
            <value>The field.</value>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.DataFilter.IAimpDataFieldFilterByArray.GetData(System.Collections.Generic.IList{System.Object})">
            <summary>
            Gets the data.
            </summary>
            <param name="values">The values.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.DataFilter.IAimpDataFieldFilterByArray.SetData(System.Collections.Generic.IList{System.Object})">
            <summary>
            Sets the data.
            </summary>
            <param name="values">The values.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.DataFilter.FilterGroupOperationType">
            <summary>
            Enum FilterGroupOperationType
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataFilter.FilterGroupOperationType.Or">
            <summary>
            The or
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataFilter.FilterGroupOperationType.And">
            <summary>
            The and
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataFilter.FilterGroupOperationType.NotOr">
            <summary>
            The not or
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.DataFilter.FilterGroupOperationType.NotAnd">
            <summary>
            The not and
            </summary>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.DataFilter.IAimpDataFilterGroup">
            <summary>
            Provides an ability to group few filters.
            </summary>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.DataFilter.IAimpDataFilterGroup.Operation">
            <summary>
            Gets or sets the rule processing results from subsidiaries filters.
            </summary>
            <value>The operation.</value>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.DataFilter.IAimpDataFilterGroup.Add(System.String,System.Object,System.Object,AIMP.SDK.MusicLibrary.DataFilter.FieldFilterOperationType)">
            <summary>
            Adds the new child filter to the group.
            </summary>
            <param name="field">The field name.</param>
            <param name="value1">The value1.</param>
            <param name="value2">The value2.</param>
            <param name="operation">The rule processing results from subsidiaries filters.</param>
            <returns>AimpActionResult&lt;IAimpDataFieldFilter&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.DataFilter.IAimpDataFilterGroup.Add(System.String,System.Object[],System.Int32)">
            <summary>
            Adds the specified field.
            </summary>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <param name="count">The count.</param>
            <returns>AimpActionResult&lt;IAimpDataFieldFilterByArray&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.DataFilter.IAimpDataFilterGroup.AddGroup">
            <summary>
            Adds the child group.
            </summary>
            <returns>AimpActionResult&lt;IAimpDataFilterGroup&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.DataFilter.IAimpDataFilterGroup.Clear">
            <summary>
            Clears the filter.
            </summary>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.DataFilter.IAimpDataFilterGroup.Delete(System.Int32)">
            <summary>
            Deletes the filter by specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.DataFilter.IAimpDataFilterGroup.GetFilterGroup(System.Int32)">
            <summary>
            Gets the child group by index.
            </summary>
            <param name="index">The index.</param>
            <returns>AimpActionResult&lt;IAimpDataFilterGroup&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.DataFilter.IAimpDataFilterGroup.GetFieldFilter(System.Int32)">
            <summary>
            Gets the child field filter by index.
            </summary>
            <param name="index">The index.</param>
            <returns>AimpActionResult&lt;IAimpDataFieldFilter&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.DataFilter.IAimpDataFilterGroup.GetChildCount">
            <summary>
            Gets the child count.
            </summary>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.DataFilter.IAimpDataFilterGroup.BeginUpdate">
            <summary>
            Begins the update.
            </summary>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.DataFilter.IAimpDataFilterGroup.EndUpdate">
            <summary>
            Ends the update.
            </summary>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.Extension.Command.IAimpDataStorageCommandAddFiles">
            <summary>
            Interface IAimpDataStorageCommandAddFiles
            </summary>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.Extension.Command.IAimpDataStorageCommandAddFiles.Add(System.Collections.Generic.IList{System.String})">
            <summary>
            Adds the specified files.
            </summary>
            <param name="files">List of the file names.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.Extension.Command.IAimpDataStorageCommandAddFilesDialog">
            <summary>
            Interface IAimpDataStorageCommandAddFilesDialog
            </summary>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.Extension.Command.IAimpDataStorageCommandAddFilesDialog.Execute(System.IntPtr)">
            <summary>
            Executes the specified owner handle.
            </summary>
            <param name="ownerHandle">The owner window handle.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.Extension.Command.IAimpDataStorageCommandDeleteFiles">
            <summary>
            Interface IAimpDataStorageCommandDeleteFiles
            </summary>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.Extension.Command.IAimpDataStorageCommandDeleteFiles.CanDelete(System.Boolean)">
            <summary>
            Determines whether this instance can delete the specified physically.
            </summary>
            <param name="physically">if set to <c>true</c> [physically].</param>
            <returns><c>true</c> if this instance can delete the specified physically; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.Extension.Command.IAimpDataStorageCommandDeleteFiles.Delete(AIMP.SDK.MusicLibrary.IAimpFileList,System.Boolean)">
            <summary>
            Deletes the specified files.
            </summary>
            <param name="files">The files.</param>
            <param name="physically">if set to <c>true</c> [physically].</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.Extension.Command.IAimpDataStorageCommandDropData">
            <summary>
            Interface IAimpDataStorageCommandDropData
            </summary>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.Extension.Command.IAimpDataStorageCommandDropData.DropData">
            <summary>
            Drops the data.
            </summary>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.Extension.Command.IAimpDataStorageCommandReloadTags">
            <summary>
            Interface IAimpDataStorageCommandReloadTags
            </summary>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.Extension.Command.IAimpDataStorageCommandReloadTags.ReloadTags(AIMP.SDK.MusicLibrary.IAimpFileList)">
            <summary>
            Reloads the tags.
            </summary>
            <param name="files">The files.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.Extension.Command.IAimpDataStorageCommandReportDialog">
            <summary>
            Interface IAimpDataStorageCommandReportDialog
            </summary>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.Extension.Command.IAimpDataStorageCommandReportDialog.Execute(System.IntPtr)">
            <summary>
            Executes the specified owner handle.
            </summary>
            <param name="ownerHandle">The owner handle.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.Extension.Command.IAimpDataStorageCommandUserMark">
            <summary>
            Interface IAimpDataStorageCommandUserMark
            </summary>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.Extension.Command.IAimpDataStorageCommandUserMark.SetMark(System.Object,System.Double)">
            <summary>
            Sets the mark.
            </summary>
            <param name="id">The identifier.</param>
            <param name="value">The value.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.Extension.CapabilitiesType">
            <summary>
            Enum CapabilitiesType
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.Extension.CapabilitiesType.Filtering">
            <summary>
            The filtering
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.Extension.CapabilitiesType.Preimages">
            <summary>
            The preimages
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.Extension.CapabilitiesType.GroupingPresets">
            <summary>
            The grouping presets
            </summary>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.Extension.SchemaType">
            <summary>
            Enum SchemaType
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.Extension.SchemaType.All">
            <summary>
            List of all available fields in data storage.
            The property <see cref="M:AIMP.SDK.MusicLibrary.Extension.IAimpExtensionDataStorage.GetFields(AIMP.SDK.MusicLibrary.Extension.SchemaType)" /> must contains an <see cref="!:IAimpDataField" />
            objects.
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.Extension.SchemaType.TableGroupby">
            <summary>
            List of fields that used for grouping in table.
            If list is empty - the Group Details and the Album Thumbnails views will not be available for the end user.
            The property <see cref="M:AIMP.SDK.MusicLibrary.Extension.IAimpExtensionDataStorage.GetFields(AIMP.SDK.MusicLibrary.Extension.SchemaType)" /> must contains an string objects with field names.
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.Extension.SchemaType.GroupingTree">
            <summary>
            The grouping tree
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.Extension.SchemaType.TableGroupDetails">
            <summary>
            List of fields that displays in group details area.
            The property <see cref="M:AIMP.SDK.MusicLibrary.Extension.IAimpExtensionDataStorage.GetFields(AIMP.SDK.MusicLibrary.Extension.SchemaType)" /> must contains an string objects with field names.
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.Extension.SchemaType.TableViewDefault">
            <summary>
            List of fields that displays to end user in table by default in Default view.
            The property <see cref="M:AIMP.SDK.MusicLibrary.Extension.IAimpExtensionDataStorage.GetFields(AIMP.SDK.MusicLibrary.Extension.SchemaType)" /> must contains an string objects with field names.
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.Extension.SchemaType.TableViewGroupDetails">
            <summary>
            list of fields that displays to end user in table by default in Group Details view.
            The property <see cref="M:AIMP.SDK.MusicLibrary.Extension.IAimpExtensionDataStorage.GetFields(AIMP.SDK.MusicLibrary.Extension.SchemaType)" /> must contains an string objects with field names.
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.Extension.SchemaType.TableViewAlbumThumbnails">
            <summary>
            List of fields that displays to end user in table by default in Album Thumbnails view.
            The property <see cref="M:AIMP.SDK.MusicLibrary.Extension.IAimpExtensionDataStorage.GetFields(AIMP.SDK.MusicLibrary.Extension.SchemaType)" /> must contains an string objects with field names.
            </summary>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.Extension.GroupingPresetsSchemaType">
            <summary>
            Enum GroupingPresetsSchemaType
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.Extension.GroupingPresetsSchemaType.BuiltIn">
            <summary>
            The built in
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.Extension.GroupingPresetsSchemaType.Default">
            <summary>
            The default
            </summary>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.Extension.IAimpExtensionDataStorage">
            <summary>
            The extension for the <see cref="T:AIMP.SDK.MusicLibrary.IAimpServiceMusicLibrary" /> service provides an ability to plugin to implement
            custom data storage for the Music Library.
            Interface implementation must support asynchronous access.
            <para>
            Data storage MUST contains a fields with following names:
            AIMPML_RESERVED_FIELD_ID - unique ID of record in data storage
            AIMPML_RESERVED_FIELD_FILENAME - file name of the record that used by player
            If this fields are not defined in Data Storage - registration of the extension will be failed.
            Also, the Music Library engine provides an ability to use following special fields:
            AIMPML_RESERVED_FIELD_FILESIZE - file size in bytes (type: Int64), used to calculate information about the
            content of table
            AIMPML_RESERVED_FIELD_DURATION - duration in seconds (type: Double) ,used to calculate information about the
            content of table
            AIMPML_RESERVED_FIELD_USERMARK - user rating mark (type: Double), Refer to the
            IAIMPMLDataStorageCommandUserMark
            </para>
            </summary>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.Extension.IAimpExtensionDataStorage.Id">
            <summary>
            Gets the storage identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.Extension.IAimpExtensionDataStorage.Caption">
            <summary>
            Gets the storage title.
            </summary>
            <value>The caption.</value>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.Extension.IAimpExtensionDataStorage.Capabilities">
            <summary>
            Gets the capabilities.
            </summary>
            <value>The capabilities.</value>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.Extension.IAimpExtensionDataStorage.Initialize(AIMP.SDK.MusicLibrary.IAimpDataStorageManager)">
            <summary>
            Method calls after succeeded registration of data storage.
            </summary>
            <param name="manager">The Manager interface is used to notify the Music Library about the changes in data storage.</param>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.Extension.IAimpExtensionDataStorage.Terminate">
            <summary>
            Method calls before the finalization of plugin.
            Plugin must dispose all external links.
            </summary>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.Extension.IAimpExtensionDataStorage.FlushCache">
            <summary>
            Method calls when user executes the "refresh" command via hotkey or context menu.
            After this call the Music Library engine will automatically reload the data from data storage.
            </summary>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.Extension.IAimpExtensionDataStorage.ConfigLoad(AIMP.SDK.IAimpConfig,System.String)">
            <summary>
            Method will be called on first activation of tab of data storage in Music Library interface.
            </summary>
            <param name="config">The configuration.</param>
            <param name="section">Section Name to that contains the settings.
            You can use the children section names if it needed: Section + "." + ChildSectionName</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.Extension.IAimpExtensionDataStorage.ConfigSave(AIMP.SDK.IAimpConfig,System.String)">
            <summary>
            Method calls before the finalization of plugin.
            </summary>
            <param name="config">The configuration.</param>
            <param name="section">Section Name to store the settings.
            You can use the children section names if it needed: Section + "." + ChildSectionName</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.Extension.IAimpExtensionDataStorage.GetFields(AIMP.SDK.MusicLibrary.Extension.SchemaType)">
            <summary>
            Method returns settings and layout of the data fields in dependency from specified Schema value.
            </summary>
            <param name="schemaType">Type of the schema <see cref="T:AIMP.SDK.MusicLibrary.Extension.SchemaType" />.</param>
            <returns>AimpActionResult&lt;IList&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.Extension.IAimpExtensionDataStorage.GetGroupingPresets(AIMP.SDK.MusicLibrary.Extension.GroupingPresetsSchemaType,AIMP.SDK.MusicLibrary.Presets.IAimpGroupingPresets)">
            <summary>
            Plugin must populate the Presets list by predefined presets for grouping tree based on the Schema value.
            </summary>
            <param name="schema">The schema.</param>
            <param name="presets">The presets.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.SortDirectionType">
            <summary>
            Enum SortDirectionType
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.SortDirectionType.Ascending">
            <summary>
            The ascending
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.SortDirectionType.Descending">
            <summary>
            The descending
            </summary>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.IAimpDataFilter">
            <summary>
            Interface IAimpDataFilter
            Implements the <see cref="T:AIMP.SDK.MusicLibrary.DataFilter.IAimpDataFilterGroup" />
            </summary>
            <seealso cref="T:AIMP.SDK.MusicLibrary.DataFilter.IAimpDataFilterGroup" />
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.IAimpDataFilter.Offset">
            <summary>
            Gets or sets the count of records to skip.
            </summary>
            <value>The offset.</value>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.IAimpDataFilter.Limit">
            <summary>
            Gets or sets the max count of records to return. 0 - maximum is not set.
            </summary>
            <value>The limit.</value>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.IAimpDataFilter.SortBy">
            <summary>
            Gets or sets the field name for sorting. Can be null.
            </summary>
            <value>The sort by.</value>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.IAimpDataFilter.SortDirection">
            <summary>
            Gets or sets the sort direction. AIMPML_FILTER_SORTBY
            </summary>
            <value>The sort direction.</value>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.IAimpDataFilter.SearchString">
            <summary>
            Gets or sets the search string. Can be null.
            </summary>
            <value>The search string.</value>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.IAimpDataFilter.AlphaBeticIndex">
            <summary>
            Code of character in the alphabetic index. 0 - character is not set.
            </summary>
            <value>The index of the alpha betic.</value>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpDataFilter.Assign(AIMP.SDK.MusicLibrary.IAimpDataFilter)">
            <summary>
            Copies the data from a Source filter.
            Note: source filter must be assigned to same data storage.
            </summary>
            <param name="source">The source.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpDataFilter.Clone">
            <summary>
            Clones to the specified source.
            </summary>
            <returns>AimpActionResult&lt;IAimpDataFilter&gt;.</returns>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.IAimpDataProviderSelection">
            <summary>
            Interface provides access to the currently selected data at DataProvider.
            Interface implementation must support asynchronous access.
            </summary>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpDataProviderSelection.GetValueAsFloat(System.Int32)">
            <summary>
            Gets the value as float.
            </summary>
            <param name="fieldIndex">Index of the field.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpDataProviderSelection.GetValueAsInt32(System.Int32)">
            <summary>
            Gets the value as int32.
            </summary>
            <param name="fieldIndex">Index of the field.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpDataProviderSelection.GetValueAsInt64(System.Int32)">
            <summary>
            Gets the value as int64.
            </summary>
            <param name="fieldIndex">Index of the field.</param>
            <returns>System.Int64.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpDataProviderSelection.GetValueAsString(System.Int32)">
            <summary>
            Gets the value as string.
            </summary>
            <param name="fieldIndex">Index of the field.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpDataProviderSelection.HasNextPage">
            <summary>
            Return the True value to notify the Music library the page-by-page access method is used to access to the data.
            Value specifies that next page of data is available.
            Note that this mode automatically disable for end users the Group Details and the Album Thumbnails views.
            </summary>
            <returns><c>true</c> if [has next page]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpDataProviderSelection.NextRow">
            <summary>
            Jumps to next row. Returns False if current row is last.
            </summary>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.IAimpDataStorageManager">
            <summary>
            Uses for notify library about changes at data storage.
            <para>
            Instance of interface creates by music library manager and put to plugin via the
            <see cref="M:AIMP.SDK.MusicLibrary.Extension.IAimpExtensionDataStorage.Initialize(AIMP.SDK.MusicLibrary.IAimpDataStorageManager)" /> method.
            </para>
            </summary>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpDataStorageManager.BackgroundTaskStarted(System.Int32,System.String,AIMP.SDK.ActionManager.IAimpActionEvent)">
            <summary>
            Notifies about the background task that has been started.
            </summary>
            <param name="id">The identifier.</param>
            <param name="caption">The caption.</param>
            <param name="cancelEvent">The cancel event.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpDataStorageManager.BackgroundTaskFinished(System.Int32)">
            <summary>
            Notifies about the background task that has been finished.
            </summary>
            <param name="id">The identifier.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpDataStorageManager.Changed">
            <summary>
            Notifies the manager that data in data storage has been changed.
            This reloads the data in all views of Music Library and smart-playlists.
            </summary>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.IAimpFileList">
            <summary>
            Represents the pair {File name, ID} for data provider.
            </summary>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpFileList.Add(System.Object,System.String)">
            <summary>
            Adds new file to the list.
            </summary>
            <param name="id">File identifier.</param>
            <param name="fileName">File name.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpFileList.Clear">
            <summary>
            Clears the list.
            </summary>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpFileList.Delete(System.Int32)">
            <summary>
            Deletes the file by index.
            </summary>
            <param name="index">The index.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpFileList.Insert(System.Int32,System.Object,System.String)">
            <summary>
            Inserts new file to the list at specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="id">The identifier.</param>
            <param name="fileName">The file name.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpFileList.GetCount">
            <summary>
            Get the count of list.
            </summary>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpFileList.GetFileName(System.Int32)">
            <summary>
            Gets the file name.
            </summary>
            <param name="index">The index.</param>
            <returns>AimpActionResult&lt;System.String&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpFileList.SetFileName(System.Int32,System.String)">
            <summary>
            Sets the new name for file.
            </summary>
            <param name="index">The index.</param>
            <param name="fileName">New file name.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpFileList.GetId(System.Int32)">
            <summary>
            Gets the file identifier.
            </summary>
            <param name="index">The index.</param>
            <returns>AimpActionResult&lt;System.Object&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpFileList.SetId(System.Int32,System.Object)">
            <summary>
            Sets the new identifier for file.
            </summary>
            <param name="index">The index.</param>
            <param name="id">New identifier.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpFileList.Clone">
            <summary>
            Clones the list.
            </summary>
            <returns>AimpActionResult&lt;IAimpFileList&gt;.</returns>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.IAimpMusicLibraryPlaylistPreimage">
            <summary>
            Provides an access to preimage settings that based on one of data storages of Music Library.
            Note that some data storage has no support of preimages.
            Implements the <see cref="T:AIMP.SDK.Playlist.IAimpPlaylistPreimage" />
            </summary>
            <seealso cref="T:AIMP.SDK.Playlist.IAimpPlaylistPreimage" />
            <seealso cref="T:AIMP.SDK.Playlist.IAimpPlaylistPreimage" />
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpMusicLibraryPlaylistPreimage.GetFilter">
            <summary>
            Gets the filter.
            </summary>
            <returns>AimpActionResult&lt;IAimpDataFilter&gt;.</returns>
            <note>
            All changes in the Filter will be automatically applied to the preimage.
            Use the BeginUpdate / EndUpdate methods to change few settings at one time.
            </note>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpMusicLibraryPlaylistPreimage.GetStorage">
            <summary>
            Gets the storage.
            </summary>
            <returns>AimpActionResult&lt;IAimpDataStorage&gt;.</returns>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.Presets.IAimpGroupingPreset">
            <summary>
            Allow access to grouping preset.
            </summary>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.Presets.IAimpGroupingPreset.Custom">
            <summary>
            Gets or sets the user custom data.
            </summary>
            <value>The custom.</value>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.Presets.IAimpGroupingPreset.Id">
            <summary>
            Gets or sets the preset identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.Presets.IAimpGroupingPreset.Name">
            <summary>
            Gets or sets the preset name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.Presets.IAimpGroupingPresets">
            <summary>
            Allow access to preset for data storage.
            </summary>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.Presets.IAimpGroupingPresets.Add(System.String,System.String,AIMP.SDK.MusicLibrary.DataStorage.IAimpGroupingTreeDataProvider)">
            <summary>
            Adds new grouping template with custom data provider <seealso cref="T:AIMP.SDK.MusicLibrary.DataStorage.IAimpGroupingTreeDataProvider" />.
            </summary>
            <param name="id">The identifier.</param>
            <param name="name">Template name.</param>
            <param name="provider">Custom data provider <seealso cref="T:AIMP.SDK.MusicLibrary.DataStorage.IAimpGroupingTreeDataProvider" />.</param>
            <returns>AimpActionResult&lt;IAimpGroupingPreset&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.Presets.IAimpGroupingPresets.Add(System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Adds new grouping template with default data provider.
            </summary>
            <param name="id">The identifier.</param>
            <param name="name">Template name.</param>
            <param name="fieldNames">The list of fields</param>
            <returns>AimpActionResult&lt;IAimpGroupingPresetStandard&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.Presets.IAimpGroupingPresets.Add(System.String,System.String,System.String)">
            <summary>
            Adds new grouping template with default data provider.
            </summary>
            <param name="id">The identifier.</param>
            <param name="name">Template name.</param>
            <param name="fieldName">The field name.</param>
            <returns>AimpActionResult&lt;IAimpGroupingPresetStandard&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.Presets.IAimpGroupingPresets.BeginUpdate">
            <summary>
            Adds blocking on sending notifications during changes.
            Use it if you want to change multiple properties at the same time.
            </summary>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.Presets.IAimpGroupingPresets.EndUpdate">
            <summary>
            Removes blocking on sending notifications.
            </summary>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.Presets.IAimpGroupingPresets.Delete(System.Int32)">
            <summary>
            Removes a template by index.
            </summary>
            <param name="index">Index.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.Presets.IAimpGroupingPresets.GetPreset(System.Int32)">
            <summary>
            Gets the grouping preset by index.
            </summary>
            <param name="index">Index.</param>
            <returns>AimpActionResult&lt;IAimpGroupingPreset&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.Presets.IAimpGroupingPresets.GetStandardPreset(System.Int32)">
            <summary>
            Gets the standard grouping preset by index.
            </summary>
            <param name="index">Index.</param>
            <returns>AimpActionResult&lt;IAimpGroupingPresetStandard&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.Presets.IAimpGroupingPresets.GetPresetById(System.String)">
            <summary>
            Gets the grouping preset by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>AimpActionResult&lt;IAimpGroupingPreset&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.Presets.IAimpGroupingPresets.GetStandardPresetById(System.String)">
            <summary>
            Gets the standard grouping preset by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>AimpActionResult&lt;IAimpGroupingPresetStandard&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.Presets.IAimpGroupingPresets.GetCount">
            <summary>
            Gets the count of presets.
            </summary>
            <returns>System.Int32.</returns>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.Presets.IAimpGroupingPresetStandard">
            <summary>
            Represents the preset for standard grouping.
            Implements the <see cref="T:AIMP.SDK.MusicLibrary.Presets.IAimpGroupingPreset" />
            </summary>
            <seealso cref="T:AIMP.SDK.MusicLibrary.Presets.IAimpGroupingPreset" />
        </member>
        <member name="P:AIMP.SDK.MusicLibrary.Presets.IAimpGroupingPresetStandard.Fields">
            <summary>
            Gets or sets the fields that used for grouping at filter.
            </summary>
            <value>The fields.</value>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.Presets.IAimpGroupingPresetStandard.GetFilter">
            <summary>
            Gets the used filter.
            </summary>
            <returns>AimpActionResult&lt;IAimpDataFilterGroup&gt;.</returns>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.IAimpServiceMusicLibrary">
            <summary>
            Provides an access to data storages of Music Library.
            Implements the <see cref="T:AIMP.SDK.IAimpService" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpService" />
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpServiceMusicLibrary.GetActiveStorage">
            <summary>
            Gets the active data storage.
            </summary>
            <returns>AimpActionResult&lt;IAimpDataStorage&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpServiceMusicLibrary.GetActiveGroupingPresets">
            <summary>
            Gets the active grouping preset.
            </summary>
            <returns>AimpActionResult&lt;IAimpGroupingPresets&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpServiceMusicLibrary.SetActiveStorage(AIMP.SDK.MusicLibrary.DataStorage.IAimpDataStorage)">
            <summary>
            Sets the active data storage.
            </summary>
            <param name="storage">The data storage.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpServiceMusicLibrary.SetActiveStorage(AIMP.SDK.MusicLibrary.Presets.IAimpGroupingPresets)">
            <summary>
            Sets the active storage.
            </summary>
            <param name="preset">The grouping preset.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpServiceMusicLibrary.GetStorage(System.Int32)">
            <summary>
            Gets the data storage by index.
            </summary>
            <param name="index">The index.</param>
            <returns>AimpActionResult&lt;IAimpDataStorage&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpServiceMusicLibrary.GetGroupingPresets(System.Int32)">
            <summary>
            Gets the grouping preset by index.
            </summary>
            <param name="index">The index.</param>
            <returns>AimpActionResult&lt;IAimpGroupingPresets&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpServiceMusicLibrary.GetStorageById(System.String)">
            <summary>
            Gets the data storage by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>AimpActionResult&lt;IAimpDataStorage&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpServiceMusicLibrary.GetGroupingPresetsById(System.String)">
            <summary>
            Gets the grouping preset by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>AimpActionResult&lt;IAimpGroupingPresets&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpServiceMusicLibrary.GetStorageCount">
            <summary>
            Gets the storage count.
            </summary>
            <returns>System.Int32.</returns>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.FilesType">
            <summary>
            Enum FilesType
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.FilesType.All">
            <summary>
            All
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.FilesType.Selected">
            <summary>
            The selected
            </summary>
        </member>
        <member name="F:AIMP.SDK.MusicLibrary.FilesType.Focused">
            <summary>
            The focused
            </summary>
        </member>
        <member name="T:AIMP.SDK.MusicLibrary.IAimpServiceMusicLibraryUI">
            <summary>
            Provides an access to data of UI elements for an active data storage that uses by the user.
            Implements the <see cref="T:AIMP.SDK.IAimpService" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpService" />
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpServiceMusicLibraryUI.GetFiles(AIMP.SDK.MusicLibrary.FilesType)">
            <summary>
            Gets the file list from table view.
            </summary>
            <param name="flags">The flags.</param>
            <returns>AimpActionResult&lt;IAimpFileList&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpServiceMusicLibraryUI.GetGroupingFilter">
            <summary>
            Gets the grouping filter.
            </summary>
            <returns>AimpActionResult&lt;IAimpDataFilter&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpServiceMusicLibraryUI.GetGroupingFilterPath">
            <summary>
            Gets the grouping filter path.
            </summary>
            <returns>AimpActionResult&lt;System.String&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MusicLibrary.IAimpServiceMusicLibraryUI.SetGroupingFilterPath(System.String)">
            <summary>
            Sets the grouping filter path.
            </summary>
            <param name="path">The path.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.Playback.PlaybackQueueFlags">
            <summary>
            Enum PlaybackQueueFlags
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playback.PlaybackQueueFlags.StartFromBeginning">
            <summary>
            The start from beginning
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playback.PlaybackQueueFlags.StartFromCursor">
            <summary>
            The start from cursor
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playback.PlaybackQueueFlags.StartFromItem">
            <summary>
            The start from item
            </summary>
        </member>
        <member name="T:AIMP.SDK.Playback.IAimpExtensionPlaybackQueue">
            <summary>
            Interface IAimpExtensionPlaybackQueue
            Implements the <see cref="T:AIMP.SDK.IAimpExtension" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpExtension" />
        </member>
        <member name="M:AIMP.SDK.Playback.IAimpExtensionPlaybackQueue.GetNext(System.Object,AIMP.SDK.Playback.PlaybackQueueFlags,AIMP.SDK.Playback.IAimpPlaybackQueueItem)">
            <summary>
            Gets the next.
            </summary>
            <param name="current">The current.</param>
            <param name="flags">The flags.</param>
            <param name="queueItem">The queue item.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:AIMP.SDK.Playback.IAimpExtensionPlaybackQueue.GetPrev(System.Object,AIMP.SDK.Playback.PlaybackQueueFlags,AIMP.SDK.Playback.IAimpPlaybackQueueItem)">
            <summary>
            Gets the previous.
            </summary>
            <param name="current">The current.</param>
            <param name="flags">The flags.</param>
            <param name="queueItem">The queue item.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:AIMP.SDK.Playback.IAimpExtensionPlaybackQueue.OnSelect(AIMP.SDK.Playlist.IAimpPlaylistItem,AIMP.SDK.Playback.IAimpPlaybackQueueItem)">
            <summary>
            Called when [select].
            </summary>
            <param name="item">The item.</param>
            <param name="queueItem">The queue item.</param>
        </member>
        <member name="T:AIMP.SDK.Playback.IAimpServicePlaybackQueue">
            <summary>
            Interface IAimpServicePlaybackQueue
            Implements the <see cref="T:AIMP.SDK.IAimpService" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpService" />
        </member>
        <member name="M:AIMP.SDK.Playback.IAimpServicePlaybackQueue.GetNextTrack">
            <summary>
            Gets the next track.
            </summary>
            <returns>AimpActionResult&lt;IAimpPlaybackQueueItem&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.Playback.IAimpServicePlaybackQueue.GetPrevTrack">
            <summary>
            Gets the previous track.
            </summary>
            <returns>AimpActionResult&lt;IAimpPlaybackQueueItem&gt;.</returns>
        </member>
        <member name="T:AIMP.SDK.Playback.IAimpExtensionPlayerHook">
            <summary>
            Interface IAimpExtensionPlayerHook
            Implements the <see cref="T:AIMP.SDK.IAimpExtension" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpExtension" />
        </member>
        <member name="M:AIMP.SDK.Playback.IAimpExtensionPlayerHook.OnCheckURL(System.String@)">
            <summary>
            Called when [check URL].
            </summary>
            <param name="url">The URL.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:AIMP.SDK.Playback.IAimpPlaybackQueueItem">
            <summary>
            Interface IAimpPlaybackQueueItem
            </summary>
        </member>
        <member name="P:AIMP.SDK.Playback.IAimpPlaybackQueueItem.UserData">
            <summary>
            Gets or sets the user data.
            </summary>
            <value>The user data.</value>
        </member>
        <member name="P:AIMP.SDK.Playback.IAimpPlaybackQueueItem.PlaylistItem">
            <summary>
            Gets or sets the playlist item.
            </summary>
            <value>The playlist item.</value>
        </member>
        <member name="T:AIMP.SDK.Playlist.Constants">
            <summary>
            Class Constants.
            </summary>
        </member>
        <member name="T:AIMP.SDK.Playlist.Constants.PreimageFactory">
            <summary>
            Class PreimageFactory.
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.Constants.PreimageFactory.FoldersId">
            <summary>
            The folders identifier
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.Constants.PreimageFactory.MusicLibraryId">
            <summary>
            The music library identifier
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.Constants.PreimageFactory.PlaylistId">
            <summary>
            The playlist identifier
            </summary>
        </member>
        <member name="T:AIMP.SDK.Playlist.PreimageFactoryFlags">
            <summary>
            Enum PreimageFactoryFlags
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PreimageFactoryFlags.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PreimageFactoryFlags.ContextDependent">
            <summary>
            The context dependent
            </summary>
        </member>
        <member name="T:AIMP.SDK.Playlist.IAimpExtensionPlaylistPreimageFactory">
            <summary>
            Provides an ability to register custom preimage (data provider) factory for smart-playlists.
            </summary>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpExtensionPlaylistPreimageFactory.CreatePreimage">
            <summary>
            Creates a new instance of <see cref="T:AIMP.SDK.Playlist.IAimpPlaylistPreimage" />.
            </summary>
            <returns>AimpActionResult&lt;IAimpPlaylistPreimage&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpExtensionPlaylistPreimageFactory.GetId">
            <summary>
            Unique ID of factory. You must not change the ID during life time of the plugin, because ID will be stored to file
            of smart-playlist.
            </summary>
            <returns>AimpActionResult&lt;System.String&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpExtensionPlaylistPreimageFactory.GetName">
            <summary>
            Gets the name.
            </summary>
            <returns>AimpActionResult&lt;System.String&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpExtensionPlaylistPreimageFactory.GetFlags">
            <summary>
            Gets the flags.
            </summary>
            <returns>PreimageFactoryFlags.</returns>
        </member>
        <member name="T:AIMP.SDK.Playlist.PlayListChangedHandler">
            <summary>
            Delegate PlayListChangedHandler
            </summary>
            <param name="sender">The sender.</param>
            <param name="notifType">Type of the notif.</param>
        </member>
        <member name="T:AIMP.SDK.Playlist.AimpPlayListHandler">
            <summary>
            Delegate AimpPlayListHandler
            </summary>
            <param name="sender">The sender.</param>
        </member>
        <member name="T:AIMP.SDK.Playlist.AimpPlayListHandler`1">
            <summary>
            Delegate AimpPlayListHandler
            </summary>
            <typeparam name="TEventArgs">The type of the t event arguments.</typeparam>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="!:TEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:AIMP.SDK.Playlist.ScanningProgressEventArgs">
            <summary>
            Class ScanningProgressEventArgs.
            Implements the <see cref="T:System.EventArgs" />
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="M:AIMP.SDK.Playlist.ScanningProgressEventArgs.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Playlist.ScanningProgressEventArgs" /> class.
            </summary>
            <param name="progress">The progress.</param>
        </member>
        <member name="P:AIMP.SDK.Playlist.ScanningProgressEventArgs.Progress">
            <summary>
            Gets the progress.
            </summary>
            <value>The progress.</value>
        </member>
        <member name="T:AIMP.SDK.Playlist.ScanningEndEventArgs">
            <summary>
            Class ScanningEndEventArgs.
            Implements the <see cref="T:System.EventArgs" />
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="M:AIMP.SDK.Playlist.ScanningEndEventArgs.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Playlist.ScanningEndEventArgs" /> class.
            </summary>
            <param name="hasChanges">if set to <c>true</c> [has changes].</param>
            <param name="canceled">if set to <c>true</c> [canceled].</param>
        </member>
        <member name="P:AIMP.SDK.Playlist.ScanningEndEventArgs.HasChanges">
            <summary>
            Gets a value indicating whether this instance has changes.
            </summary>
            <value><c>true</c> if this instance has changes; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.ScanningEndEventArgs.Canceled">
            <summary>
            Gets a value indicating whether this <see cref="T:AIMP.SDK.Playlist.ScanningEndEventArgs" /> is canceled.
            </summary>
            <value><c>true</c> if canceled; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:AIMP.SDK.Playlist.IAimpPlaylistListener">
            <summary>
            Interface provides an ability to receive notifications about changes in the playlist.
            </summary>
        </member>
        <member name="E:AIMP.SDK.Playlist.IAimpPlaylistListener.Activated">
            <summary>
            Event occurs when playlist is activating.
            </summary>
        </member>
        <member name="E:AIMP.SDK.Playlist.IAimpPlaylistListener.Removed">
            <summary>
            Event occurs before deleting or unloading.
            </summary>
        </member>
        <member name="E:AIMP.SDK.Playlist.IAimpPlaylistListener.Changed">
            <summary>
            Occurs when playlist was changed.
            </summary>
        </member>
        <member name="E:AIMP.SDK.Playlist.IAimpPlaylistListener.ScanningBegin">
            <summary>
            Occurs when scanning begin.
            </summary>
        </member>
        <member name="E:AIMP.SDK.Playlist.IAimpPlaylistListener.ScanningProgress">
            <summary>
            Occurs during scanning progress.
            </summary>
        </member>
        <member name="E:AIMP.SDK.Playlist.IAimpPlaylistListener.ScanningEnd">
            <summary>
            Occurs when scanning end.
            </summary>
        </member>
        <member name="T:AIMP.SDK.Playlist.IAimpServicePlaylistManager2">
            <summary>
            Interface IAimpPlaylistManager2
            </summary>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpServicePlaylistManager2.GetPreimageFactory(System.Int32)">
            <summary>
            Gets the preimage factory.
            </summary>
            <param name="index">The index.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpServicePlaylistManager2.GetPreimageFactoryById(System.String)">
            <summary>
            Gets the preimage factory by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpServicePlaylistManager2.GetPreimageFactoryCount">
            <summary>
            Gets the preimage factory count.
            </summary>
            <returns>System.Int32.</returns>
        </member>
        <member name="T:AIMP.SDK.Playlist.IAimpPlaylistPreimage">
            <summary>
            It is a general interface for all preimages.
            <para>
            Preimage is data source for smart-playlists with manual or automatic synchronization.
            The principle of cooperation between preimage and playlist is so simple: when data or settings in preimage are
            changed - preimage notify playlist about the changes via the <see cref="T:AIMP.SDK.Playlist.IAimpPlaylistPreimageListener" />
            interface that related to binded playlist.
            Playlist, in own case, will reload data from preimage as soon as data will be required by plugin or user.
            </para>
            </summary>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylistPreimage.FactoryId">
            <summary>
            Id of factory that creates this preimage.
            </summary>
            <value>The factory identifier.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylistPreimage.AutoSync">
            <summary>
            The Value different from false if automatic synchronization is switched on in the preimage (note that not all
            preimages support for this property).
            </summary>
            <value><c>true</c> if [automatic synchronize]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylistPreimage.AutoSyncOnStartup">
            <summary>
            The Value different from false if automatic synchronization is switched on in the preimage at Application startup
            (note that not all preimages support for this property).
            </summary>
            <value><c>true</c> if [automatic synchronize on startup]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylistPreimage.HasDialog">
            <summary>
            Return value different from false if preimage has implementation of the ExecuteDialog method.
            </summary>
            <value><c>true</c> if this instance has dialog; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylistPreimage.SortTemplate">
            <summary>
            Return sorting template for values in playlist after adding files from preimage.
            </summary>
            <value>The sort template.</value>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylistPreimage.ConfigLoad(AIMP.SDK.IAimpStream)">
            <summary>
            Loads the configuration.
            </summary>
            <param name="stream">The stream.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylistPreimage.ConfigSave(AIMP.SDK.IAimpStream)">
            <summary>
            Saves the configuration.
            </summary>
            <param name="stream">The stream.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylistPreimage.ExecuteDialog(System.IntPtr)">
            <summary>
            Executes the dialog.
            </summary>
            <param name="ownerHandle">The owner handle.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylistPreimage.Initialize(AIMP.SDK.Playlist.IAimpPlaylistPreimageListener)">
            <summary>
            Initializes the specified listener.
            </summary>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylistPreimage.FinalizeObject">
            <summary>
            Finalizes the object.
            </summary>
        </member>
        <member name="T:AIMP.SDK.Playlist.PreimageFlags">
            <summary>
            Enum PreimageFlags
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PreimageFlags.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PreimageFlags.AIMP_PLAYLIST_ADD_FLAGS_NOCHECKFORMAT">
            <summary>
            The aimp playlist add flags nocheckformat
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PreimageFlags.AIMP_PLAYLIST_ADD_FLAGS_NOEXPAND">
            <summary>
            The aimp playlist add flags noexpand
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PreimageFlags.AIMP_PLAYLIST_ADD_FLAGS_NOTHREADING">
            <summary>
            The aimp playlist add flags nothreading
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PreimageFlags.AIMP_PLAYLIST_ADD_FLAGS_FILEINFO">
            <summary>
            The aimp playlist add flags fileinfo
            </summary>
        </member>
        <member name="T:AIMP.SDK.Playlist.IAimpPlaylistPreimageDataProvider">
            <summary>
            Provides data for smart-playlist.
            </summary>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylistPreimageDataProvider.GetFiles(AIMP.SDK.Threading.IAimpTaskOwner)">
            <summary>
            Gets the files.
            </summary>
            <param name="owner">The owner.</param>
            <returns>Item1 - pre image flag, item2 - the data list.</returns>
        </member>
        <member name="T:AIMP.SDK.Playlist.IAimpPlaylistPreimageFolders">
            <summary>
            Interface IAimpPlaylistPreimageFolders
            Implements the <see cref="T:AIMP.SDK.Playlist.IAimpPlaylistPreimage" />
            </summary>
            <seealso cref="T:AIMP.SDK.Playlist.IAimpPlaylistPreimage" />
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylistPreimageFolders.ItemsAdd(System.String,System.Boolean)">
            <summary>
            Itemses the add.
            </summary>
            <param name="path">The path.</param>
            <param name="recursive">if set to <c>true</c> [recursive].</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylistPreimageFolders.ItemsDelete(System.Int32)">
            <summary>
            Itemses the delete.
            </summary>
            <param name="index">The index.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylistPreimageFolders.ItemsDeleteAll">
            <summary>
            Itemses the delete all.
            </summary>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylistPreimageFolders.ItemsGet(System.Int32)">
            <summary>
            Get the items by index.
            </summary>
            <param name="index">The index.</param>
            <returns>Item1 - path, Item2 - recursive or not.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylistPreimageFolders.ItemsGetCount">
            <summary>
            Itemses the get count.
            </summary>
            <returns>System.Int32.</returns>
        </member>
        <member name="T:AIMP.SDK.Playlist.AimpPlaylistPreimageListenerHandler">
            <summary>
            Delegate AimpPlaylistPreimageListenerHandler
            </summary>
        </member>
        <member name="T:AIMP.SDK.Playlist.IAimpPlaylistPreimageListener">
            <summary>
            The interface provides an ability to notify playlist about the changes in preimage.
            </summary>
        </member>
        <member name="E:AIMP.SDK.Playlist.IAimpPlaylistPreimageListener.DataChanged">
            <summary>
            Occurs when data changed.
            </summary>
        </member>
        <member name="E:AIMP.SDK.Playlist.IAimpPlaylistPreimageListener.SettingsChanged">
            <summary>
            Occurs when settings changed.
            </summary>
        </member>
        <member name="T:AIMP.SDK.Playlist.AimpPlaylistQueueListenerHandler">
            <summary>
            Playlist queue listener handler.
            </summary>
            <param name="playlistQueue">The playlist queue.</param>
        </member>
        <member name="T:AIMP.SDK.Playlist.IAimpPlaylistQueueListener">
            <summary>
            Interface provides an ability to receive notifications about changes in the queue.
            </summary>
        </member>
        <member name="E:AIMP.SDK.Playlist.IAimpPlaylistQueueListener.ContentChanged">
            <summary>
            Event occurs when content of queue was changed.
            </summary>
        </member>
        <member name="E:AIMP.SDK.Playlist.IAimpPlaylistQueueListener.StateChanged">
            <summary>
            Event occurs when the <see cref="P:AIMP.SDK.Playlist.IAimpPlaylistQueue.IsSuspended" /> has been changed.
            </summary>
        </member>
        <member name="T:AIMP.SDK.Playlist.PlayListHandler">
            <summary>
            Delegate for playlist events.
            </summary>
            <param name="playlistName">Name of the playlist.</param>
            <param name="playlistId">The playlist identifier.</param>
        </member>
        <member name="T:AIMP.SDK.Playlist.IAimpExtensionPlaylistManagerListener">
            <summary>
            This is extension for <see cref="T:AIMP.SDK.Playlist.IAimpServicePlaylistManager" /> service, provides an ability to receive notifications
            about the changes in manager.
            </summary>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpExtensionPlaylistManagerListener.OnPlaylistActivated(AIMP.SDK.Playlist.IAimpPlaylist)">
            <summary>
            Occurs when playlist activated.
            </summary>
            <param name="playlist">The playlist.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpExtensionPlaylistManagerListener.OnPlaylistAdded(AIMP.SDK.Playlist.IAimpPlaylist)">
            <summary>
            Occurs when playlist added.
            </summary>
            <param name="playlist">The playlist.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpExtensionPlaylistManagerListener.OnPlaylistRemoved(AIMP.SDK.Playlist.IAimpPlaylist)">
            <summary>
            Occurs when playlist removed.
            </summary>
            <param name="playlist">The playlist.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="T:AIMP.SDK.Playlist.IAimpPlaylistQueue">
            <summary>
            This interface provides an access to playback queue.
            </summary>
            <seealso cref="T:AIMP.SDK.Playlist.IAimpPlaylistQueueListener" />
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylistQueue.IsSuspended">
            <summary>
            Gets or sets a value indicating whether the queue is suspended.
            </summary>
            <value><c>true</c> if this instance is suspended; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylistQueue.Add(AIMP.SDK.Playlist.IAimpPlaylistItem,System.Boolean)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
            <param name="insertAtBeginning">if set to <c>true</c> [insert at beginning].</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylistQueue.AddList(System.Collections.Generic.IList{AIMP.SDK.Playlist.IAimpPlaylistItem},System.Boolean)">
            <summary>
            Adds the list of items.
            </summary>
            <param name="items">The list of the <see cref="T:AIMP.SDK.Playlist.IAimpPlaylistItem" /> items.</param>
            <param name="insertAtBeginning">if set to <c>true</c> [insert at beginning].</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylistQueue.Delete(AIMP.SDK.Playlist.IAimpPlaylistItem)">
            <summary>
            Deletes the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylistQueue.Delete(AIMP.SDK.Playlist.IAimpPlaylist)">
            <summary>
            Deletes the specified play list.
            </summary>
            <param name="playList">The play list.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylistQueue.Move(AIMP.SDK.Playlist.IAimpPlaylistItem,System.Int32)">
            <summary>
            Moves the specified item.
            </summary>
            <param name="item">The item.</param>
            <param name="index">The index.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylistQueue.Move(System.Int32,System.Int32)">
            <summary>
            Moves item from index to target index.
            </summary>
            <param name="index">The index.</param>
            <param name="targetIndex">Index of the target.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylistQueue.GetItem(System.Int32)">
            <summary>
            Gets the item from specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>AimpActionResult&lt;IAimpPlaylistItem&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylistQueue.GetItemCount">
            <summary>
            Gets the item count.
            </summary>
            <returns>System.Int32.</returns>
        </member>
        <member name="T:AIMP.SDK.Playlist.AimpPlaylistEventArgs">
            <summary>
            Class AimpPlaylistEventArgs.
            Implements the <see cref="T:System.EventArgs" />
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="M:AIMP.SDK.Playlist.AimpPlaylistEventArgs.#ctor(AIMP.SDK.Playlist.IAimpPlaylist)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Playlist.AimpPlaylistEventArgs" /> class.
            </summary>
            <param name="playlist">The playlist.</param>
        </member>
        <member name="P:AIMP.SDK.Playlist.AimpPlaylistEventArgs.Playlist">
            <summary>
            Gets the playlist.
            </summary>
            <value>The playlist.</value>
        </member>
        <member name="T:AIMP.SDK.Playlist.PlaylistFlags">
            <summary>
            Enum PlaylistFlags
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistFlags.NoCheckFormat">
            <summary>
            suppresses file format checking.
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistFlags.NoExpand">
            <summary>
            suppresses file expansion to few virtual files.
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistFlags.NoAsync">
            <summary>
            File adding will be processed in main thread, the method will not return control until operation has been completed
            (not recommended).
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistFlags.FileInfo">
            <summary>
            Shows that object is <see cref="T:AIMP.SDK.FileManager.IAimpFileInfo" /> (otherwise object must be a string).
            </summary>
        </member>
        <member name="T:AIMP.SDK.Playlist.PlaylistFilePosition">
            <summary>
            Enum PlaylistFilePosition
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistFilePosition.RandomPosition">
            <summary>
            Adding the records to random position
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistFilePosition.EndPosition">
            <summary>
            Adding the records to the end of playlist.
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistFilePosition.CurrentPosition">
            <summary>
            Adding the records to the specified position.
            </summary>
        </member>
        <member name="T:AIMP.SDK.Playlist.PlaylistSort">
            <summary>
            Enum PlaylistSort
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistSort.Title">
            <summary>
            The title
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistSort.FileName">
            <summary>
            The file name
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistSort.Duration">
            <summary>
            The duration
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistSort.Artist">
            <summary>
            The artist
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistSort.Inverse">
            <summary>
            The inverse
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistSort.Randomize">
            <summary>
            The randomize
            </summary>
        </member>
        <member name="T:AIMP.SDK.Playlist.PlaylistCloseFlag">
            <summary>
            Enum PlaylistCloseFlag
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistCloseFlag.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistCloseFlag.ForceRemove">
            <summary>
            Ignores current settings and remove playlist from disk after closing.
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistCloseFlag.ForceUnload">
            <summary>
            Ignores current settings and not remove playlist from disk after closing.
            </summary>
        </member>
        <member name="T:AIMP.SDK.Playlist.PlaylistGetFilesFlag">
            <summary>
            Enum PlaylistGetFilesFlag
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistGetFilesFlag.All">
            <summary>
            All
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistGetFilesFlag.SelectedOnly">
            <summary>
            The selected only
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistGetFilesFlag.VisibleOnly">
            <summary>
            The visible only
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistGetFilesFlag.CollapseVirtual">
            <summary>
            In this case, the file-container will be added to the list if playlist item is virtual file.
            </summary>
        </member>
        <member name="T:AIMP.SDK.Playlist.PlaylistSortComapreResult">
            <summary>
            Enum PlaylistSortComapreResult
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistSortComapreResult.TheSame">
            <summary>
            The same
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistSortComapreResult.LessThen">
            <summary>
            The less then
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistSortComapreResult.GrantThen">
            <summary>
            The grant then
            </summary>
        </member>
        <member name="T:AIMP.SDK.Playlist.PlaylistNotifyType">
            <summary>
            Enum PlaylistNotifyType
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistNotifyType.AIMP_PLAYLIST_NOTIFY_NAME">
            <summary>
            Play list name has been changed.
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistNotifyType.AIMP_PLAYLIST_NOTIFY_SELECTION">
            <summary>
            Selected items has been changed.
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistNotifyType.AIMP_PLAYLIST_NOTIFY_PLAYBACKCURSOR">
            <summary>
            Playback focus has been changed.
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistNotifyType.AIMP_PLAYLIST_NOTIFY_READONLY">
            <summary>
            Read only flag has been changed.
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistNotifyType.AIMP_PLAYLIST_NOTIFY_FOCUSINDEX">
            <summary>
            Record focus has been changed.
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistNotifyType.AIMP_PLAYLIST_NOTIFY_CONTENT">
            <summary>
            Changed records order.
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistNotifyType.AIMP_PLAYLIST_NOTIFY_FILEINFO">
            <summary>
            Information about one or more files has been changed.
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistNotifyType.AIMP_PLAYLIST_NOTIFY_STATISTICS">
            <summary>
            Statistic for one or more files has been changed.
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistNotifyType.AIMP_PLAYLIST_NOTIFY_PLAYINGSWITCHS">
            <summary>
            Changed auto play switch.
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistNotifyType.AIMP_PLAYLIST_NOTIFY_PREIMAGE">
            <summary>
            Path to pre image has been changed.
            </summary>
        </member>
        <member name="T:AIMP.SDK.Playlist.ReloadInfoFlags">
            <summary>
            Enum ReloadInfoFlags
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.ReloadInfoFlags.AIMP_PLAYLIST_RELOADINFO_FLAGS_DEFAULT">
            <summary>
            Information will be updated for files that does not have it.
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.ReloadInfoFlags.AIMP_PLAYLIST_RELOADINFO_FLAGS_FULL">
            <summary>
            Information will be updated for all files.
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.ReloadInfoFlags.AIMP_PLAYLIST_RELOADINFO_FLAGS_SELECTED">
            <summary>
            Information will be updated for selected files.
            </summary>
        </member>
        <member name="T:AIMP.SDK.Playlist.PlaylistDeleteFlags">
            <summary>
            Enum PlaylistDeleteFlags
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistDeleteFlags.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistDeleteFlags.Physically">
            <summary>
            The physically
            </summary>
        </member>
        <member name="F:AIMP.SDK.Playlist.PlaylistDeleteFlags.NoConfirmation">
            <summary>
            The no confirmation
            </summary>
        </member>
        <member name="T:AIMP.SDK.Playlist.IAimpPlaylist">
            <summary>
            Playlist interface.
            Implements the <see cref="T:AIMP.SDK.Playlist.IAimpPlaylistListener" />
            </summary>
            <seealso cref="T:AIMP.SDK.Playlist.IAimpPlaylistListener" />
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylist.Id">
            <summary>
            Gets the playlist identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylist.Name">
            <summary>
            Gets or sets the playlist name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylist.ReadOnly">
            <summary>
            Gets or sets a value indicating playlist is read only..
            </summary>
            <value><c>true</c> if [read only]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylist.FocusedItem">
            <summary>
            Gets or sets the focused object.
            Object should be <see cref="T:AIMP.SDK.Playlist.IAimpPlaylistItem" /> or <see cref="T:AIMP.SDK.Playlist.IAimpPlaylistGroup" />.
            </summary>
            <value>The focused item.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylist.FocusedGroup">
            <summary>
            Gets or sets the focused group.
            </summary>
            <value>The focused group.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylist.GroupingOverridden">
            <summary>
            Gets or sets a value indicating whether [grouping overridden].
            </summary>
            <value><c>true</c> if [grouping overridden]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylist.Grouping">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:AIMP.SDK.Playlist.IAimpPlaylist" /> is grouping.
            <para>
            Changing the value is available only if value of the <see cref="P:AIMP.SDK.Playlist.IAimpPlaylist.GroupingOverridden" /> parameter set as true.
            </para>
            </summary>
            <value><c>true</c> if grouping; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylist.GroupingTemplate">
            <summary>
            Gets or sets the grouping template.
            <para>
            Changing the value is available only if value of the <see cref="P:AIMP.SDK.Playlist.IAimpPlaylist.GroupingOverridden" /> parameter set as true.
            </para>
            </summary>
            <value>The grouping template.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylist.GroupingAutomerg">
            <summary>
            Enables the auto merge for grouping.
            <para>
            Changing the value is available only if value of the <see cref="P:AIMP.SDK.Playlist.IAimpPlaylist.GroupingOverridden" /> parameter set as true.
            </para>
            </summary>
            <value><c>true</c> if [grouping automerg]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylist.FormattingOverride">
            <summary>
            Gets or sets a value indicating whether [formating override].
            </summary>
            <value><c>true</c> if [formatting override]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylist.FormattingLine1Template">
            <summary>
            Gets or sets the formatting template for the first line.
            <para>
            Changing the value is available only if value of the <see cref="P:AIMP.SDK.Playlist.IAimpPlaylist.GroupingOverridden" /> parameter set as true.
            </para>
            </summary>
            <value>The formatting line1 template.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylist.FormattingLine2Template">
            <summary>
            Gets or sets the formatting template for the second line.
            <para>
            Changing the value is available only if value of the <see cref="P:AIMP.SDK.Playlist.IAimpPlaylist.GroupingOverridden" /> parameter set as true.
            </para>
            </summary>
            <value>The formatting line2 template.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylist.ViewOverride">
            <summary>
            Gets or sets a value indicating whether [view override].
            </summary>
            <value><c>true</c> if [view override]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylist.ViewDuration">
            <summary>
            Gets or sets a value indicating the track duration visibility.
            <para>
            Changing the value is available only if value of the <see cref="P:AIMP.SDK.Playlist.IAimpPlaylist.GroupingOverridden" /> parameter set as true.
            </para>
            </summary>
            <value><c>true</c> if [view duration]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylist.ViewExpandButtons">
            <summary>
            Gets or sets a value indicating whether [view expand buttons].
            <para>
            Changing the value is available only if value of the <see cref="P:AIMP.SDK.Playlist.IAimpPlaylist.GroupingOverridden" /> parameter set as true.
            </para>
            </summary>
            <value><c>true</c> if [view expand buttons]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylist.ViewMarks">
            <summary>
            Gets or sets a value indicating the marks visibility.
            <para>
            Changing the value is available only if value of the <see cref="P:AIMP.SDK.Playlist.IAimpPlaylist.GroupingOverridden" /> parameter set as true.
            </para>
            </summary>
            <value><c>true</c> if [view marks]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylist.ViewNumbers">
            <summary>
            Gets or sets a value indicating the tracks number visibility.
            <para>
            Changing the value is available only if value of the <see cref="P:AIMP.SDK.Playlist.IAimpPlaylist.GroupingOverridden" /> parameter set as true.
            </para>
            </summary>
            <value><c>true</c> if [view numbers]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylist.ViewAbsoluteNumbers">
            <summary>
            Gets or sets a value indicating whether [view absolute numbers].
            </summary>
            <value><c>true</c> if [view absolute numbers]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylist.ViewSecondLine">
            <summary>
            Gets or sets a value indicating whether [view second line].
            <para>
            Changing the value is available only if value of the <see cref="P:AIMP.SDK.Playlist.IAimpPlaylist.GroupingOverridden" /> parameter set as true.
            </para>
            </summary>
            <value><c>true</c> if [view second line]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylist.ViewSwitches">
            <summary>
            Gets or sets a value indicating whether [view switches].
            <para>
            Changing the value is available only if value of the <see cref="P:AIMP.SDK.Playlist.IAimpPlaylist.GroupingOverridden" /> parameter set as true.
            </para>
            </summary>
            <value><c>true</c> if [view switches]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylist.FocusIndex">
            <summary>
            Gets or sets the index of focused playlist item.
            Index can be equals to -1, if no one item is focused.
            Use the AIMP_PLAYLIST_PROPID_FOCUSED_OBJECT property to access to focused group.
            </summary>
            <value>The index of the focus.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylist.PlaybackCursor">
            <summary>
            Gets or sets the playback cursor.
            Can be equals to -1, if playable item was removed or playlist never played.
            </summary>
            <value>The playback cursor.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylist.PlayingIndex">
            <summary>
            Gets or sets the index of the playing.
            </summary>
            <value>The index of the playing.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylist.Duration">
            <summary>
            Gets the total duration, in seconds.
            </summary>
            <value>The duration.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylist.Size">
            <summary>
            Gets the total size, in bytes.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylist.PreImage">
            <summary>
            Gets or sets the preimage factory.
            </summary>
            <value>The pre image.</value>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylist.Add(System.String,AIMP.SDK.Playlist.PlaylistFlags,AIMP.SDK.Playlist.PlaylistFilePosition)">
            <summary>
            Adds the specified file by URL.
            </summary>
            <param name="fileUrl">The file URL.</param>
            <param name="flags">The <see cref="T:AIMP.SDK.Playlist.PlaylistFlags" />.</param>
            <param name="filePosition">The file position <see cref="T:AIMP.SDK.Playlist.PlaylistFilePosition" />.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylist.Add(AIMP.SDK.FileManager.IAimpFileInfo,AIMP.SDK.Playlist.PlaylistFlags,AIMP.SDK.Playlist.PlaylistFilePosition)">
            <summary>
            Adds the specified file by URL.
            </summary>
            <param name="fileInfo">The file information.</param>
            <param name="flags">The <see cref="T:AIMP.SDK.Playlist.PlaylistFlags" />.</param>
            <param name="filePosition">The file position <see cref="T:AIMP.SDK.Playlist.PlaylistFilePosition" />.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylist.AddList(System.Collections.Generic.IList{System.String},AIMP.SDK.Playlist.PlaylistFlags,AIMP.SDK.Playlist.PlaylistFilePosition)">
            <summary>
            Adds the list.
            </summary>
            <param name="fileUrlList">The file URL list.</param>
            <param name="flags">The <see cref="T:AIMP.SDK.Playlist.PlaylistFlags" />.</param>
            <param name="filePosition">The file position <see cref="T:AIMP.SDK.Playlist.PlaylistFilePosition" />.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylist.AddList(System.Collections.Generic.IList{AIMP.SDK.FileManager.IAimpFileInfo},AIMP.SDK.Playlist.PlaylistFlags,AIMP.SDK.Playlist.PlaylistFilePosition)">
            <summary>
            Adds the list.
            </summary>
            <param name="fileUrlList">The file URL list.</param>
            <param name="flags">The <see cref="T:AIMP.SDK.Playlist.PlaylistFlags" />.</param>
            <param name="filePosition">The file position <see cref="T:AIMP.SDK.Playlist.PlaylistFilePosition" />.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylist.Delete(AIMP.SDK.Playlist.IAimpPlaylistItem)">
            <summary>
            Deletes the specified item.
            </summary>
            <param name="item">The playlist item.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylist.Delete(System.Int32)">
            <summary>
            Deletes the item by specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylist.Delete(AIMP.SDK.Playlist.PlaylistDeleteFlags,System.Object,System.Func{AIMP.SDK.Playlist.IAimpPlaylistItem,System.Object,System.Boolean})">
            <summary>
            Deletes the specified delete flags.
            </summary>
            <param name="deleteFlags">The delete flags <see cref="T:AIMP.SDK.Playlist.PlaylistDeleteFlags" />.</param>
            <param name="customFilterData">Some additional data that will be passed to the filter function.</param>
            <param name="filterFunc">The filter function. Should return true to delete item.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylist.DeleteAll">
            <summary>
            Deletes all items.
            </summary>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylist.Sort(AIMP.SDK.Playlist.PlaylistSort)">
            <summary>
            Sorts the playlist by specified sort order.
            </summary>
            <param name="sort">The sort.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylist.Sort(System.String)">
            <summary>
            Sorts the playlist items by specified template.
            </summary>
            <param name="template">The template. Refer to <see cref="T:AIMP.SDK.FileManager.IAimpServiceFileInfoFormatter" />.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylist.Sort(System.Object,System.Func{AIMP.SDK.Playlist.IAimpPlaylistItem,AIMP.SDK.Playlist.IAimpPlaylistItem,System.Object,AIMP.SDK.Playlist.PlaylistSortComapreResult})">
            <summary>
            Sorts the playlist by the specified compare function.
            </summary>
            <param name="customCompareData">The custom data for compare function.</param>
            <param name="compareFunc">The compare function.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylist.BeginUpdate">
            <summary>
            Method blocks all notifications until EndUpdate is called.
            This method is recommended to usage if you will change few options of playlist at one time.
            </summary>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylist.EndUpdate">
            <summary>
            Method unblocks all notifications. Refer to the BeginUpdate.
            </summary>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylist.Close(AIMP.SDK.Playlist.PlaylistCloseFlag)">
            <summary>
            Closes the playlist.
            </summary>
            <param name="closeFlag">The close flag <see cref="T:AIMP.SDK.Playlist.PlaylistCloseFlag" />.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylist.GetFiles(AIMP.SDK.Playlist.PlaylistGetFilesFlag)">
            <summary>
            Gets the list of files.
            </summary>
            <param name="filesFlag">The files flag.</param>
            <returns>AimpActionResult&lt;IList&lt;System.String&gt;&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylist.MergeGroup(AIMP.SDK.Playlist.IAimpPlaylistGroup)">
            <summary>
            Merges one or all groups with same names.
            </summary>
            <param name="playlistGroup">Group to merge. All groups will be merged If group is not set (parameter is equals null).</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylist.ReloadFromPreimage">
            <summary>
            Reloads from preimage.
            </summary>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylist.ReloadInfo(System.Boolean)">
            <summary>
            Reloads information about items (running in separate thread).
            </summary>
            <param name="fullReload">if set to <c>true</c> [full reload].</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylist.GetItem(System.Int32)">
            <summary>
            Gets the item.
            </summary>
            <param name="index">The index.</param>
            <returns>AimpActionResult&lt;IAimpPlaylistItem&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylist.GetItemCount">
            <summary>
            Gets the item count.
            </summary>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylist.GetGroup(System.Int32)">
            <summary>
            Gets the group.
            </summary>
            <param name="index">The index.</param>
            <returns>AimpActionResult&lt;IAimpPlaylistGroup&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylist.GetGroupCount">
            <summary>
            Gets the group count.
            </summary>
            <returns>System.Int32.</returns>
        </member>
        <member name="T:AIMP.SDK.Playlist.IAimpPlaylistGroup">
            <summary>
            The interface describes playlist group that can contains one or more playlist items.
            </summary>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylistGroup.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylistGroup.Expanded">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:AIMP.SDK.Playlist.IAimpPlaylistGroup" /> is expanded.
            </summary>
            <value><c>true</c> if expanded; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylistGroup.Duration">
            <summary>
            Gets the total duration of items in the group, in seconds.
            </summary>
            <value>The duration.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylistGroup.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylistGroup.Selected">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:AIMP.SDK.Playlist.IAimpPlaylistGroup" /> is selected.
            </summary>
            <value><c>true</c> if selected; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylistGroup.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylistGroup.GetItem(System.Int32)">
            <summary>
            Gets the item.
            </summary>
            <param name="index">The index.</param>
            <returns>AimpActionResult&lt;IAimpPlaylistItem&gt;.</returns>
        </member>
        <member name="T:AIMP.SDK.Playlist.IAimpPlaylistItem">
            <summary>
            The storage for information about the playlist item.
            </summary>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylistItem.DisplayText">
            <summary>
            Gets the display text.
            </summary>
            <value>The display text.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylistItem.FileInfo">
            <summary>
            Gets the file information.
            </summary>
            <value>The file information.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylistItem.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>The name of the file.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylistItem.Group">
            <summary>
            Gets the group.
            </summary>
            <value>The group.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylistItem.Index">
            <summary>
            Gets or sets the absolute item index in the playlist.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylistItem.Mark">
            <summary>
            Gets or sets the mark (0.0 to 5.0)
            </summary>
            <value>The mark.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylistItem.PlaybackIndex">
            <summary>
            Index in the internal playback queue.
            This index is different from playlist item index.
            </summary>
            <value>The index of the playback.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylistItem.PlaybackSwitch">
            <summary>
            Gets or sets a value indicating whether [playback switch].
            </summary>
            <value><c>true</c> if [playback switch]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylistItem.PlayList">
            <summary>
            Gets or sets the play list.
            </summary>
            <value>The play list.</value>
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpPlaylistItem.Selected">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:AIMP.SDK.Playlist.IAimpPlaylistItem" /> is selected.
            </summary>
            <value><c>true</c> if selected; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpPlaylistItem.ReloadInfo">
            <summary>
            Reloads the information.
            </summary>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.Playlist.IAimpServicePlaylistManager">
            <summary>
            The service provides an access to playlist manager.
            Implements the <see cref="T:AIMP.SDK.Playlist.IAimpServicePlaylistManager2" />
            Implements the <see cref="T:AIMP.SDK.IAimpService" />
            </summary>
            <seealso cref="T:AIMP.SDK.Playlist.IAimpServicePlaylistManager2" />
            <seealso cref="T:AIMP.SDK.IAimpService" />
        </member>
        <member name="P:AIMP.SDK.Playlist.IAimpServicePlaylistManager.PlaylistQueue">
            <summary>
            Gets the playlist queue.
            </summary>
            <value>The playlist queue.</value>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpServicePlaylistManager.CreatePlaylist(System.String,System.Boolean)">
            <summary>
            Creates the playlist.
            </summary>
            <param name="name">The playlist name.
            <para>
            Automatic name will be applied if name is equals empty value.
            </para></param>
            <param name="isActive">If set to <c>true</c> playlist will be active.</param>
            <returns>AimpActionResult&lt;IAimpPlaylist&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpServicePlaylistManager.CreatePlaylistFromFile(System.String,System.Boolean)">
            <summary>
            Creates the playlist from file.
            </summary>
            <param name="fileName">Name of the file.
            <para>
            Automatic name will be applied if name is equals empty value.
            </para></param>
            <param name="isActive">If set to <c>true</c> playlist will be active.</param>
            <returns>AimpActionResult&lt;IAimpPlaylist&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpServicePlaylistManager.GetActivePlaylist">
            <summary>
            Gets the current active playlist.
            </summary>
            <returns>AimpActionResult&lt;IAimpPlaylist&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpServicePlaylistManager.SetActivePlaylist(AIMP.SDK.Playlist.IAimpPlaylist)">
            <summary>
            Sets the playlist as active.
            </summary>
            <param name="playList">The playlist <see cref="T:AIMP.SDK.Playlist.IAimpPlaylist" />.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpServicePlaylistManager.GetPlayablePlaylist">
            <summary>
            Gets the playable playlist.
            </summary>
            <returns>AimpActionResult&lt;IAimpPlaylist&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpServicePlaylistManager.GetLoadedPlaylist(System.Int32)">
            <summary>
            Gets the loaded playlist by index.
            </summary>
            <param name="index">The index.</param>
            <returns>AimpActionResult&lt;IAimpPlaylist&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpServicePlaylistManager.GetLoadedPlaylistById(System.String)">
            <summary>
            Gets the loaded playlist by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>AimpActionResult&lt;IAimpPlaylist&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpServicePlaylistManager.GetLoadedPlaylistByName(System.String)">
            <summary>
            Gets the loaded playlist by name.
            </summary>
            <param name="name">The name.</param>
            <returns>AimpActionResult&lt;IAimpPlaylist&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.Playlist.IAimpServicePlaylistManager.GetLoadedPlaylistCount">
            <summary>
            Gets the loaded playlist count.
            </summary>
            <returns>System.Int32.</returns>
        </member>
        <member name="T:AIMP.SDK.Annotations.CanBeNullAttribute">
            <summary>
            Indicates that the value of the marked element could be <c>null</c> sometimes,
            so the check for <c>null</c> is necessary before its usage
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
            <example>
              <code>
            [CanBeNull] public object Test() { return null; }
            public void UseTest() {
            var p = Test();
            var s = p.ToString(); // Warning: Possible 'System.NullReferenceException'
            }
            </code>
            </example>
        </member>
        <member name="T:AIMP.SDK.Annotations.NotNullAttribute">
            <summary>
            Indicates that the value of the marked element could never be <c>null</c>
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
            <example>
              <code>
            [NotNull] public object Foo() {
            return null; // Warning: Possible 'null' assignment
            }
            </code>
            </example>
        </member>
        <member name="T:AIMP.SDK.Annotations.ItemNotNullAttribute">
            <summary>
            Indicates that collection or enumerable value does not contain null elements
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:AIMP.SDK.Annotations.ItemCanBeNullAttribute">
            <summary>
            Indicates that collection or enumerable value can contain null elements
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:AIMP.SDK.Annotations.StringFormatMethodAttribute">
            <summary>
            Indicates that the marked method builds string by format pattern and (optional) arguments.
            Parameter, which contains format string, should be given in constructor. The format string
            should be in <see cref="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])" />-like form
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
            <example>
              <code>
            [StringFormatMethod("message")]
            public void ShowError(string message, params object[] args) { /* do something */ }
            public void Foo() {
            ShowError("Failed: {0}"); // Warning: Non-existing argument in format string
            }
            </code>
            </example>
        </member>
        <member name="M:AIMP.SDK.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.StringFormatMethodAttribute" /> class.
            </summary>
            <param name="formatParameterName">Specifies which parameter of an annotated method should be treated as format-string</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.StringFormatMethodAttribute.FormatParameterName">
            <summary>
            Gets the name of the format parameter.
            </summary>
            <value>The name of the format parameter.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.ValueProviderAttribute">
            <summary>
            For a parameter that is expected to be one of the limited set of values.
            Specify fields of which type should be used as values for this parameter.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:AIMP.SDK.Annotations.ValueProviderAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.ValueProviderAttribute" /> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.ValueProviderAttribute.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.InvokerParameterNameAttribute">
            <summary>
            Indicates that the function argument should be string literal and match one
            of the parameters of the caller function. For example, ReSharper annotates
            the parameter of <see cref="T:System.ArgumentNullException" />
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
            <example>
              <code>
            public void Foo(string param) {
            if (param == null)
            throw new ArgumentNullException("par"); // Warning: Cannot resolve symbol
            }
            </code>
            </example>
        </member>
        <member name="T:AIMP.SDK.Annotations.NotifyPropertyChangedInvocatorAttribute">
            <summary>
            Indicates that the method is contained in a type that implements
            <c>System.ComponentModel.INotifyPropertyChanged</c> interface and this method
            is used to notify that some property value changed
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
            <example>
              <code>
            public class Foo : INotifyPropertyChanged {
            public event PropertyChangedEventHandler PropertyChanged;
            [NotifyPropertyChangedInvocator]
            protected virtual void NotifyChanged(string propertyName) { ... }
            private string _name;
            public string Name {
            get { return _name; }
            set { _name = value; NotifyChanged("LastName"); /* Warning */ }
            }
            }
            </code>
            Examples of generated notifications:
            <list><item><c>NotifyChanged("Property")</c></item><item><c>NotifyChanged(() =&gt; Property)</c></item><item><c>NotifyChanged((VM x) =&gt; x.Property)</c></item><item><c>SetProperty(ref myField, value, "Property")</c></item></list></example>
            <remarks>The method should be non-static and conform to one of the supported signatures:
            <list><item><c>NotifyChanged(string)</c></item><item><c>NotifyChanged(params string[])</c></item><item><c>NotifyChanged{T}(Expression{Func{T}})</c></item><item><c>NotifyChanged{T,U}(Expression{Func{T,U}})</c></item><item><c>SetProperty{T}(ref T, T, string)</c></item></list></remarks>
        </member>
        <member name="M:AIMP.SDK.Annotations.NotifyPropertyChangedInvocatorAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.NotifyPropertyChangedInvocatorAttribute" /> class.
            </summary>
        </member>
        <member name="M:AIMP.SDK.Annotations.NotifyPropertyChangedInvocatorAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.NotifyPropertyChangedInvocatorAttribute" /> class.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.NotifyPropertyChangedInvocatorAttribute.ParameterName">
            <summary>
            Gets the name of the parameter.
            </summary>
            <value>The name of the parameter.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.ContractAnnotationAttribute">
            <summary>
            Describes dependency between method input and output
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
            <syntax>
              <p>Function Definition Table syntax:</p>
              <list>
                <item>FDT      ::= FDTRow [;FDTRow]*</item>
                <item>FDTRow   ::= Input =&gt; Output | Output &lt;= Input</item>
                <item>Input    ::= ParameterName: Value [, Input]*</item>
                <item>Output   ::= [ParameterName: Value]* {halt|stop|void|nothing|Value}</item>
                <item>Value    ::= true | false | null | notnull | canbenull</item>
              </list>
            If method has single input parameter, it's name could be omitted.<br />
            Using <c>halt</c> (or <c>void</c>/<c>nothing</c>, which is the same)
            for method output means that the methos doesn't return normally.<br /><c>canbenull</c> annotation is only
            applicable for output parameters.<br />
            You can use multiple <c>[ContractAnnotation]</c> for each FDT row,
            or use single attribute with rows separated by semicolon.<br /></syntax>
            <examples>
              <list>
                <item>
                  <code>
            [ContractAnnotation("=&gt; halt")]
            public void TerminationMethod()
            </code>
                </item>
                <item>
                  <code>
            [ContractAnnotation("halt &lt;= condition: false")]
            public void Assert(bool condition, string text) // regular assertion method
            </code>
                </item>
                <item>
                  <code>
            [ContractAnnotation("s:null =&gt; true")]
            public bool IsNullOrEmpty(string s) // string.IsNullOrEmpty()
            </code>
                </item>
                <item>
                  <code>
            // A method that returns null if the parameter is null,
            // and not null if the parameter is not null
            [ContractAnnotation("null =&gt; null; notnull =&gt; notnull")]
            public object Transform(object data)
            </code>
                </item>
                <item>
                  <code>
            [ContractAnnotation("s:null=&gt;false; =&gt;true,result:notnull; =&gt;false, result:null")]
            public bool TryParse(string s, out Person result)
            </code>
                </item>
              </list>
            </examples>
        </member>
        <member name="M:AIMP.SDK.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.ContractAnnotationAttribute" /> class.
            </summary>
            <param name="contract">The contract.</param>
        </member>
        <member name="M:AIMP.SDK.Annotations.ContractAnnotationAttribute.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.ContractAnnotationAttribute" /> class.
            </summary>
            <param name="contract">The contract.</param>
            <param name="forceFullStates">if set to <c>true</c> [force full states].</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.ContractAnnotationAttribute.Contract">
            <summary>
            Gets the contract.
            </summary>
            <value>The contract.</value>
        </member>
        <member name="P:AIMP.SDK.Annotations.ContractAnnotationAttribute.ForceFullStates">
            <summary>
            Gets a value indicating whether [force full states].
            </summary>
            <value><c>true</c> if [force full states]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.LocalizationRequiredAttribute">
            <summary>
            Indicates that marked element should be localized or not
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
            <example>
              <code>
            [LocalizationRequiredAttribute(true)]
            public class Foo {
            private string str = "my string"; // Warning: Localizable string
            }
            </code>
            </example>
        </member>
        <member name="M:AIMP.SDK.Annotations.LocalizationRequiredAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.LocalizationRequiredAttribute" /> class.
            </summary>
        </member>
        <member name="M:AIMP.SDK.Annotations.LocalizationRequiredAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.LocalizationRequiredAttribute" /> class.
            </summary>
            <param name="required">if set to <c>true</c> [required].</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.LocalizationRequiredAttribute.Required">
            <summary>
            Gets a value indicating whether this <see cref="T:AIMP.SDK.Annotations.LocalizationRequiredAttribute" /> is required.
            </summary>
            <value><c>true</c> if required; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.CannotApplyEqualityOperatorAttribute">
            <summary>
            Indicates that the value of the marked type (or its derivatives)
            cannot be compared using '==' or '!=' operators and <c>Equals()</c>
            should be used instead. However, using '==' or '!=' for comparison
            with <c>null</c> is always permitted.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
            <example>
              <code>
            [CannotApplyEqualityOperator]
            class NoEquality { }
            class UsesNoEquality {
            public void Test() {
            var ca1 = new NoEquality();
            var ca2 = new NoEquality();
            if (ca1 != null) { // OK
            bool condition = ca1 == ca2; // Warning
            }
            }
            }
            </code>
            </example>
        </member>
        <member name="T:AIMP.SDK.Annotations.BaseTypeRequiredAttribute">
            <summary>
            When applied to a target attribute, specifies a requirement for any type marked
            with the target attribute to implement or inherit specific type or types.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
            <example>
              <code>
            [BaseTypeRequired(typeof(IComponent)] // Specify requirement
            public class ComponentAttribute : Attribute { }
            [Component] // ComponentAttribute requires implementing IComponent interface
            public class MyComponent : IComponent { }
            </code>
            </example>
        </member>
        <member name="M:AIMP.SDK.Annotations.BaseTypeRequiredAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.BaseTypeRequiredAttribute" /> class.
            </summary>
            <param name="baseType">Type of the base.</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.BaseTypeRequiredAttribute.BaseType">
            <summary>
            Gets the type of the base.
            </summary>
            <value>The type of the base.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.UsedImplicitlyAttribute">
            <summary>
            Indicates that the marked symbol is used implicitly
            (e.g. via reflection, in external library), so this symbol
            will not be marked as unused (as well as by other usage inspections)
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:AIMP.SDK.Annotations.UsedImplicitlyAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.UsedImplicitlyAttribute" /> class.
            </summary>
        </member>
        <member name="M:AIMP.SDK.Annotations.UsedImplicitlyAttribute.#ctor(AIMP.SDK.Annotations.ImplicitUseKindFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.UsedImplicitlyAttribute" /> class.
            </summary>
            <param name="useKindFlags">The use kind flags.</param>
        </member>
        <member name="M:AIMP.SDK.Annotations.UsedImplicitlyAttribute.#ctor(AIMP.SDK.Annotations.ImplicitUseTargetFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.UsedImplicitlyAttribute" /> class.
            </summary>
            <param name="targetFlags">The target flags.</param>
        </member>
        <member name="M:AIMP.SDK.Annotations.UsedImplicitlyAttribute.#ctor(AIMP.SDK.Annotations.ImplicitUseKindFlags,AIMP.SDK.Annotations.ImplicitUseTargetFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.UsedImplicitlyAttribute" /> class.
            </summary>
            <param name="useKindFlags">The use kind flags.</param>
            <param name="targetFlags">The target flags.</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.UsedImplicitlyAttribute.UseKindFlags">
            <summary>
            Gets the use kind flags.
            </summary>
            <value>The use kind flags.</value>
        </member>
        <member name="P:AIMP.SDK.Annotations.UsedImplicitlyAttribute.TargetFlags">
            <summary>
            Gets the target flags.
            </summary>
            <value>The target flags.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.MeansImplicitUseAttribute">
            <summary>
            Should be used on attributes and causes ReSharper
            to not mark symbols marked with such attributes as unused
            (as well as by other usage inspections)
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:AIMP.SDK.Annotations.MeansImplicitUseAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.MeansImplicitUseAttribute" /> class.
            </summary>
        </member>
        <member name="M:AIMP.SDK.Annotations.MeansImplicitUseAttribute.#ctor(AIMP.SDK.Annotations.ImplicitUseKindFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.MeansImplicitUseAttribute" /> class.
            </summary>
            <param name="useKindFlags">The use kind flags.</param>
        </member>
        <member name="M:AIMP.SDK.Annotations.MeansImplicitUseAttribute.#ctor(AIMP.SDK.Annotations.ImplicitUseTargetFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.MeansImplicitUseAttribute" /> class.
            </summary>
            <param name="targetFlags">The target flags.</param>
        </member>
        <member name="M:AIMP.SDK.Annotations.MeansImplicitUseAttribute.#ctor(AIMP.SDK.Annotations.ImplicitUseKindFlags,AIMP.SDK.Annotations.ImplicitUseTargetFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.MeansImplicitUseAttribute" /> class.
            </summary>
            <param name="useKindFlags">The use kind flags.</param>
            <param name="targetFlags">The target flags.</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.MeansImplicitUseAttribute.UseKindFlags">
            <summary>
            Gets the use kind flags.
            </summary>
            <value>The use kind flags.</value>
        </member>
        <member name="P:AIMP.SDK.Annotations.MeansImplicitUseAttribute.TargetFlags">
            <summary>
            Gets the target flags.
            </summary>
            <value>The target flags.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.ImplicitUseKindFlags">
            <summary>
            Enum ImplicitUseKindFlags
            </summary>
        </member>
        <member name="F:AIMP.SDK.Annotations.ImplicitUseKindFlags.Default">
            <summary>
            The default
            </summary>
        </member>
        <member name="F:AIMP.SDK.Annotations.ImplicitUseKindFlags.Access">
            <summary>
            Only entity marked with attribute considered used
            </summary>
        </member>
        <member name="F:AIMP.SDK.Annotations.ImplicitUseKindFlags.Assign">
            <summary>
            Indicates implicit assignment to a member
            </summary>
        </member>
        <member name="F:AIMP.SDK.Annotations.ImplicitUseKindFlags.InstantiatedWithFixedConstructorSignature">
            <summary>
            Indicates implicit instantiation of a type with fixed constructor signature.
            That means any unused constructor parameters won't be reported as such.
            </summary>
        </member>
        <member name="F:AIMP.SDK.Annotations.ImplicitUseKindFlags.InstantiatedNoFixedConstructorSignature">
            <summary>
            Indicates implicit instantiation of a type
            </summary>
        </member>
        <member name="T:AIMP.SDK.Annotations.ImplicitUseTargetFlags">
            <summary>
            Specify what is considered used implicitly when marked
            with <see cref="T:AIMP.SDK.Annotations.MeansImplicitUseAttribute" /> or <see cref="T:AIMP.SDK.Annotations.UsedImplicitlyAttribute" />
            </summary>
        </member>
        <member name="F:AIMP.SDK.Annotations.ImplicitUseTargetFlags.Default">
            <summary>
            The default
            </summary>
        </member>
        <member name="F:AIMP.SDK.Annotations.ImplicitUseTargetFlags.Itself">
            <summary>
            The itself
            </summary>
        </member>
        <member name="F:AIMP.SDK.Annotations.ImplicitUseTargetFlags.Members">
            <summary>
            Members of entity marked with attribute are considered used
            </summary>
        </member>
        <member name="F:AIMP.SDK.Annotations.ImplicitUseTargetFlags.WithMembers">
            <summary>
            Entity marked with attribute and all its members considered used
            </summary>
        </member>
        <member name="T:AIMP.SDK.Annotations.PublicAPIAttribute">
            <summary>
            This attribute is intended to mark publicly available API
            which should not be removed and so is treated as used
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:AIMP.SDK.Annotations.PublicAPIAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.PublicAPIAttribute" /> class.
            </summary>
        </member>
        <member name="M:AIMP.SDK.Annotations.PublicAPIAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.PublicAPIAttribute" /> class.
            </summary>
            <param name="comment">The comment.</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.PublicAPIAttribute.Comment">
            <summary>
            Gets the comment.
            </summary>
            <value>The comment.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.InstantHandleAttribute">
            <summary>
            Tells code analysis engine if the parameter is completely handled
            when the invoked method is on stack. If the parameter is a delegate,
            indicates that delegate is executed while the method is executed.
            If the parameter is an enumerable, indicates that it is enumerated
            while the method is executed
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:AIMP.SDK.Annotations.PureAttribute">
            <summary>
            Indicates that a method does not make any observable state changes.
            The same as <c>System.Diagnostics.Contracts.PureAttribute</c>
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
            <example>
              <code>
            [Pure] private int Multiply(int x, int y) { return x * y; }
            public void Foo() {
            const int a = 2, b = 2;
            Multiply(a, b); // Waring: Return value of pure method is not used
            }
            </code>
            </example>
        </member>
        <member name="T:AIMP.SDK.Annotations.PathReferenceAttribute">
            <summary>
            Indicates that a parameter is a path to a file or a folder within a web project.
            Path can be relative or absolute, starting from web root (~)
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:AIMP.SDK.Annotations.PathReferenceAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.PathReferenceAttribute" /> class.
            </summary>
        </member>
        <member name="M:AIMP.SDK.Annotations.PathReferenceAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.PathReferenceAttribute" /> class.
            </summary>
            <param name="basePath">The base path.</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.PathReferenceAttribute.BasePath">
            <summary>
            Gets the base path.
            </summary>
            <value>The base path.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.AspMvcAreaMasterLocationFormatAttribute">
            <summary>
            Class AspMvcAreaMasterLocationFormatAttribute. This class cannot be inherited.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:AIMP.SDK.Annotations.AspMvcAreaMasterLocationFormatAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.AspMvcAreaMasterLocationFormatAttribute" /> class.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.AspMvcAreaMasterLocationFormatAttribute.Format">
            <summary>
            Gets the format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.AspMvcAreaPartialViewLocationFormatAttribute">
            <summary>
            Class AspMvcAreaPartialViewLocationFormatAttribute. This class cannot be inherited.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:AIMP.SDK.Annotations.AspMvcAreaPartialViewLocationFormatAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.AspMvcAreaPartialViewLocationFormatAttribute" /> class.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.AspMvcAreaPartialViewLocationFormatAttribute.Format">
            <summary>
            Gets the format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.AspMvcAreaViewLocationFormatAttribute">
            <summary>
            Class AspMvcAreaViewLocationFormatAttribute. This class cannot be inherited.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:AIMP.SDK.Annotations.AspMvcAreaViewLocationFormatAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.AspMvcAreaViewLocationFormatAttribute" /> class.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.AspMvcAreaViewLocationFormatAttribute.Format">
            <summary>
            Gets the format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.AspMvcMasterLocationFormatAttribute">
            <summary>
            Class AspMvcMasterLocationFormatAttribute. This class cannot be inherited.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:AIMP.SDK.Annotations.AspMvcMasterLocationFormatAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.AspMvcMasterLocationFormatAttribute" /> class.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.AspMvcMasterLocationFormatAttribute.Format">
            <summary>
            Gets the format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.AspMvcPartialViewLocationFormatAttribute">
            <summary>
            Class AspMvcPartialViewLocationFormatAttribute. This class cannot be inherited.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:AIMP.SDK.Annotations.AspMvcPartialViewLocationFormatAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.AspMvcPartialViewLocationFormatAttribute" /> class.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.AspMvcPartialViewLocationFormatAttribute.Format">
            <summary>
            Gets the format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.AspMvcViewLocationFormatAttribute">
            <summary>
            Class AspMvcViewLocationFormatAttribute. This class cannot be inherited.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:AIMP.SDK.Annotations.AspMvcViewLocationFormatAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.AspMvcViewLocationFormatAttribute" /> class.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.AspMvcViewLocationFormatAttribute.Format">
            <summary>
            Gets the format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.AspMvcActionAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
            is an MVC action. If applied to a method, the MVC action name is calculated
            implicitly from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)</c>
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:AIMP.SDK.Annotations.AspMvcActionAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.AspMvcActionAttribute" /> class.
            </summary>
        </member>
        <member name="M:AIMP.SDK.Annotations.AspMvcActionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.AspMvcActionAttribute" /> class.
            </summary>
            <param name="anonymousProperty">The anonymous property.</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.AspMvcActionAttribute.AnonymousProperty">
            <summary>
            Gets the anonymous property.
            </summary>
            <value>The anonymous property.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.AspMvcAreaAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC area.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)</c>
            Implements the <see cref="T:AIMP.SDK.Annotations.PathReferenceAttribute" />
            </summary>
            <seealso cref="T:AIMP.SDK.Annotations.PathReferenceAttribute" />
        </member>
        <member name="M:AIMP.SDK.Annotations.AspMvcAreaAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.AspMvcAreaAttribute" /> class.
            </summary>
        </member>
        <member name="M:AIMP.SDK.Annotations.AspMvcAreaAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.AspMvcAreaAttribute" /> class.
            </summary>
            <param name="anonymousProperty">The anonymous property.</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.AspMvcAreaAttribute.AnonymousProperty">
            <summary>
            Gets the anonymous property.
            </summary>
            <value>The anonymous property.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.AspMvcControllerAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter is
            an MVC controller. If applied to a method, the MVC controller name is calculated
            implicitly from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String, String)</c>
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:AIMP.SDK.Annotations.AspMvcControllerAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.AspMvcControllerAttribute" /> class.
            </summary>
        </member>
        <member name="M:AIMP.SDK.Annotations.AspMvcControllerAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.AspMvcControllerAttribute" /> class.
            </summary>
            <param name="anonymousProperty">The anonymous property.</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.AspMvcControllerAttribute.AnonymousProperty">
            <summary>
            Gets the anonymous property.
            </summary>
            <value>The anonymous property.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.AspMvcMasterAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC Master. Use this attribute
            for custom wrappers similar to <c>System.Web.Mvc.Controller.View(String, String)</c>
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:AIMP.SDK.Annotations.AspMvcModelTypeAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC model type. Use this attribute
            for custom wrappers similar to <c>System.Web.Mvc.Controller.View(String, Object)</c>
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:AIMP.SDK.Annotations.AspMvcPartialViewAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter is an MVC
            partial view. If applied to a method, the MVC partial view name is calculated implicitly
            from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(HtmlHelper, String)</c>
            Implements the <see cref="T:AIMP.SDK.Annotations.PathReferenceAttribute" />
            </summary>
            <seealso cref="T:AIMP.SDK.Annotations.PathReferenceAttribute" />
        </member>
        <member name="T:AIMP.SDK.Annotations.AspMvcSupressViewErrorAttribute">
            <summary>
            ASP.NET MVC attribute. Allows disabling inspections for MVC views within a class or a method
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:AIMP.SDK.Annotations.AspMvcDisplayTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC display template.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(HtmlHelper, String)</c>
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:AIMP.SDK.Annotations.AspMvcEditorTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC editor template.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.EditorExtensions.EditorForModel(HtmlHelper, String)</c>
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:AIMP.SDK.Annotations.AspMvcTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC template.
            Use this attribute for custom wrappers similar to
            <c>System.ComponentModel.DataAnnotations.UIHintAttribute(System.String)</c>
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:AIMP.SDK.Annotations.AspMvcViewAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
            is an MVC view. If applied to a method, the MVC view name is calculated implicitly
            from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Controller.View(Object)</c>
            Implements the <see cref="T:AIMP.SDK.Annotations.PathReferenceAttribute" />
            </summary>
            <seealso cref="T:AIMP.SDK.Annotations.PathReferenceAttribute" />
        </member>
        <member name="T:AIMP.SDK.Annotations.AspMvcActionSelectorAttribute">
            <summary>
            ASP.NET MVC attribute. When applied to a parameter of an attribute,
            indicates that this parameter is an MVC action name
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
            <example>
              <code>
            [ActionName("Foo")]
            public ActionResultType Login(string returnUrl) {
            ViewBag.ReturnUrl = Url.Action("Foo"); // OK
            return RedirectToAction("Bar"); // Error: Cannot resolve action
            }
            </code>
            </example>
        </member>
        <member name="T:AIMP.SDK.Annotations.HtmlElementAttributesAttribute">
            <summary>
            Class HtmlElementAttributesAttribute. This class cannot be inherited.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:AIMP.SDK.Annotations.HtmlElementAttributesAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.HtmlElementAttributesAttribute" /> class.
            </summary>
        </member>
        <member name="M:AIMP.SDK.Annotations.HtmlElementAttributesAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.HtmlElementAttributesAttribute" /> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.HtmlElementAttributesAttribute.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.HtmlAttributeValueAttribute">
            <summary>
            Class HtmlAttributeValueAttribute. This class cannot be inherited.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:AIMP.SDK.Annotations.HtmlAttributeValueAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.HtmlAttributeValueAttribute" /> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.HtmlAttributeValueAttribute.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.RazorSectionAttribute">
            <summary>
            Razor attribute. Indicates that a parameter or a method is a Razor section.
            Use this attribute for custom wrappers similar to
            <c>System.Web.WebPages.WebPageBase.RenderSection(String)</c>
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:AIMP.SDK.Annotations.CollectionAccessAttribute">
            <summary>
            Indicates how method invocation affects content of the collection
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:AIMP.SDK.Annotations.CollectionAccessAttribute.#ctor(AIMP.SDK.Annotations.CollectionAccessType)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.CollectionAccessAttribute" /> class.
            </summary>
            <param name="collectionAccessType">Type of the collection access.</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.CollectionAccessAttribute.CollectionAccessType">
            <summary>
            Gets the type of the collection access.
            </summary>
            <value>The type of the collection access.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.CollectionAccessType">
            <summary>
            Enum CollectionAccessType
            </summary>
        </member>
        <member name="F:AIMP.SDK.Annotations.CollectionAccessType.None">
            <summary>
            Method does not use or modify content of the collection
            </summary>
        </member>
        <member name="F:AIMP.SDK.Annotations.CollectionAccessType.Read">
            <summary>
            Method only reads content of the collection but does not modify it
            </summary>
        </member>
        <member name="F:AIMP.SDK.Annotations.CollectionAccessType.ModifyExistingContent">
            <summary>
            Method can change content of the collection but does not add new elements
            </summary>
        </member>
        <member name="F:AIMP.SDK.Annotations.CollectionAccessType.UpdatedContent">
            <summary>
            Method can add new elements to the collection
            </summary>
        </member>
        <member name="T:AIMP.SDK.Annotations.AssertionMethodAttribute">
            <summary>
            Indicates that the marked method is assertion method, i.e. it halts control flow if
            one of the conditions is satisfied. To set the condition, mark one of the parameters with
            <see cref="T:AIMP.SDK.Annotations.AssertionConditionAttribute" /> attribute
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:AIMP.SDK.Annotations.AssertionConditionAttribute">
            <summary>
            Indicates the condition parameter of the assertion method. The method itself should be
            marked by <see cref="T:AIMP.SDK.Annotations.AssertionMethodAttribute" /> attribute. The mandatory argument of
            the attribute is the assertion type.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:AIMP.SDK.Annotations.AssertionConditionAttribute.#ctor(AIMP.SDK.Annotations.AssertionConditionType)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.AssertionConditionAttribute" /> class.
            </summary>
            <param name="conditionType">Type of the condition.</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.AssertionConditionAttribute.ConditionType">
            <summary>
            Gets the type of the condition.
            </summary>
            <value>The type of the condition.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.AssertionConditionType">
            <summary>
            Specifies assertion type. If the assertion method argument satisfies the condition,
            then the execution continues. Otherwise, execution is assumed to be halted
            </summary>
        </member>
        <member name="F:AIMP.SDK.Annotations.AssertionConditionType.IS_TRUE">
            <summary>
            Marked parameter should be evaluated to true
            </summary>
        </member>
        <member name="F:AIMP.SDK.Annotations.AssertionConditionType.IS_FALSE">
            <summary>
            Marked parameter should be evaluated to false
            </summary>
        </member>
        <member name="F:AIMP.SDK.Annotations.AssertionConditionType.IS_NULL">
            <summary>
            Marked parameter should be evaluated to null value
            </summary>
        </member>
        <member name="F:AIMP.SDK.Annotations.AssertionConditionType.IS_NOT_NULL">
            <summary>
            Marked parameter should be evaluated to not null value
            </summary>
        </member>
        <member name="T:AIMP.SDK.Annotations.TerminatesProgramAttribute">
            <summary>
            Indicates that the marked method unconditionally terminates control flow execution.
            For example, it could unconditionally throw exception
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:AIMP.SDK.Annotations.LinqTunnelAttribute">
            <summary>
            Indicates that method is pure LINQ method, with postponed enumeration (like Enumerable.Select,
            .Where). This annotation allows inference of [InstantHandle] annotation for parameters
            of delegate type by analyzing LINQ method chains.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:AIMP.SDK.Annotations.NoEnumerationAttribute">
            <summary>
            Indicates that IEnumerable, passed as parameter, is not enumerated.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:AIMP.SDK.Annotations.RegexPatternAttribute">
            <summary>
            Indicates that parameter is regular expression pattern.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:AIMP.SDK.Annotations.XamlItemsControlAttribute">
            <summary>
            XAML attribute. Indicates the type that has <c>ItemsSource</c> property and should be
            treated as <c>ItemsControl</c>-derived type, to enable inner  items <c>DataContext</c>
            type resolve.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:AIMP.SDK.Annotations.XamlItemBindingOfItemsControlAttribute">
            <summary>
            XAML attibute. Indicates the property of some <c>BindingBase</c>-derived type, that
            is used to bind some item of <c>ItemsControl</c>-derived type. This annotation will
            enable the <c>DataContext</c> type resolve for XAML bindings for such properties.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
            <remarks>Property should have the tree ancestor of the <c>ItemsControl</c> type or
            marked with the <see cref="T:AIMP.SDK.Annotations.XamlItemsControlAttribute" /> attribute.</remarks>
        </member>
        <member name="T:AIMP.SDK.Annotations.AspChildControlTypeAttribute">
            <summary>
            Class AspChildControlTypeAttribute. This class cannot be inherited.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:AIMP.SDK.Annotations.AspChildControlTypeAttribute.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.AspChildControlTypeAttribute" /> class.
            </summary>
            <param name="tagName">Name of the tag.</param>
            <param name="controlType">Type of the control.</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.AspChildControlTypeAttribute.TagName">
            <summary>
            Gets the name of the tag.
            </summary>
            <value>The name of the tag.</value>
        </member>
        <member name="P:AIMP.SDK.Annotations.AspChildControlTypeAttribute.ControlType">
            <summary>
            Gets the type of the control.
            </summary>
            <value>The type of the control.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.AspDataFieldAttribute">
            <summary>
            Class AspDataFieldAttribute. This class cannot be inherited.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:AIMP.SDK.Annotations.AspDataFieldsAttribute">
            <summary>
            Class AspDataFieldsAttribute. This class cannot be inherited.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:AIMP.SDK.Annotations.AspMethodPropertyAttribute">
            <summary>
            Class AspMethodPropertyAttribute. This class cannot be inherited.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:AIMP.SDK.Annotations.AspRequiredAttributeAttribute">
            <summary>
            Class AspRequiredAttributeAttribute. This class cannot be inherited.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:AIMP.SDK.Annotations.AspRequiredAttributeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.AspRequiredAttributeAttribute" /> class.
            </summary>
            <param name="attribute">The attribute.</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.AspRequiredAttributeAttribute.Attribute">
            <summary>
            Gets the attribute.
            </summary>
            <value>The attribute.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.AspTypePropertyAttribute">
            <summary>
            Class AspTypePropertyAttribute. This class cannot be inherited.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:AIMP.SDK.Annotations.AspTypePropertyAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.AspTypePropertyAttribute" /> class.
            </summary>
            <param name="createConstructorReferences">if set to <c>true</c> [create constructor references].</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.AspTypePropertyAttribute.CreateConstructorReferences">
            <summary>
            Gets a value indicating whether [create constructor references].
            </summary>
            <value><c>true</c> if [create constructor references]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.RazorImportNamespaceAttribute">
            <summary>
            Class RazorImportNamespaceAttribute. This class cannot be inherited.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:AIMP.SDK.Annotations.RazorImportNamespaceAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.RazorImportNamespaceAttribute" /> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.RazorImportNamespaceAttribute.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.RazorInjectionAttribute">
            <summary>
            Class RazorInjectionAttribute. This class cannot be inherited.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:AIMP.SDK.Annotations.RazorInjectionAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.Annotations.RazorInjectionAttribute" /> class.
            </summary>
            <param name="type">The type.</param>
            <param name="fieldName">Name of the field.</param>
        </member>
        <member name="P:AIMP.SDK.Annotations.RazorInjectionAttribute.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:AIMP.SDK.Annotations.RazorInjectionAttribute.FieldName">
            <summary>
            Gets the name of the field.
            </summary>
            <value>The name of the field.</value>
        </member>
        <member name="T:AIMP.SDK.Annotations.RazorHelperCommonAttribute">
            <summary>
            Class RazorHelperCommonAttribute. This class cannot be inherited.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:AIMP.SDK.Annotations.RazorLayoutAttribute">
            <summary>
            Class RazorLayoutAttribute. This class cannot be inherited.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:AIMP.SDK.Annotations.RazorWriteLiteralMethodAttribute">
            <summary>
            Class RazorWriteLiteralMethodAttribute. This class cannot be inherited.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:AIMP.SDK.Annotations.RazorWriteMethodAttribute">
            <summary>
            Class RazorWriteMethodAttribute. This class cannot be inherited.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:AIMP.SDK.Annotations.RazorWriteMethodParameterAttribute">
            <summary>
            Class RazorWriteMethodParameterAttribute. This class cannot be inherited.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:AIMP.SDK.Annotations.NoReorder">
            <summary>
            Prevents the Member Reordering feature from tossing members of the marked class.
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
            <remarks>The attribute must be mentioned in your member reordering patterns.</remarks>
        </member>
        <member name="T:AIMP.SDK.ActionResultType">
            <summary>
            AIMP Operation Result.
            </summary>
        </member>
        <member name="F:AIMP.SDK.ActionResultType.OK">
            <summary>
            Operation successful complete.
            </summary>
        </member>
        <member name="F:AIMP.SDK.ActionResultType.AccessDenied">
            <summary>
            General access denied error.
            </summary>
        </member>
        <member name="F:AIMP.SDK.ActionResultType.Handle">
            <summary>
            Handle that is not valid.
            </summary>
        </member>
        <member name="F:AIMP.SDK.ActionResultType.InvalidArguments">
            <summary>
            One or more arguments are not valid.
            </summary>
        </member>
        <member name="F:AIMP.SDK.ActionResultType.NotImplemented">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="F:AIMP.SDK.ActionResultType.Unexpected">
            <summary>
            Unexpected failure.
            </summary>
        </member>
        <member name="F:AIMP.SDK.ActionResultType.Fail">
            <summary>
            Unspecified failure.
            </summary>
        </member>
        <member name="T:AIMP.SDK.AimpActionResult">
            <summary>
            Class AimpActionResult.
            </summary>
        </member>
        <member name="M:AIMP.SDK.AimpActionResult.#ctor(AIMP.SDK.ActionResultType)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.AimpActionResult" /> class.
            </summary>
            <param name="resultType">Type of the result.</param>
        </member>
        <member name="P:AIMP.SDK.AimpActionResult.ResultType">
            <summary>
            Gets the type of the result.
            </summary>
            <value>The type of the result.</value>
        </member>
        <member name="T:AIMP.SDK.AimpActionResult`1">
            <summary>
            Class AimpActionResult.
            Implements the <see cref="T:AIMP.SDK.AimpActionResult" />
            </summary>
            <typeparam name="TObject">The type of the t object.</typeparam>
            <seealso cref="T:AIMP.SDK.AimpActionResult" />
        </member>
        <member name="M:AIMP.SDK.AimpActionResult`1.#ctor(AIMP.SDK.ActionResultType)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.AimpActionResult`1" /> class.
            </summary>
            <param name="resultType">Type of the result.</param>
        </member>
        <member name="M:AIMP.SDK.AimpActionResult`1.#ctor(AIMP.SDK.ActionResultType,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.AimpActionResult`1" /> class.
            </summary>
            <param name="resultType">Type of the result.</param>
            <param name="result">The result.</param>
        </member>
        <member name="P:AIMP.SDK.AimpActionResult`1.Result">
            <summary>
            Gets the result.
            </summary>
            <value>The result.</value>
        </member>
        <member name="T:AIMP.SDK.AimpActionResult`2">
            <summary>
            Class AimpActionResult.
            Implements the <see cref="T:AIMP.SDK.AimpActionResult" />
            </summary>
            <typeparam name="TObject1">The type of the t object1.</typeparam>
            <typeparam name="TObject2">The type of the t object2.</typeparam>
            <seealso cref="T:AIMP.SDK.AimpActionResult" />
        </member>
        <member name="M:AIMP.SDK.AimpActionResult`2.#ctor(AIMP.SDK.ActionResultType,`0,`1)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.AimpActionResult`2" /> class.
            </summary>
            <param name="resultType">Type of the result.</param>
            <param name="obj1">The obj1.</param>
            <param name="obj2">The obj2.</param>
        </member>
        <member name="P:AIMP.SDK.AimpActionResult`2.Item1">
            <summary>
            Gets or sets the item1.
            </summary>
            <value>The item1.</value>
        </member>
        <member name="P:AIMP.SDK.AimpActionResult`2.Item2">
            <summary>
            Gets or sets the item2.
            </summary>
            <value>The item2.</value>
        </member>
        <member name="T:AIMP.SDK.IAimpExtension">
            <summary>
            Interface IAimpExtension
            </summary>
        </member>
        <member name="T:AIMP.SDK.Options.IAimpOptionsDialogFrameKeyboardHelper">
            <summary>
            Interface IAimpOptionsDialogFrameKeyboardHelper
            </summary>
        </member>
        <member name="M:AIMP.SDK.Options.IAimpOptionsDialogFrameKeyboardHelper.DialogKey(System.Int32)">
            <summary>
            Dialogs the key.
            </summary>
            <param name="charCode">The character code.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:AIMP.SDK.Options.IAimpOptionsDialogFrameKeyboardHelper.SelectFirstControl">
            <summary>
            Selects the first control.
            </summary>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:AIMP.SDK.Options.IAimpOptionsDialogFrameKeyboardHelper.SelectNextControl(System.Int32,System.Int32)">
            <summary>
            Selects the next control.
            </summary>
            <param name="findForward">The find forward.</param>
            <param name="isTabKeyAction">The is tab key action.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:AIMP.SDK.Options.IAimpServiceOptionsDialog">
            <summary>
            Interface IAimpServiceOptionsDialog
            Implements the <see cref="T:AIMP.SDK.IAimpService" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpService" />
        </member>
        <member name="M:AIMP.SDK.Options.IAimpServiceOptionsDialog.FrameModified(AIMP.SDK.Options.IAimpOptionsDialogFrame)">
            <summary>
            Frames the modified.
            </summary>
            <param name="frame">The frame.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Options.IAimpServiceOptionsDialog.FrameShow(AIMP.SDK.Options.IAimpOptionsDialogFrame,System.Boolean)">
            <summary>
            Frames the show.
            </summary>
            <param name="frame">The frame.</param>
            <param name="forceShow">if set to <c>true</c> [force show].</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.Options.OptionsDialogFrameNotificationType">
            <summary>
            Enum OptionsDialogFrameNotificationType
            </summary>
        </member>
        <member name="F:AIMP.SDK.Options.OptionsDialogFrameNotificationType.Load">
            <summary>
            Custom frame should initialize all settings with values from configuration file.
            </summary>
        </member>
        <member name="F:AIMP.SDK.Options.OptionsDialogFrameNotificationType.Localization">
            <summary>
            localization has been changed, custom frame should update localization of embedded controls.
            </summary>
        </member>
        <member name="F:AIMP.SDK.Options.OptionsDialogFrameNotificationType.Save">
            <summary>
            Custom frame should save all settings to configuration file.
            </summary>
        </member>
        <member name="F:AIMP.SDK.Options.OptionsDialogFrameNotificationType.CanSave">
            <summary>
            Notification occurs before saving to an ability to validate settings.
            If one of settings is not valid - plugin should raise the exception. Note that text of exception will not shown to
            user.
            </summary>
        </member>
        <member name="T:AIMP.SDK.Options.IAimpOptionsDialogFrame">
            <summary>
            Interface IAimpOptionsDialogFrame
            Implements the <see cref="T:AIMP.SDK.IAimpExtension" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpExtension" />
        </member>
        <member name="M:AIMP.SDK.Options.IAimpOptionsDialogFrame.GetName">
            <summary>
            Gets the name.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:AIMP.SDK.Options.IAimpOptionsDialogFrame.CreateFrame(System.IntPtr)">
            <summary>
            Creates the frame.
            </summary>
            <param name="parentWindow">The parent window.</param>
            <returns>IntPtr.</returns>
        </member>
        <member name="M:AIMP.SDK.Options.IAimpOptionsDialogFrame.DestroyFrame">
            <summary>
            Destroys the frame.
            </summary>
        </member>
        <member name="M:AIMP.SDK.Options.IAimpOptionsDialogFrame.Notification(AIMP.SDK.Options.OptionsDialogFrameNotificationType)">
            <summary>
            Occurs when [notification].
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="T:AIMP.SDK.TagEditor.IAimpFileTag">
            <summary>
            Interface IAimpFileTag
            Implements the <see cref="T:AIMP.SDK.FileManager.IAimpFileInfo" />
            </summary>
            <seealso cref="T:AIMP.SDK.FileManager.IAimpFileInfo" />
        </member>
        <member name="P:AIMP.SDK.TagEditor.IAimpFileTag.TagId">
            <summary>
            Gets or sets the tag identifier.
            </summary>
            <value>The tag identifier.</value>
        </member>
        <member name="P:AIMP.SDK.TagEditor.IAimpFileTag.DeleteOnSaving">
            <summary>
            Gets or sets a value indicating whether [delete on saving].
            </summary>
            <value><c>true</c> if [delete on saving]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:AIMP.SDK.TagEditor.IAimpFileTagEditor">
            <summary>
            Provide ability to get access to tag editor.
            </summary>
        </member>
        <member name="M:AIMP.SDK.TagEditor.IAimpFileTagEditor.GetMixedInfo">
            <summary>
            Gets the mixed information from all tags and returns it as a <see cref="T:AIMP.SDK.FileManager.IAimpFileInfo" />.
            </summary>
            <returns>AimpActionResult&lt;IAimpFileInfo&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.TagEditor.IAimpFileTagEditor.GetTag(System.Int32)">
            <summary>
            Gets the tag.
            </summary>
            <param name="index">The index.</param>
            <returns>AimpActionResult&lt;IAimpFileTag&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.TagEditor.IAimpFileTagEditor.GetTagCount">
            <summary>
            Gets the tag count.
            </summary>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:AIMP.SDK.TagEditor.IAimpFileTagEditor.SetToAll(AIMP.SDK.FileManager.IAimpFileInfo)">
            <summary>
            Sets value to all tags.
            </summary>
            <param name="fileInfo">The file information.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.TagEditor.IAimpFileTagEditor.Save">
            <summary>
            Saves all changes to file.
            </summary>
            <returns>ActionResultType.</returns>
        </member>
        <member name="T:AIMP.SDK.TagEditor.TagType">
            <summary>
            Enum TagType
            </summary>
        </member>
        <member name="F:AIMP.SDK.TagEditor.TagType.Custom">
            <summary>
            The custom
            </summary>
        </member>
        <member name="F:AIMP.SDK.TagEditor.TagType.ApeV2">
            <summary>
            The ape v2
            </summary>
        </member>
        <member name="F:AIMP.SDK.TagEditor.TagType.ID3v1">
            <summary>
            The i D3V1
            </summary>
        </member>
        <member name="F:AIMP.SDK.TagEditor.TagType.ID3v2">
            <summary>
            The i D3V2
            </summary>
        </member>
        <member name="F:AIMP.SDK.TagEditor.TagType.Vorbis">
            <summary>
            The vorbis
            </summary>
        </member>
        <member name="F:AIMP.SDK.TagEditor.TagType.M4A">
            <summary>
            The m4 a
            </summary>
        </member>
        <member name="F:AIMP.SDK.TagEditor.TagType.WMA">
            <summary>
            The wma
            </summary>
        </member>
        <member name="T:AIMP.SDK.TagEditor.IAimpServiceFileTagEditor">
            <summary>
            Provide possibility to access an file tag editor service.
            Implements the <see cref="T:AIMP.SDK.IAimpService" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpService" />
        </member>
        <member name="M:AIMP.SDK.TagEditor.IAimpServiceFileTagEditor.EditFile(System.String)">
            <summary>
            Edits the file.
            </summary>
            <param name="filePath">The file path.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.TagEditor.IAimpServiceFileTagEditor.EditFile(AIMP.SDK.IAimpStream)">
            <summary>
            Edits the file.
            </summary>
            <param name="fileStream">The file stream.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.TagEditor.IAimpServiceFileTagEditor.EditTag(System.String,AIMP.SDK.TagEditor.TagType)">
            <summary>
            Edits the tag.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="tag">The tag.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.TagEditor.IAimpServiceFileTagEditor.EditTag(AIMP.SDK.IAimpStream,AIMP.SDK.TagEditor.TagType)">
            <summary>
            Edits the tag.
            </summary>
            <param name="fileStream">The file stream.</param>
            <param name="tag">The tag.</param>
            <returns>ActionResultType.</returns>
        </member>
        <member name="M:AIMP.SDK.Threading.IAimpServiceThreads.Cancel(System.UIntPtr,AIMP.SDK.Threading.AimpServiceThreadPoolType)">
            <summary>
            Cancels the specified task.
            </summary>
            <param name="taskHandle">The task handle.</param>
            <param name="flags">The flags.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Threading.IAimpServiceThreads.WaitFor(System.UIntPtr)">
            <summary>
            Method provides an ability to wait for task completion.
            </summary>
            <param name="taskHandle">The task handle.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Threading.IAimpServiceThreads.ExecuteInMainThread(AIMP.SDK.Threading.IAimpTask,System.Boolean)">
            <summary>
            Executes the in main thread.
            </summary>
            <param name="task">The task.</param>
            <param name="executeNow">True - the method will not return control until operation has been completed (Not recommended).
            Otherwise, task will be queued and executed when main thread is idle. Default value is False.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Threading.IAimpServiceThreads.ExecuteInThread(AIMP.SDK.Threading.IAimpTask)">
            <summary>
            Executes the specified task.
            </summary>
            <param name="task">The task.</param>
            <returns>AimpActionResult&lt;UIntPtr&gt;.</returns>
        </member>
        <member name="T:AIMP.SDK.Threading.IAimpTask">
            <summary>
            Interface implementation must support asynchronous access.
            </summary>
        </member>
        <member name="M:AIMP.SDK.Threading.IAimpTask.Execute(AIMP.SDK.Threading.IAimpTaskOwner)">
            <summary>
            Executes the task.
            </summary>
            <param name="owner">Owner provides an ability to know if user cancel the task.
            You must abort current operation as soon as possible.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.Threading.IAimpTaskOwner">
            <summary>
            This is tool interface that provides an ability to plugin to be notified about canceling the operation.
            The instance of interface will be created by the application and will be sent to plugin as parameter of the
            <see cref="M:AIMP.SDK.Threading.IAimpTask.Execute(AIMP.SDK.Threading.IAimpTaskOwner)" /> method.
            </summary>
        </member>
        <member name="P:AIMP.SDK.Threading.IAimpTaskOwner.IsCanceled">
            <summary>
            Plugin must break the operation if the property is True.
            </summary>
            <value><c>true</c> if this instance is canceled; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:AIMP.SDK.Threading.IAimpServiceSynchronizer">
            <summary>
            This service provides an ability to run specified task in main thread of the application.
            Implements the <see cref="T:AIMP.SDK.IAimpService" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpService" />
        </member>
        <member name="M:AIMP.SDK.Threading.IAimpServiceSynchronizer.ExecuteInMainThread(AIMP.SDK.Threading.IAimpTask,System.Boolean)">
            <summary>
            Executes the in main thread.
            </summary>
            <param name="task">The task.</param>
            <param name="executeNow">True - the method will not return control until operation has been completed (Not recommended).
            Otherwise, task will be queued and executed when main thread is idle. Default value is False.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.Threading.AimpServiceThreadPoolType">
            <summary>
            Enum AimpServiceThreadPoolType
            </summary>
        </member>
        <member name="F:AIMP.SDK.Threading.AimpServiceThreadPoolType.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:AIMP.SDK.Threading.AimpServiceThreadPoolType.WaitFor">
            <summary>
            the method will not return control until operation has been completed if this flag is used.
            </summary>
        </member>
        <member name="T:AIMP.SDK.Threading.IAimpServiceThreadPool">
            <summary>
            Service provides an access to thread pool and allows to plugin add a task to asynchronous execution.
            Note that count of running threads at same time is limited. All tasks will be added to special queue and will be
            executed when one of the threads is idle.
            <para>
            Make sure that all your tasks is completed or canceled during plugin finalization.
            </para>
            Implements the <see cref="T:AIMP.SDK.IAimpService" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpService" />
        </member>
        <member name="M:AIMP.SDK.Threading.IAimpServiceThreadPool.Cancel(System.UIntPtr,AIMP.SDK.Threading.AimpServiceThreadPoolType)">
            <summary>
            Cancels the specified task.
            </summary>
            <param name="taskHandle">The task handle.</param>
            <param name="flags">The flags.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Threading.IAimpServiceThreadPool.Execute(AIMP.SDK.Threading.IAimpTask)">
            <summary>
            Executes the specified task.
            </summary>
            <param name="task">The task.</param>
            <returns>AimpActionResult&lt;UIntPtr&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.Threading.IAimpServiceThreadPool.WaitFor(System.UIntPtr)">
            <summary>
            Method provides an ability to wait for task completion.
            </summary>
            <param name="taskHandle">The task handle.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.Threading.AimpTaskPriority">
            <summary>
            Enum AimpTaskPriority
            </summary>
        </member>
        <member name="F:AIMP.SDK.Threading.AimpTaskPriority.Normal">
            <summary>
            The normal
            </summary>
        </member>
        <member name="F:AIMP.SDK.Threading.AimpTaskPriority.Low">
            <summary>
            The low
            </summary>
        </member>
        <member name="F:AIMP.SDK.Threading.AimpTaskPriority.Hight">
            <summary>
            The hight
            </summary>
        </member>
        <member name="T:AIMP.SDK.Threading.IAimpTaskPriority">
            <summary>
            This is tool interface that provides an ability to plugin define priority of task.
            Interface should be implemented on same to <see cref="T:AIMP.SDK.Threading.IAimpTask" /> level. Priority affects to task position in the
            waiting queue (waiting queue is used if all threads from pool are busy) and to priority of working thread.
            </summary>
        </member>
        <member name="M:AIMP.SDK.Threading.IAimpTaskPriority.GetPriority">
            <summary>
            Gets the priority.
            </summary>
            <returns>The <see cref="T:AIMP.SDK.Threading.AimpTaskPriority" /> priority.</returns>
        </member>
        <member name="T:AIMP.SDK.AimpPluginType">
            <summary>
            Enum AimpPluginType
            </summary>
        </member>
        <member name="F:AIMP.SDK.AimpPluginType.Addons">
            <summary>
            The addons
            </summary>
        </member>
        <member name="F:AIMP.SDK.AimpPluginType.Decoders">
            <summary>
            The decoders
            </summary>
        </member>
        <member name="F:AIMP.SDK.AimpPluginType.Visuals">
            <summary>
            The visuals
            </summary>
        </member>
        <member name="F:AIMP.SDK.AimpPluginType.DSP">
            <summary>
            The DSP
            </summary>
        </member>
        <member name="T:AIMP.SDK.AimpPluginAttribute">
            <summary>
            This attribute should mark plugin class
            Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:AIMP.SDK.AimpPluginAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            Mark AIMP plugin class
            </summary>
            <param name="name">Plugin's name</param>
            <param name="author">Plugin's author</param>
            <param name="version">Plugin's version (format: x.xx)</param>
        </member>
        <member name="P:AIMP.SDK.AimpPluginAttribute.Author">
            <summary>
            Plugin's author
            </summary>
            <value>The author.</value>
        </member>
        <member name="P:AIMP.SDK.AimpPluginAttribute.Name">
            <summary>
            Plugin's name
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:AIMP.SDK.AimpPluginAttribute.Description">
            <summary>
            Short description
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:AIMP.SDK.AimpPluginAttribute.RequireAppDomain">
            <summary>
            Defined if plugin should run in separate AppDomain.
            </summary>
            <value><c>true</c> if [require application domain]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.AimpPluginAttribute.Version">
            <summary>
            Version of plugin (format: x.xx)
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:AIMP.SDK.AimpPluginAttribute.FullDescription">
            <summary>
            Gets or sets the full description.
            </summary>
            <value>The full description.</value>
        </member>
        <member name="P:AIMP.SDK.AimpPluginAttribute.AimpPluginType">
            <summary>
            Gets or sets the type of the aimp plugin.
            </summary>
            <value>The type of the aimp plugin.</value>
        </member>
        <member name="P:AIMP.SDK.AimpPluginAttribute.IsExternalSettingsDialog">
            <summary>
            Gets or sets a value indicating whether this plugin is support external settings dialog.
            </summary>
            <value><c>true</c> if this instance is external settings dialog; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:AIMP.SDK.AimpPlayerState">
            <summary>
            Enum AimpPlayerState
            </summary>
        </member>
        <member name="F:AIMP.SDK.AimpPlayerState.Stopped">
            <summary>
            The stopped
            </summary>
        </member>
        <member name="F:AIMP.SDK.AimpPlayerState.Pause">
            <summary>
            The pause
            </summary>
        </member>
        <member name="F:AIMP.SDK.AimpPlayerState.Playing">
            <summary>
            The playing
            </summary>
        </member>
        <member name="T:AIMP.SDK.AimpWindowHandleTypes">
            <summary>
            Enum AimpWindowHandleTypes
            </summary>
        </member>
        <member name="F:AIMP.SDK.AimpWindowHandleTypes.MainForm">
            <summary>
            The main form
            </summary>
        </member>
        <member name="F:AIMP.SDK.AimpWindowHandleTypes.Application">
            <summary>
            The application
            </summary>
        </member>
        <member name="F:AIMP.SDK.AimpWindowHandleTypes.TrayControl">
            <summary>
            The tray control
            </summary>
        </member>
        <member name="F:AIMP.SDK.AimpWindowHandleTypes.PlaylistForm">
            <summary>
            The playlist form
            </summary>
        </member>
        <member name="F:AIMP.SDK.AimpWindowHandleTypes.EqualizerForm">
            <summary>
            The equalizer form
            </summary>
        </member>
        <member name="T:AIMP.SDK.AimpEventsDelegate">
            <summary>
            Delegate AimpEventsDelegate
            </summary>
            <param name="param1">The param1.</param>
            <param name="param2">The param2.</param>
        </member>
        <member name="T:AIMP.SDK.IAimpCore">
            <summary>
            This interface provides an ability to access to services and an ability to register custom services and extensions.
            </summary>
        </member>
        <member name="M:AIMP.SDK.IAimpCore.GetPath(AIMP.SDK.MessageDispatcher.AimpCorePathType)">
            <summary>
            Gets the path to one of the "system" folders of player.
            </summary>
            <param name="aimpCorePath">The aimp core path <seealso cref="!:AimpMessages.AimpCorePathType" /> type.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpCore.SendMessage(AIMP.SDK.MessageDispatcher.AimpCoreMessageType,System.Int32,System.Object)">
            <summary>
            Sends the message.
            </summary>
            <param name="message">The message.</param>
            <param name="param">The parameter.</param>
            <param name="objectParameter">The object parameter.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpCore.RegisterExtension(AIMP.SDK.IAimpExtension)">
            <summary>
            Method provides an ability to register extension.
            An access to extensions provides by specified for it services.For example: IAimpServiceAudioDecoders.
            All extensions will be automatically unregistered from the application before plugin finalization.
            </summary>
            <param name="extension">The Aimp extension.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpCore.UnregisterExtension(AIMP.SDK.IAimpExtension)">
            <summary>
            Method provides an ability to unregister specified extension manually.
            Note 1: all extensions will be automatically unregistered from the application before plugin finalization.So, this
            method is optional.
            Note 2: extension may be used at the current time, in this case it will be completely unregistered only the after
            release
            </summary>
            <param name="extension">The Aimp extension.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpCore.CreateStream">
            <summary>
            Creates the Aimp stream instance.
            </summary>
            <returns>AimpActionResult&lt;IAimpStream&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.IAimpCore.CreateObject``1">
            <summary>
            Creates the object.
            </summary>
            <typeparam name="TAimpObject">The type of the t aimp object.</typeparam>
            <returns>AimpActionResult&lt;IAimpObject&gt;.</returns>
        </member>
        <member name="T:AIMP.SDK.Player.IAimpPlayer">
            <summary>
            Interface IAimpPlayer
            Implements the <see cref="T:System.IDisposable" />
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.Core">
            <summary>
            Gets Player core.
            </summary>
            <value>The core.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.ServiceMenuManager">
            <summary>
            Gets player menu manager.
            </summary>
            <value>The menu manager.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.ServiceActionManager">
            <summary>
            Gets player action manager.
            </summary>
            <value>The action manager.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.ServiceMui">
            <summary>
            Gets the MUI manager.
            </summary>
            <value>The MUI manager.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.ServiceAlbumArt">
            <summary>
            Gets the album art manager.
            </summary>
            <value>The service album art.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.ServiceAlbumArtCache">
            <summary>
            Gets the service album art cache.
            </summary>
            <value>The service album art cache.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.ServiceConfig">
            <summary>
            Gets the configuration manager.
            </summary>
            <value>The service configuration.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.ServicePlaylistManager">
            <summary>
            Gets the play list manager.
            </summary>
            <value>The playlist manager.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.ServicePlaybackQueue">
            <summary>
            Gets the playback queue manager.
            </summary>
            <value>The service playback queue.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.ServiceOptionsDialog">
            <summary>
            Gets the service options dialog.
            </summary>
            <value>The service options dialog.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.ServiceMessageDispatcher">
            <summary>
            Gets the service message dispatcher.
            </summary>
            <value>The service message dispatcher.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.ServiceShutdown">
            <summary>
            Gets the service shutdown.
            </summary>
            <value>The service shutdown.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.IsMute">
            <summary>
            Gets or sets a value indicating whether the volume is mute.
            </summary>
            <value><c>true</c> if this instance is mute; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.Volume">
            <summary>
            Gets or sets the volume.
            </summary>
            <value>The volume.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.Duration">
            <summary>
            Gets the duration.
            </summary>
            <value>The duration.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.State">
            <summary>
            Gets the current player state <see cref="T:AIMP.SDK.AimpPlayerState" />.
            </summary>
            <value>The state.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.CurrentFileInfo">
            <summary>
            Gets the current playing file.
            </summary>
            <value>The current file information.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.CurrentPlaylistItem">
            <summary>
            Gets the current play list item.
            </summary>
            <value>The current play list item.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.Win32Manager">
            <summary>
            Gets the win32 manager.
            </summary>
            <value>The win32 manager.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.ServiceSynchronizer">
            <summary>
            Gets the service synchronizer.
            </summary>
            <value>The service synchronizer.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.ServiceThreadPool">
            <summary>
            Gets the service thread pool.
            </summary>
            <value>The service thread pool.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.ServiceMusicLibrary">
            <summary>
            Gets the service music library.
            </summary>
            <value>The service music library.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.ServiceMusicLibraryUi">
            <summary>
            Gets the service music library UI.
            </summary>
            <value>The service music library UI.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.ServiceFileFormats">
            <summary>
            Gets the service file formats.
            </summary>
            <value>The service file formats.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.ServiceFileInfo">
            <summary>
            Gets the service file information.
            </summary>
            <value>The service file information.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.ServiceFileSystems">
            <summary>
            Gets the service file systems.
            </summary>
            <value>The service file systems.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.ServiceFileStreaming">
            <summary>
            Gets the service file streaming.
            </summary>
            <value>The service file streaming.</value>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.ServiceFileInfoFormatter">
            <summary>
            Gets the file information formatter service.
            </summary>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.ServiceFileTagEditor">
            <summary>
            Gets the service file tag editor.
            </summary>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.ServiceLyrics">
            <summary>
            Gets the lyrics service.
            </summary>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.ServiceThreads">
            <summary>
            Gets the service threads.
            </summary>
        </member>
        <member name="P:AIMP.SDK.Player.IAimpPlayer.ServiceVersionInfo">
            <summary>
            Gets the version information service.
            </summary>
        </member>
        <member name="M:AIMP.SDK.Player.IAimpPlayer.Pause">
            <summary>
            Pauses player.
            </summary>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Player.IAimpPlayer.Resume">
            <summary>
            Resumes player.
            </summary>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Player.IAimpPlayer.Stop">
            <summary>
            Stops player.
            </summary>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Player.IAimpPlayer.StopAfterTrack">
            <summary>
            Stops the after track.
            </summary>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Player.IAimpPlayer.GoToNext">
            <summary>
            Goes to next track.
            </summary>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Player.IAimpPlayer.GoToPrev">
            <summary>
            Goes to previous track.
            </summary>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Player.IAimpPlayer.Play(AIMP.SDK.Playback.IAimpPlaybackQueueItem)">
            <summary>
            Plays the specified queue item.
            </summary>
            <param name="queueItem">The queue item.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Player.IAimpPlayer.Play(AIMP.SDK.Playlist.IAimpPlaylistItem)">
            <summary>
            Plays the specified play list item.
            </summary>
            <param name="playlistItem">The play list item.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Player.IAimpPlayer.Play(AIMP.SDK.Playlist.IAimpPlaylist)">
            <summary>
            Plays the specified play list.
            </summary>
            <param name="playList">The play list.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.IAimpPlugin">
            <summary>
            AIMP plugin interface.
            Implements the <see cref="T:System.IDisposable" />
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:AIMP.SDK.IAimpPlugin.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="T:AIMP.SDK.AimpPlugin">
            <summary>
            Base class for AIMP Plugin.
            Implements the <see cref="T:AIMP.SDK.IAimpPlugin" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpPlugin" />
        </member>
        <member name="P:AIMP.SDK.AimpPlugin.AimpPlayer">
            <summary>
            Gets or sets the aimp player.
            </summary>
            <value>The aimp player.</value>
        </member>
        <member name="P:AIMP.SDK.AimpPlugin.PluginId">
            <summary>
            Gets or sets the plugin identifier.
            </summary>
            <value>The plugin identifier.</value>
        </member>
        <member name="P:AIMP.SDK.AimpPlugin.Player">
            <summary>
            Gets the main player interface <see cref="T:AIMP.SDK.Player.IAimpPlayer" />.
            </summary>
            <value>The player.</value>
        </member>
        <member name="M:AIMP.SDK.AimpPlugin.Initialize">
            <summary>
            Inside this function, plugin should perform all initialization.
            </summary>
        </member>
        <member name="M:AIMP.SDK.AimpPlugin.Dispose">
            <summary>
            Inside this function, plugin should dispose all resources.
            </summary>
        </member>
        <member name="M:AIMP.SDK.AimpPlugin.OnDispose">
            <summary>
            Called when [dispose].
            </summary>
        </member>
        <member name="M:AIMP.SDK.AimpPlugin.OnInitialize(AIMP.SDK.Player.IAimpPlayer,System.Int32)">
            <summary>
            Called when [initialize].
            </summary>
            <param name="player">The player.</param>
            <param name="unId">The un identifier.</param>
        </member>
        <member name="T:AIMP.SDK.CustomAssemblyResolver">
            <summary>
            Class CustomAssemblyResolver.
            </summary>
        </member>
        <member name="F:AIMP.SDK.CustomAssemblyResolver.curPath">
            <summary>
            The current path
            </summary>
        </member>
        <member name="F:AIMP.SDK.CustomAssemblyResolver.isInited">
            <summary>
            The is inited
            </summary>
        </member>
        <member name="M:AIMP.SDK.CustomAssemblyResolver.Initialize(System.String)">
            <summary>
            Initializes the specified path.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:AIMP.SDK.CustomAssemblyResolver.Deinitialize">
            <summary>
            Deinitializes this instance.
            </summary>
        </member>
        <member name="M:AIMP.SDK.CustomAssemblyResolver.CurrentDomainAssemblyResolve(System.Object,System.ResolveEventArgs)">
            <summary>
            Currents the domain assembly resolve.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.ResolveEventArgs" /> instance containing the event data.</param>
            <returns>Assembly.</returns>
        </member>
        <member name="T:AIMP.SDK.PluginLoadUnloadEvent">
            <summary>
            Delegate PluginLoadUnloadEvent
            </summary>
            <param name="sender">The sender.</param>
        </member>
        <member name="T:AIMP.SDK.PluginInformation">
            <summary>
            Information about plugin.
            Implements the <see cref="T:System.IDisposable" />
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="F:AIMP.SDK.PluginInformation._curUniquePluginId">
            <summary>
            The current unique plugin identifier
            </summary>
        </member>
        <member name="F:AIMP.SDK.PluginInformation._inPathToAssembly">
            <summary>
            The in path to assembly
            </summary>
        </member>
        <member name="M:AIMP.SDK.PluginInformation.#ctor(System.IO.FileInfo,System.String,System.String,AIMP.SDK.AimpPluginAttribute)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.PluginInformation" /> class.
            </summary>
            <param name="assemblyPath">The assembly path.</param>
            <param name="assemblyName">Name of the assembly.</param>
            <param name="className">Name of the class.</param>
            <param name="pluginAttribute">The plugin attribute.</param>
        </member>
        <member name="M:AIMP.SDK.PluginInformation.#ctor(System.String,System.String,System.String,AIMP.SDK.AimpPluginAttribute)">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.PluginInformation" /> class.
            </summary>
            <param name="assemblyPath">The assembly path.</param>
            <param name="assemblyName">Name of the assembly.</param>
            <param name="className">Name of the class.</param>
            <param name="pluginAttribute">The plugin attribute.</param>
        </member>
        <member name="P:AIMP.SDK.PluginInformation.AssemblyFileName">
            <summary>
            Gets the name of the assembly file.
            </summary>
            <value>The name of the assembly file.</value>
        </member>
        <member name="P:AIMP.SDK.PluginInformation.PluginAssemblyName">
            <summary>
            Gets the name of the plugin assembly.
            </summary>
            <value>The name of the plugin assembly.</value>
        </member>
        <member name="P:AIMP.SDK.PluginInformation.PluginClassName">
            <summary>
            Gets the name of the plugin class.
            </summary>
            <value>The name of the plugin class.</value>
        </member>
        <member name="P:AIMP.SDK.PluginInformation.IsLoaded">
            <summary>
            Gets a value indicating whether this plugin is loaded.
            </summary>
            <value><c>true</c> if this instance is loaded; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.PluginInformation.PluginInfo">
            <summary>
            Gets the plugin information.
            </summary>
            <value>The plugin information.</value>
        </member>
        <member name="P:AIMP.SDK.PluginInformation.LoadedPlugin">
            <summary>
            Gets the loaded plugin.
            </summary>
            <value>The loaded plugin.</value>
        </member>
        <member name="P:AIMP.SDK.PluginInformation.PluginAppDomainInfo">
            <summary>
            Gets the plugin application domain information (null = current doamin).
            </summary>
            <value>The plugin application domain information.</value>
        </member>
        <member name="M:AIMP.SDK.PluginInformation.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:AIMP.SDK.PluginInformation.GetNewUniqPluginId">
            <summary>
            Gets the new uniq plugin identifier.
            </summary>
            <returns>System.Int32.</returns>
        </member>
        <member name="E:AIMP.SDK.PluginInformation.PluginLoadEvent">
            <summary>
            Occurs when [plugin load event].
            </summary>
        </member>
        <member name="E:AIMP.SDK.PluginInformation.PluginUnloadEvent">
            <summary>
            Occurs when [plugin unload event].
            </summary>
        </member>
        <member name="M:AIMP.SDK.PluginInformation.Load">
            <summary>
            Loads this plugin.
            </summary>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:AIMP.SDK.PluginInformation.Unload">
            <summary>
            Unloads this plugin.
            </summary>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:AIMP.SDK.PluginInformation.ShowSettingDialog(System.IntPtr)">
            <summary>
            Shows the setting dialog.
            </summary>
            <param name="parentWindow">The parent window.</param>
        </member>
        <member name="M:AIMP.SDK.PluginInformation.Initialize(AIMP.SDK.Player.IAimpPlayer)">
            <summary>
            Initializes the specified plugin.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="T:AIMP.SDK.DotNetPluginInfo">
            <summary>
            Plugins information collection.
            Implements the <see cref="!:System.Collections.Generic.ICollection&lt;AIMP.SDK.PluginInformation&gt;" />
            </summary>
            <seealso cref="!:System.Collections.Generic.ICollection&lt;AIMP.SDK.PluginInformation&gt;" />
        </member>
        <member name="F:AIMP.SDK.DotNetPluginInfo._inPluginsList">
            <summary>
            The in plugins list
            </summary>
        </member>
        <member name="M:AIMP.SDK.DotNetPluginInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.DotNetPluginInfo" /> class.
            </summary>
        </member>
        <member name="M:AIMP.SDK.DotNetPluginInfo.#ctor(System.Collections.Generic.IEnumerable{AIMP.SDK.PluginInformation})">
            <summary>
            Initializes a new instance of the <see cref="T:AIMP.SDK.DotNetPluginInfo" /> class.
            </summary>
            <param name="pluginInformations">The plugin informations.</param>
        </member>
        <member name="P:AIMP.SDK.DotNetPluginInfo.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:AIMP.SDK.PluginInformation" /> with the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>PluginInformation.</returns>
        </member>
        <member name="M:AIMP.SDK.DotNetPluginInfo.Add(AIMP.SDK.PluginInformation)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:AIMP.SDK.DotNetPluginInfo.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="M:AIMP.SDK.DotNetPluginInfo.Contains(AIMP.SDK.PluginInformation)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />;
            otherwise, false.</returns>
        </member>
        <member name="M:AIMP.SDK.DotNetPluginInfo.CopyTo(AIMP.SDK.PluginInformation[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="P:AIMP.SDK.DotNetPluginInfo.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:AIMP.SDK.DotNetPluginInfo.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <value><c>true</c> if this instance is read only; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:AIMP.SDK.DotNetPluginInfo.Remove(AIMP.SDK.PluginInformation)">
            <summary>
            Removes the first occurrence of a specific object from the
            <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>true if <paramref name="item" /> was successfully removed from the
            <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if
            <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
        </member>
        <member name="M:AIMP.SDK.DotNetPluginInfo.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the
            collection.</returns>
        </member>
        <member name="M:AIMP.SDK.DotNetPluginInfo.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:AIMP.SDK.DotNetPluginInfo.AddRange(System.Collections.Generic.IEnumerable{AIMP.SDK.PluginInformation})">
            <summary>
            Adds the range.
            </summary>
            <param name="col">The col.</param>
        </member>
        <member name="M:AIMP.SDK.DotNetPluginInfo.UnloadAll">
            <summary>
            Unloads all.
            </summary>
        </member>
        <member name="E:AIMP.SDK.DotNetPluginInfo.PluginLoadEvent">
            <summary>
            Occurs when current plugin is loaded.
            </summary>
        </member>
        <member name="E:AIMP.SDK.DotNetPluginInfo.PluginUnloadEvent">
            <summary>
            Occurs when current plugin is inloaded.
            </summary>
        </member>
        <member name="M:AIMP.SDK.DotNetPluginInfo.item_PluginLoadEvent(AIMP.SDK.PluginInformation)">
            <summary>
            Item_s the plugin load event.
            </summary>
            <param name="sender">The sender.</param>
        </member>
        <member name="M:AIMP.SDK.DotNetPluginInfo.item_PluginUnloadEvent(AIMP.SDK.PluginInformation)">
            <summary>
            Item_s the plugin unload event.
            </summary>
            <param name="sender">The sender.</param>
        </member>
        <member name="T:AIMP.SDK.PluginShortInfoForLoad">
            <summary>
            Struct PluginShortInfoForLoad
            Implements the <see cref="!:System.IEquatable&lt;AIMP.SDK.PluginShortInfoForLoad&gt;" />
            </summary>
            <seealso cref="!:System.IEquatable&lt;AIMP.SDK.PluginShortInfoForLoad&gt;" />
        </member>
        <member name="P:AIMP.SDK.PluginShortInfoForLoad.AssemblyFileName">
            <summary>
            Gets or sets the name of the assembly file.
            </summary>
            <value>The name of the assembly file.</value>
        </member>
        <member name="P:AIMP.SDK.PluginShortInfoForLoad.AssemblyFullName">
            <summary>
            Gets or sets the full name of the assembly.
            </summary>
            <value>The full name of the assembly.</value>
        </member>
        <member name="P:AIMP.SDK.PluginShortInfoForLoad.ClassName">
            <summary>
            Gets or sets the name of the class.
            </summary>
            <value>The name of the class.</value>
        </member>
        <member name="P:AIMP.SDK.PluginShortInfoForLoad.PluginLocInfo">
            <summary>
            Gets or sets the plugin loc information.
            </summary>
            <value>The plugin loc information.</value>
        </member>
        <member name="M:AIMP.SDK.PluginShortInfoForLoad.Equals(AIMP.SDK.PluginShortInfoForLoad)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
        </member>
        <member name="T:AIMP.SDK.PluginLoadingStrategy">
            <summary>
            Class PluginLoadingStrategy.
            Implements the <see cref="T:System.MarshalByRefObject" />
            </summary>
            <seealso cref="T:System.MarshalByRefObject" />
        </member>
        <member name="M:AIMP.SDK.PluginLoadingStrategy.Load(System.String)">
            <summary>
            Loads the specified path.
            </summary>
            <param name="path">The path.</param>
            <returns>PluginShortInfoForLoad.</returns>
        </member>
        <member name="T:AIMP.SDK.AssemblyScanPluginLoadStrategy">
            <summary>
            Class AssemblyScanPluginLoadStrategy.
            Implements the <see cref="T:AIMP.SDK.PluginLoadingStrategy" />
            </summary>
            <seealso cref="T:AIMP.SDK.PluginLoadingStrategy" />
        </member>
        <member name="F:AIMP.SDK.AssemblyScanPluginLoadStrategy._probePath">
            <summary>
            Path to the plugin folder where additional dependencies will be searched for.
            </summary>
        </member>
        <member name="M:AIMP.SDK.AssemblyScanPluginLoadStrategy.AssemblyResolveOverride(System.Object,System.ResolveEventArgs)">
            <summary>
            In case one of plugin dependencies is required during its load and cannot be found in GAC,
            this event handler gets executes by the .NET Framework.
            Then we try to look in the plugin's folder for the requeseted dll and load it manually.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.ResolveEventArgs" /> instance containing the event data.</param>
            <returns>Assembly.</returns>
        </member>
        <member name="M:AIMP.SDK.AssemblyScanPluginLoadStrategy.ScanFiles(System.IO.DirectoryInfo,System.Int32)">
            <summary>
            Scans the files.
            </summary>
            <param name="di">The di.</param>
            <param name="depth">The depth.</param>
            <returns>IEnumerable&lt;FileInfo&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.AssemblyScanPluginLoadStrategy.Load(System.String)">
            <summary>
            Loads the specified path.
            </summary>
            <param name="path">The path.</param>
            <returns>PluginShortInfoForLoad.</returns>
        </member>
        <member name="T:AIMP.SDK.PluginInfoLoader">
            <summary>
            Class PluginInfoLoader.
            </summary>
        </member>
        <member name="F:AIMP.SDK.PluginInfoLoader.LoadStrategyType">
            <summary>
            The load strategy type
            </summary>
        </member>
        <member name="M:AIMP.SDK.PluginInfoLoader.LoadPlugin(System.String)">
            <summary>
            Loads the plugin.
            </summary>
            <param name="path">The path.</param>
            <returns>AimpDotNetPlugin.</returns>
        </member>
        <member name="T:AIMP.SDK.ConfigurationManager.IAimpServiceConfig">
            <summary>
            Configuration manager.
            Implements the <see cref="T:AIMP.SDK.IAimpConfig" />
            Implements the <see cref="T:AIMP.SDK.IAimpService" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpConfig" />
            <seealso cref="T:AIMP.SDK.IAimpService" />
        </member>
        <member name="M:AIMP.SDK.ConfigurationManager.IAimpServiceConfig.FlushCache">
            <summary>
            Flushes the cache.
            </summary>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="T:AIMP.SDK.MenuManager.MenuItemStyle">
            <summary>
            Menu item style.
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.MenuItemStyle.Normal">
            <summary>
            The normal menu item.
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.MenuItemStyle.CheckBox">
            <summary>
            The CheckBox menu item.
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.MenuItemStyle.RadioBox">
            <summary>
            The radio box menu item.
            </summary>
        </member>
        <member name="T:AIMP.SDK.MenuManager.IAimpMenuItem">
            <summary>
            AIMP menu item interface.
            Implements the <see cref="T:AIMP.SDK.ActionManager.IAimpActionEvent" />
            Implements the <see cref="T:AIMP.SDK.IAimpObject" />
            </summary>
            <seealso cref="T:AIMP.SDK.ActionManager.IAimpActionEvent" />
            <seealso cref="T:AIMP.SDK.IAimpObject" />
        </member>
        <member name="P:AIMP.SDK.MenuManager.IAimpMenuItem.Custom">
            <summary>
            This is a user data parameter.
            It allow you to bind custom data to the interface.
            </summary>
            <value>The custom.</value>
        </member>
        <member name="P:AIMP.SDK.MenuManager.IAimpMenuItem.Action">
            <summary>
            Provides an ability to set the <see cref="T:AIMP.SDK.ActionManager.IAimpAction" /> for menu item.
            Menu item will inherits the Name, Enabled, OnExecute event from the action.
            </summary>
            <value>The action.</value>
        </member>
        <member name="P:AIMP.SDK.MenuManager.IAimpMenuItem.Id">
            <summary>
            Gets or sets the identifier.
            Must be unique for all plugins.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:AIMP.SDK.MenuManager.IAimpMenuItem.Name">
            <summary>
            Gets or sets the menu item display name.
            Support the automatic localization.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:AIMP.SDK.MenuManager.IAimpMenuItem.Checked">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:AIMP.SDK.MenuManager.IAimpMenuItem" /> is checked.
            Actual only for CheckBox and RadioBox style.
            </summary>
            <value><c>true</c> if checked; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.MenuManager.IAimpMenuItem.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:AIMP.SDK.MenuManager.IAimpMenuItem" /> is enabled.
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.MenuManager.IAimpMenuItem.Glyph">
            <summary>
            Menu item glyph (optional).
            Note that image must be 32-bit with correct alpha channel.
            </summary>
            <value>The glyph.</value>
        </member>
        <member name="P:AIMP.SDK.MenuManager.IAimpMenuItem.Parent">
            <summary>
            Gets or sets the parent menu item.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:AIMP.SDK.MenuManager.IAimpMenuItem.Style">
            <summary>
            Gets or sets the <see cref="T:AIMP.SDK.MenuManager.MenuItemStyle" />.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:AIMP.SDK.MenuManager.IAimpMenuItem.Visible">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:AIMP.SDK.MenuManager.IAimpMenuItem" /> is visible.
            </summary>
            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.MenuManager.IAimpMenuItem.IsDefault">
            <summary>
            Gets or sets a value indicating whether this instance is default.
            Each level of menu can contains only one default item. Default item uses bold font for the text.
            </summary>
            <value><c>true</c> if this instance is default; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.MenuManager.IAimpMenuItem.Shortcut">
            <summary>
            Local hotkey for menu item. Cannot be customized by end user.
            Refer to the <see cref="M:AIMP.SDK.ActionManager.IAimpServiceActionManager.MakeHotkey(System.Windows.Input.ModifierKeys,System.UInt32)" />.
            Refer to the <see cref="T:AIMP.SDK.ActionManager.IAimpAction" />.
            </summary>
            <value>The shortcut.</value>
        </member>
        <member name="M:AIMP.SDK.MenuManager.IAimpMenuItem.DeleteChildren">
            <summary>
            Deletes the children.
            </summary>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="E:AIMP.SDK.MenuManager.IAimpMenuItem.OnShow">
            <summary>
            Occurs when [on show].
            </summary>
        </member>
        <member name="T:AIMP.SDK.MenuManager.ParentMenuType">
            <summary>
            AIMP Parent menu item.
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.CommonUtilities">
            <summary>
            The common utilities
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.PlayerMainFunctions">
            <summary>
            The player main functions
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.PlayerMainOpen">
            <summary>
            The player main open
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.PlayerMainOptions">
            <summary>
            The player main options
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.PlayerPlaylistAdding">
            <summary>
            The player playlist adding
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.PlayerPlaylistDeletion">
            <summary>
            The player playlist deletion
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.PlayerPlaylistSorting">
            <summary>
            The player playlist sorting
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.PlayerPlaylistMiscellaneous">
            <summary>
            The player playlist miscellaneous
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.PlayerPlaylistManage">
            <summary>
            The player playlist manage
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.PlayerPlaylistContextAdding">
            <summary>
            The player playlist context adding
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.PlayerPlaylistContextQueue">
            <summary>
            The player playlist context queue
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.PlayerPlaylistContextFunctions">
            <summary>
            The player playlist context functions
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.PlayerPlaylistContextSending">
            <summary>
            The player playlist context sending
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.PlayerPlaylistContextDeletion">
            <summary>
            The player playlist context deletion
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.PlayerTray">
            <summary>
            The player tray
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.PlayerEqLib">
            <summary>
            The player eq library
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.PlayerStopOptions">
            <summary>
            The player stop options
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.MlMiscellaneous">
            <summary>
            The ml miscellaneous
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.MlDeletion">
            <summary>
            The ml deletion
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.MlMainDB">
            <summary>
            The ml main database
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.MlMainFuntions">
            <summary>
            The ml main funtions
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.MlMainOpen">
            <summary>
            The ml main open
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.mlMainOptions">
            <summary>
            The ml main options
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.MlTableContextAdding">
            <summary>
            The ml table context adding
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.MlTableContextFunctions">
            <summary>
            The ml table context functions
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.MlTableContextSending">
            <summary>
            The ml table context sending
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.MlTableContextDeletion">
            <summary>
            The ml table context deletion
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.MlTreeContextFunctions">
            <summary>
            The ml tree context functions
            </summary>
        </member>
        <member name="F:AIMP.SDK.MenuManager.ParentMenuType.MlTreeContextDeletion">
            <summary>
            The ml tree context deletion
            </summary>
        </member>
        <member name="T:AIMP.SDK.MenuManager.IAimpServiceMenuManager">
            <summary>
            Menu manager interface.
            Implements the <see cref="T:AIMP.SDK.IAimpService" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpService" />
        </member>
        <member name="M:AIMP.SDK.MenuManager.IAimpServiceMenuManager.Add(AIMP.SDK.MenuManager.ParentMenuType,AIMP.SDK.MenuManager.IAimpMenuItem)">
            <summary>
            Adds the new menu item..
            </summary>
            <param name="parentMenuType">Type of the parent menu.</param>
            <param name="item">Menu item <see cref="T:AIMP.SDK.MenuManager.IAimpMenuItem" />.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.MenuManager.IAimpServiceMenuManager.Add(AIMP.SDK.MenuManager.IAimpMenuItem)">
            <summary>
            Adds the new menu item.
            </summary>
            <param name="item">Menu item <see cref="T:AIMP.SDK.MenuManager.IAimpMenuItem" />.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.MenuManager.IAimpServiceMenuManager.Delete(AIMP.SDK.MenuManager.IAimpMenuItem)">
            <summary>
            Deletes the menu item.
            </summary>
            <param name="item">The menu item.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.MenuManager.IAimpServiceMenuManager.Delete(System.String)">
            <summary>
            Deletes the menu item.
            </summary>
            <param name="id">The identifier.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.MenuManager.IAimpServiceMenuManager.GetById(System.String)">
            <summary>
            Gets the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>AimpActionResult&lt;IAimpMenuItem&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.MenuManager.IAimpServiceMenuManager.GetBuiltIn(AIMP.SDK.MenuManager.ParentMenuType)">
            <summary>
            Gets the standard menu item.
            </summary>
            <param name="menuType">Type of the menu.</param>
            <returns>AimpActionResult&lt;IAimpMenuItem&gt;.</returns>
        </member>
        <member name="T:AIMP.SDK.MUIManager.IAimpServiceMUI">
            <summary>
            MUI manager.
            Implements the <see cref="T:AIMP.SDK.IAimpService" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpService" />
        </member>
        <member name="M:AIMP.SDK.MUIManager.IAimpServiceMUI.GetName">
            <summary>
            Gets the current locale name.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:AIMP.SDK.MUIManager.IAimpServiceMUI.GetValue(System.String)">
            <summary>
            Gets the value.
            </summary>
            <param name="key">The key.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:AIMP.SDK.MUIManager.IAimpServiceMUI.GetValuePart(System.String,System.Int32)">
            <summary>
            Gets the value part.
            </summary>
            <param name="key">The key.</param>
            <param name="index">The index.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:AIMP.SDK.Visuals.AimpVisualData">
            <summary>
            This structure contains visualization data that needed for frame rendering.
            <para>Data was calculated before the volume, balance and anti-clipping filters were applied.</para>
            </summary>
        </member>
        <member name="P:AIMP.SDK.Visuals.AimpVisualData.Peaks">
            <summary>
            An array of two elements of float (32-bit floating point value) type.
            Current signal level in left and right channels[0.0.. 1.0..infinity], where 1.0 is equals to 0 dB
            </summary>
            <value>The peaks.</value>
        </member>
        <member name="P:AIMP.SDK.Visuals.AimpVisualData.Spectrum">
            <summary>
            An array of three elements of float type.
            0 - spectrum of left channel
            1 - spectrum of right channel
            2 - spectrum of both channels
            This field is populated only if the extension returns the <see cref="F:AIMP.SDK.Visuals.AimpVisualFlags.RQDDataSpectrum" /> flag in
            the GetFlags method.
            <para>
            Here is short table of relationships between array index and freq of the signal:
            0 ~ 20 Hz
            10 ~ 200 Hz
            20 ~ 400 Hz
            30 ~ 630 Hz
            40 ~ 870 Hz
            50 ~ 1.1 KHz
            60 ~ 1.4 KHz
            70 ~ 1.7 KHz
            80 ~ 2.1 KHz
            90 ~ 2.5 KHz
            100 ~ 3.0 KHz
            110 ~ 3.5 KHz
            120 ~ 4.0 KHz
            130 ~ 4.5 KHz
            140 ~ 5.2 KHz
            150 ~ 6.0 KHz
            160 ~ 6.7 KHz
            170 ~ 7.6 KHz
            180 ~ 8.5 KHz
            190 ~ 9.6 KHz
            200 ~ 11.0 KHz
            210 ~ 12.0 KHz
            220 ~ 13.5 KHz
            230 ~ 15.0 KHz
            240 ~ 16.8 KHz
            255 ~ 20.0 KHz
            </para>
            </summary>
            <value>The spectrum.</value>
        </member>
        <member name="P:AIMP.SDK.Visuals.AimpVisualData.WaveForm">
            <summary>
            An array of two elements of float type.
            Source data of left and right channels in wave-form.
            This field is populated only if the extension returns the <see cref="F:AIMP.SDK.Visuals.AimpVisualFlags.RQDDataWave" /> flag in the
            GetFlags method.
            <para>
            32-bit float per sample.
            Sample range is [-infinity.. -1.0 .. 0.0 .. 1.0 .. infinity], where |1.0| is equals to 0 dbFS.
            </para>
            </summary>
            <value>The wave form.</value>
        </member>
        <member name="T:AIMP.SDK.Visuals.AimpVisualFlags">
            <summary>
            Enum AimpVisualFlags
            </summary>
        </member>
        <member name="F:AIMP.SDK.Visuals.AimpVisualFlags.RQDDataWave">
            <summary>
            Plugin required WaveForm data for rendering.
            </summary>
        </member>
        <member name="F:AIMP.SDK.Visuals.AimpVisualFlags.RQDDataSpectrum">
            <summary>
            Plugin required Spectrum data for rendering.
            </summary>
        </member>
        <member name="F:AIMP.SDK.Visuals.AimpVisualFlags.NotSuspend">
            <summary>
            Rendering must not be suspended even if the VisualDisplay window is hidden or inaccessible.
            </summary>
        </member>
        <member name="T:AIMP.SDK.Visuals.IAimpExtensionCustomVisualization">
            <summary>
            This is extension for the <see cref="T:AIMP.SDK.Visuals.IAimpServiceVisualizations" /> service.
            This type of visualization provides an ability to render visualization outside of the visual display of player, and
            not depended from user choice.
            <para>
            Instance should be created by plugin and must be registered in the application in the
            <see cref="M:AIMP.SDK.AimpPlugin.Initialize" /> method via the <see cref="M:AIMP.SDK.IAimpCore.RegisterExtension(AIMP.SDK.IAimpExtension)" /> method.
            </para>
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpExtension" />
        </member>
        <member name="M:AIMP.SDK.Visuals.IAimpExtensionCustomVisualization.GetFlags">
            <summary>
            Gets the combinations of the <see cref="T:AIMP.SDK.Visuals.AimpVisualFlags" />.
            </summary>
            <returns>AimpVisualFlags.</returns>
        </member>
        <member name="M:AIMP.SDK.Visuals.IAimpExtensionCustomVisualization.Draw(AIMP.SDK.Visuals.AimpVisualData)">
            <summary>
            Draws the specified data.
            </summary>
            <param name="data">The visual data <see cref="T:AIMP.SDK.Visuals.AimpVisualData" />.</param>
        </member>
        <member name="T:AIMP.SDK.Visuals.AimpVisualClickButtonType">
            <summary>
            Enum AimpVisualClickButtonType
            </summary>
        </member>
        <member name="F:AIMP.SDK.Visuals.AimpVisualClickButtonType.LeftButton">
            <summary>
            The aimp visual click button left
            </summary>
        </member>
        <member name="F:AIMP.SDK.Visuals.AimpVisualClickButtonType.MiddleButton">
            <summary>
            The aimp visual click button middle
            </summary>
        </member>
        <member name="T:AIMP.SDK.Visuals.IAimpExtensionEmbeddedVisualization">
            <summary>
            This type visualization displays on visual display of player only and can be chosen by user.
            <para>
            Instance should be created by plugin and must be registered in the application in the
            <see cref="M:AIMP.SDK.AimpPlugin.Initialize" /> method via the <see cref="M:AIMP.SDK.IAimpCore.RegisterExtension(AIMP.SDK.IAimpExtension)" /> method.
            </para>
            Implements the <see cref="T:AIMP.SDK.IAimpExtension" />
            </summary>
            <seealso cref="T:AIMP.SDK.IAimpExtension" />
        </member>
        <member name="M:AIMP.SDK.Visuals.IAimpExtensionEmbeddedVisualization.Click(System.Int32,System.Int32,AIMP.SDK.Visuals.AimpVisualClickButtonType)">
            <summary>
            Occurs when user clicked on visualization.
            </summary>
            <param name="x">Position by X.</param>
            <param name="y">Position by Y.</param>
            <param name="button">The mouse button.</param>
        </member>
        <member name="M:AIMP.SDK.Visuals.IAimpExtensionEmbeddedVisualization.Resize(System.Int32,System.Int32)">
            <summary>
            Occurs when the sizes of the visualization window are changed.
            </summary>
            <param name="newWidth">The new width.</param>
            <param name="newHeight">The new height.</param>
        </member>
        <member name="M:AIMP.SDK.Visuals.IAimpExtensionEmbeddedVisualization.GetFlags">
            <summary>
            Returns zero or combination of followed flags <seealso cref="T:AIMP.SDK.Visuals.AimpVisualFlags" />.
            </summary>
            <returns>AimpVisualFlags.</returns>
        </member>
        <member name="M:AIMP.SDK.Visuals.IAimpExtensionEmbeddedVisualization.GetMaxDisplaySize">
            <summary>
            Method returns a maximal resolution supported by the extension. If current resolution is not supported by
            extension, player will automatically stretch output.
            </summary>
            <returns>Item1 is width, Item2 is height.</returns>
        </member>
        <member name="M:AIMP.SDK.Visuals.IAimpExtensionEmbeddedVisualization.GetName">
            <summary>
            Gets the visualization display name.
            </summary>
            <returns>AimpActionResult&lt;System.String&gt;.</returns>
        </member>
        <member name="M:AIMP.SDK.Visuals.IAimpExtensionEmbeddedVisualization.Initialize(System.Int32,System.Int32)">
            <summary>
            Initializes the visualization. Occurs when user activate the visualization.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>AimpActionResult.</returns>
        </member>
        <member name="M:AIMP.SDK.Visuals.IAimpExtensionEmbeddedVisualization.OnFinalize">
            <summary>
            Called when visualization should be finalized.
            </summary>
        </member>
        <member name="M:AIMP.SDK.Visuals.IAimpExtensionEmbeddedVisualization.Draw(System.IntPtr,AIMP.SDK.Visuals.AimpVisualData)">
            <summary>
            Draws visualization on the specified output screen.
            </summary>
            <param name="dc">The output screen handle.</param>
            <param name="data">The visualization data <seealso cref="T:AIMP.SDK.Visuals.AimpVisualData" />.</param>
        </member>
        <member name="T:AIMP.SDK.Visuals.IAimpServiceVisualizations">
            <summary>
            Service have no any methods and properties.
            </summary>
        </member>
        <member name="T:AIMP.SDK.Win32.IWin32Manager">
            <summary>
            Interface IWin32Manager
            </summary>
        </member>
        <member name="M:AIMP.SDK.Win32.IWin32Manager.GetAimpHandle">
            <summary>
            Gets the aimp handle.
            </summary>
            <returns>IntPtr.</returns>
        </member>
        <member name="M:AIMP.SDK.Win32.IWin32Manager.SetParentWindow(System.IntPtr,System.IntPtr)">
            <summary>
            Sets the parent window.
            </summary>
            <param name="child">The child.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:AIMP.SDK.Win32.IWin32Manager.GetWindowPosition(System.IntPtr)">
            <summary>
            Gets the window position.
            </summary>
            <param name="handle">The handle.</param>
            <returns>Point.</returns>
        </member>
        <member name="T:AIMP.SDK.AimpDotNetPlugin">
            <summary>
            DotNet plugin information.
            </summary>
        </member>
        <member name="P:AIMP.SDK.AimpDotNetPlugin.PluginInformation">
            <summary>
            Gets or sets the plugin information.
            </summary>
            <value>The plugin information.</value>
        </member>
        <member name="P:AIMP.SDK.AimpDotNetPlugin.IsDebugMode">
            <summary>
            Gets or sets a value indicating whether this instance is debug mode.
            </summary>
            <value><c>true</c> if this instance is debug mode; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AIMP.SDK.AimpDotNetPlugin.AimpPlugin">
            <summary>
            Gets or sets the plugins collection.
            </summary>
            <value>The aimp plugin.</value>
        </member>
        <member name="P:AIMP.SDK.AimpDotNetPlugin.Author">
            <summary>
            Plugin's author
            </summary>
            <value>The author.</value>
        </member>
        <member name="P:AIMP.SDK.AimpDotNetPlugin.Name">
            <summary>
            Plugin's name
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:AIMP.SDK.AimpDotNetPlugin.Description">
            <summary>
            Short description
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:AIMP.SDK.AimpDotNetPlugin.Version">
            <summary>
            Version of plugin (format: x.xx)
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:AIMP.SDK.AimpDotNetPlugin.FullDescription">
            <summary>
            Gets or sets the full description.
            </summary>
            <value>The full description.</value>
        </member>
    </members>
</doc>
